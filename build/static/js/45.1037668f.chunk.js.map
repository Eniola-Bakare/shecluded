{"version":3,"sources":["components/dashboard/loan-details.js","components/newdashboard/LoanDetails.js","../node_modules/numeral/numeral.js","components/priceCard/index.js"],"names":["withRouter","_ref","match","history","_useState","useState","loanDetails","isLoading","_useState2","Object","_home_eebakare_gitclone_shecluded_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","state","setState","token","JSON","parse","sessionStorage","getItem","useEffect","_home_eebakare_gitclone_shecluded_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","axios","method","url","concat","individualLoanRequest","params","id","headers","Content-Type","Authorization","timeout","timeOut","then","result","data","respCode","respBody","errorMessage","respDescription","catch","err","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_2__","className","onClick","goBack","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","stroke-linecap","stroke-linejoin","window","location","reload","fill-rule","clip-rule","createdAt","style","color","fontWeight","moment","format","status","_priceCard__WEBPACK_IMPORTED_MODULE_9__","background","value","text","_shared_isLoadingData_isLoadingData__WEBPACK_IMPORTED_MODULE_7__","requestedAmount","durationType","loanPaybacks","interestRate","loanDuration","totalPaymentAmount","overflowX","map","loan","i","currentPrincipal","interest","payableAmount","paymentDate","key","scope","numeral","substring","styleForButton","textTransform","Dashboardmain","props","_home_eebakare_gitclone_shecluded_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","padding","margin","_dashboard_loan_details__WEBPACK_IMPORTED_MODULE_2__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_numeral","_","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","this","_input","_value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","length","regexps","unformat","stringToNumber","Number","version","obj","numberToFormat","roundingFunction","leadingCount","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","abbr","decimal","neg","Math","includes","indexOf","RegExp","abbreviations","trillion","billion","million","thousand","toString","split","toFixed","delimiters","slice","String","string","abbreviation","stringOriginal","currency","symbol","pow","min","_isNaN","_x","apply","arguments","search","insert","subString","start","reduce","array","callback","TypeError","t","len","k","multiplier","x","parts","correctionFactor","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","toLowerCase","localeData","Error","reset","property","register","type","name","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","_format","space","splice","join","base","suffixes","binary","unformatRegex","filter","item","_format2","bytes","suffix","bytesMultiplier","_format3","symbols","before","after","_format4","toExponential","_format5","_format6","_format7","hours","floor","minutes","seconds","timeArray","exports","__webpack_require__","module","PriceCard"],"mappings":"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","file":"static/js/45.1037668f.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport DashboardSidebar from \"../guards/dashboard-sidebar\";\nimport { individualLoanRequest, timeOut } from \"../../api/rootUrls\";\nimport axios from \"axios\";\nimport IsLoadingData from \"../shared/isLoadingData/isLoadingData\";\n// import IsLoadingData from '../shared/isLoadingData/isLoadingData';\nimport moment from 'moment'\nimport PriceCard from '../priceCard'\nimport numeral from \"numeral\";\n\n\n\nconst LoanDetails = ({ match, history }) => {\n  const [state, setState] = useState({\n    loanDetails: [],\n    isLoading: false,\n  });\n  const { token } = JSON.parse(sessionStorage.getItem(\"userData\"));\n  useEffect(() => {\n    setState({\n      ...state,\n      isLoading: true,\n    });\n\n    axios({\n      method: \"get\",\n      url: `${individualLoanRequest}/${match.params.id}/details`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      timeout: timeOut,\n    })\n      .then((result) => {\n\n        setState({\n          ...state,\n          isLoading: false,\n        });\n        if (result.data.respCode === \"Successful\") {\n          setState({\n            ...state,\n            loanDetails: result.data.respBody,\n          });\n        } else {\n          setState({\n            ...state,\n            isLoading: false,\n            errorMessage: result.data.respDescription,\n          });\n        }\n      })\n      .catch((err) => {\n        setState({\n          ...state,\n          isLoading: false,\n          errorMessage: err,\n        });\n      });\n  }, [state.errorMessage]);\n  const { loanDetails, isLoading } = state;\n\n  return (\n    <Fragment>\n      <div className=\"user-layout\">\n        <div className=\"dashboard-mainXX\">\n\n          <div className=\"card\">\n            <div className=\"loan-table-heading\">\n              <div className=\"d-flex align-items-center\">\n                <div onClick={() => history.goBack()} className=\"mr-3 cursor\">\n                  <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M21 11H1\" stroke=\"#EC008C\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <path d=\"M11 21L1 11L11 1\" stroke=\"#EC008C\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                  </svg>\n\n                </div>\n\n                <h1 className=\"heading\">Loan Details</h1>\n              </div>\n              <div className=\"d-flex align-items-center mr-5\">\n                {/* <div className=\"input-group\" >\n                  <div>\n                    <span style={{ background: \"#FAFAFA\", height: \"100%\" }} className=\"input-group-text\" id=\"basic-addon1\">\n                      <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.5139 2.96518C12.5987 5.05144 12.5987 8.43394 10.5139 10.5202C8.42906 12.6065 5.04891 12.6065 2.9641 10.5202C0.879287 8.43394 0.879287 5.05144 2.9641 2.96518C5.04891 0.87892 8.42906 0.87892 10.5139 2.96518ZM12.1361 10.7808C14.1145 8.13979 13.9037 4.37673 11.5035 1.97489C8.87212 -0.658296 4.60585 -0.658296 1.97449 1.97489C-0.656863 4.60807 -0.656863 8.87731 1.97449 11.5105C4.37484 13.9125 8.13564 14.1234 10.7749 12.1431L16.3456 17.7178C16.7215 18.0939 17.331 18.0939 17.7069 17.7178C18.0828 17.3416 18.0828 16.7317 17.7069 16.3555L12.1361 10.7808Z\" fill=\"#828282\" />\n                      </svg>\n\n                    </span>\n                  </div>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\n                </div> */}\n\n                <div className=\"ml-2 cursor\" onClick={() =>  window.location.reload()}>\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.92066 1.98574C9.92066 0.389607 8.13055 -0.552042 6.81527 0.352215L4.36735 2.03516C3.22163 2.82284 3.22163 4.51454 4.36735 5.30222L6.81527 6.98516C8.13055 7.88942 9.92066 6.94777 9.92066 5.35163V1.98574ZM4.61777 10.929C4.61777 10.9874 4.615 11.0451 4.60959 11.1021H4.61616C4.86613 13.8121 7.14573 15.9341 9.92095 15.9341C12.8633 15.9341 15.2485 13.5488 15.2485 10.6065C15.2485 7.66421 12.8633 5.27899 9.92095 5.27899V1.74824C14.8129 1.74879 18.7785 5.71469 18.7785 10.6068C18.7785 15.4993 14.8124 19.4654 9.91995 19.4654C5.34815 19.4654 1.58524 16.0021 1.11163 11.556C1.03943 11.3606 1 11.1494 1 10.929C1 9.92994 1.80986 9.12007 2.80888 9.12007C3.8079 9.12007 4.61777 9.92994 4.61777 10.929Z\" fill=\"#828282\" />\n                  </svg>\n\n                </div>\n\n              </div>\n\n            </div>\n\n\n\n            <div className=\"card-body overflow-auto p-0\">\n              <div className=\"card-headerX-sub-head\">\n                <div className=\"d-flex justify-content-between align-items-center first-head-sub\">\n                  {\n                    !isLoading && loanDetails.createdAt ? (<p className=\"text-capitalize\" style={{ color: \"#828282\" }}>\n                      <span style={{ color: \"#333333\", fontWeight: \"500\" }}>Date: </span>  {moment(loanDetails.createdAt).format('DD-MM-YYYY')}\n                    </p>) : (<p className=\"text-capitalize\">Loading...</p>)\n\n                  }\n\n                  {\n                    loanDetails.status ? (<div className=\"d-flex align-items-center \">\n                      {\n                        loanDetails.status === \"approved\" ? (<div className=\"d-flex align-items-center \">\n                          Status: {\" \"}\n                          <PriceCard style={{ color: \"#219653\", background: \"rgba(229, 254, 228, 0.7)\" }} value={loanDetails.status} text={true} />\n                        </div>) : loanDetails.status === \"pending\" ? (<div className=\"d-flex align-items-center \">\n                          Status: {\" \"}\n                          <PriceCard style={{ color: \"#A9AC1F\", background: \"rgba(254, 253, 228, 0.7);\" }} value={loanDetails.status} text={true} />\n                        </div>) : (<div className=\"d-flex align-items-center \">\n                          Status: {\" \"}\n                          <PriceCard style={{ color: \"#AC1F1F\", background: \"rgba(254, 228, 228, 0.7)\" }} value={loanDetails.status} text={true} />\n                        </div>)\n                      }\n\n\n                    </div>) : (<p className=\"text-capitalize\">\n                      Loading...\n                    </p>)\n\n                  }\n\n\n                </div>\n                <div className=\"d-flex justify-content-between mb-4 flex-wrap nd-head-sub\">\n                  {isLoading ? (\n                    <IsLoadingData />\n                  ) : (\n                      <Fragment>\n                        <div className=\"d-flex flex-column justify-content-center align-items-center price-br\">\n\n                          <PriceCard style={{ color: \"#1F57AC\", background: \"rgba(228, 242, 254, 0.7)\" }}\n                            value={loanDetails.requestedAmount\n                              ? loanDetails.requestedAmount / 100\n                              : 0}\n                            text={false} />\n\n                          <h5 className=\"price-h\">\n                            Amount Loaned\n                            </h5>\n                        </div>\n\n                        <div className=\"d-flex flex-column justify-content-center align-items-center price-br\">\n\n                          <PriceCard style={{ color: \"#AC1F1F\", background: \"rgba(254, 228, 228, 0.7)\" }}\n                            value={`${\n                              loanDetails.durationType\n                                ? loanDetails.durationType\n                                : 0\n                              }`}\n                            text={true} />\n\n                          <h5 className=\"price-h\">\n                            Loan Term\n                            </h5>\n                        </div>\n\n                        <div className=\"d-flex flex-column justify-content-center align-items-center price-br\">\n\n                          <PriceCard style={{ color: \"#1FAC46\", background: \"rgba(229, 254, 228, 0.7)\" }}\n                            value={`${\n                              loanDetails.loanPaybacks\n                                ? loanDetails.loanPaybacks[0].interestRate\n                                : 0\n                              }%`}\n                            text={true} />\n\n                          <h5 className=\"price-h\">\n                            Interest Rate\n                            </h5>\n                        </div>\n\n                        <div className=\"d-flex flex-column justify-content-center align-items-center price-br\">\n\n                          <PriceCard style={{ color: \"#A9AC1F\", background: \"rgba(254, 253, 228, 0.7)\" }}\n                            value={`${\n                              loanDetails.loanDuration\n                                ? loanDetails.loanDuration\n                                : 0\n                              } Months`}\n                            text={true} />\n\n                          <h5 className=\"price-h\">\n                            Duation\n                            </h5>\n                        </div>\n\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n\n                          <PriceCard style={{ color: \"#A9AC1F\", background: \"rgba(254, 253, 228, 0.7)\" }}\n                            value={loanDetails.totalPaymentAmount\n                              ? loanDetails.totalPaymentAmount / 100\n                              : 0}\n                            text={false} />\n\n                          <h5 className=\"price-h\">\n                            Amount to be paid\n                            </h5>\n                        </div>\n\n                      </Fragment>\n                    )}\n                </div>\n              </div>\n              <div className=\"card-body mt-5\" style={{ overflowX: \"auto\" }}>\n                <h5>Repayment Schedule</h5>\n                <div>\n                  {isLoading ? (\n                    <IsLoadingData />\n                  ) : (\n                      <div className=\"table-responsive\">\n                        <table className=\"table\" style={{ overflowX: \"auto\" }}>\n                          <thead>\n                            <tr>\n                              <th>Month</th>\n                              <th>Capital</th>\n                              <th>Interest</th>\n                              <th>Repayment Amount</th>\n                              <th>Repayment Date</th>\n                              <th>Status</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {loanDetails.loanPaybacks\n                              ? loanDetails.loanPaybacks.map((loan, i) => {\n                                const {\n                                  currentPrincipal,\n                                  interest,\n                                  payableAmount,\n                                  paymentDate,\n                                  status,\n                                } = loan;\n                                const styleForButton = (status) => {\n                                  if (status === \"approved\") {\n                                    return \"#219653\";\n                                  } else if (status === \"pending\") {\n                                    return \"#F2C94C\";\n                                  } else {\n                                    return \"#EB5757\";\n                                  }\n                                };\n                                return (\n                                  <tr key={i}>\n                                    <th scope=\"row\"> {i + 1}</th>\n                                    <td> {\"\\u20A6\"}\n                                      {numeral(\n                                        currentPrincipal / 100\n                                      ).format(\"0,0\")}</td>\n                                    <td> {\"\\u20A6\"}\n                                      {numeral(\n                                        interest / 100\n                                      ).format(\"0,0\")}</td>\n                                    <td> {\"\\u20A6\"}\n                                      {numeral(\n                                        payableAmount / 100\n                                      ).format(\"0,0\")}</td>\n                                    <td>\n                                      {paymentDate\n                                        ? paymentDate.substring(0, 10)\n                                        : \"\"}\n                                    </td>\n                                    <td>\n                                      <div\n                                        className=\"loan-status-buttonX\"\n                                        style={{\n                                          color: styleForButton(status),\n                                          textTransform: \"capitalize\"\n                                        }}\n                                      >\n                                        {status}\n                                      </div>\n                                    </td>\n                                  </tr>\n                                );\n                              })\n                              : null}\n                          </tbody>\n                        </table>\n                      </div>\n                    )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withRouter(LoanDetails);\n","import React, { useState } from 'react';\nimport DashboardLoansDetails from '../dashboard/loan-details'\nimport { Link } from \"react-router-dom\";\n\n\n\nfunction Dashboardmain(props) {\n    const [stage, setStage] = useState(\"stage1\")\n\n    return (\n        <div>\n            <div className='Dashboard-main-page'>\n                <div style={{width: \"100%\", padding: \"0 3px\", margin: \"20px 10px\"}}>\n                    \n                   <DashboardLoansDetails />\n                   \n\n\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboardmain;\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    global.numeral = factory();\n  }\n})(this, function () {\n  /************************************\n      Variables\n  ************************************/\n\n  var _numeral,\n    _,\n    VERSION = '2.0.6',\n    formats = {},\n    locales = {},\n    defaults = {\n      currentLocale: 'en',\n      zeroFormat: null,\n      nullFormat: null,\n      defaultFormat: '0,0',\n      scalePercentBy100: true\n    },\n    options = {\n      currentLocale: defaults.currentLocale,\n      zeroFormat: defaults.zeroFormat,\n      nullFormat: defaults.nullFormat,\n      defaultFormat: defaults.defaultFormat,\n      scalePercentBy100: defaults.scalePercentBy100\n    };\n\n  /************************************\n      Constructors\n  ************************************/\n\n  // Numeral prototype object\n  function Numeral(input, number) {\n    this._input = input;\n    this._value = number;\n  }\n  _numeral = function numeral(input) {\n    var value, kind, unformatFunction, regexp;\n    if (_numeral.isNumeral(input)) {\n      value = input.value();\n    } else if (input === 0 || typeof input === 'undefined') {\n      value = 0;\n    } else if (input === null || _.isNaN(input)) {\n      value = null;\n    } else if (typeof input === 'string') {\n      if (options.zeroFormat && input === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        for (kind in formats) {\n          regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n          if (regexp && input.match(regexp)) {\n            unformatFunction = formats[kind].unformat;\n            break;\n          }\n        }\n        unformatFunction = unformatFunction || _numeral._.stringToNumber;\n        value = unformatFunction(input);\n      }\n    } else {\n      value = Number(input) || null;\n    }\n    return new Numeral(input, value);\n  };\n\n  // version number\n  _numeral.version = VERSION;\n\n  // compare numeral object\n  _numeral.isNumeral = function (obj) {\n    return obj instanceof Numeral;\n  };\n\n  // helper functions\n  _numeral._ = _ = {\n    // formats numbers separators, decimals places, signs, abbreviations\n    numberToFormat: function numberToFormat(value, format, roundingFunction) {\n      var locale = locales[_numeral.options.currentLocale],\n        negP = false,\n        optDec = false,\n        leadingCount = 0,\n        abbr = '',\n        trillion = 1000000000000,\n        billion = 1000000000,\n        million = 1000000,\n        thousand = 1000,\n        decimal = '',\n        neg = false,\n        abbrForce,\n        // force abbreviation\n        abs,\n        min,\n        max,\n        power,\n        int,\n        precision,\n        signed,\n        thousands,\n        output;\n\n      // make sure we never format a null value\n      value = value || 0;\n      abs = Math.abs(value);\n\n      // see if we should use parentheses for negative number or if we should prefix with a sign\n      // if both are present we default to parentheses\n      if (_numeral._.includes(format, '(')) {\n        negP = true;\n        format = format.replace(/[\\(|\\)]/g, '');\n      } else if (_numeral._.includes(format, '+') || _numeral._.includes(format, '-')) {\n        signed = _numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n        format = format.replace(/[\\+|\\-]/g, '');\n      }\n\n      // see if abbreviation is wanted\n      if (_numeral._.includes(format, 'a')) {\n        abbrForce = format.match(/a(k|m|b|t)?/);\n        abbrForce = abbrForce ? abbrForce[1] : false;\n\n        // check for space before abbreviation\n        if (_numeral._.includes(format, ' a')) {\n          abbr = ' ';\n        }\n        format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n        if (abs >= trillion && !abbrForce || abbrForce === 't') {\n          // trillion\n          abbr += locale.abbreviations.trillion;\n          value = value / trillion;\n        } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n          // billion\n          abbr += locale.abbreviations.billion;\n          value = value / billion;\n        } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n          // million\n          abbr += locale.abbreviations.million;\n          value = value / million;\n        } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n          // thousand\n          abbr += locale.abbreviations.thousand;\n          value = value / thousand;\n        }\n      }\n\n      // check for optional decimals\n      if (_numeral._.includes(format, '[.]')) {\n        optDec = true;\n        format = format.replace('[.]', '.');\n      }\n\n      // break number and format\n      int = value.toString().split('.')[0];\n      precision = format.split('.')[1];\n      thousands = format.indexOf(',');\n      leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n      if (precision) {\n        if (_numeral._.includes(precision, '[')) {\n          precision = precision.replace(']', '');\n          precision = precision.split('[');\n          decimal = _numeral._.toFixed(value, precision[0].length + precision[1].length, roundingFunction, precision[1].length);\n        } else {\n          decimal = _numeral._.toFixed(value, precision.length, roundingFunction);\n        }\n        int = decimal.split('.')[0];\n        if (_numeral._.includes(decimal, '.')) {\n          decimal = locale.delimiters.decimal + decimal.split('.')[1];\n        } else {\n          decimal = '';\n        }\n        if (optDec && Number(decimal.slice(1)) === 0) {\n          decimal = '';\n        }\n      } else {\n        int = _numeral._.toFixed(value, 0, roundingFunction);\n      }\n\n      // check abbreviation again after rounding\n      if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n        int = String(Number(int) / 1000);\n        switch (abbr) {\n          case locale.abbreviations.thousand:\n            abbr = locale.abbreviations.million;\n            break;\n          case locale.abbreviations.million:\n            abbr = locale.abbreviations.billion;\n            break;\n          case locale.abbreviations.billion:\n            abbr = locale.abbreviations.trillion;\n            break;\n        }\n      }\n\n      // format number\n      if (_numeral._.includes(int, '-')) {\n        int = int.slice(1);\n        neg = true;\n      }\n      if (int.length < leadingCount) {\n        for (var i = leadingCount - int.length; i > 0; i--) {\n          int = '0' + int;\n        }\n      }\n      if (thousands > -1) {\n        int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n      }\n      if (format.indexOf('.') === 0) {\n        int = '';\n      }\n      output = int + decimal + (abbr ? abbr : '');\n      if (negP) {\n        output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n      } else {\n        if (signed >= 0) {\n          output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n        } else if (neg) {\n          output = '-' + output;\n        }\n      }\n      return output;\n    },\n    // unformats numbers separators, decimals places, signs, abbreviations\n    stringToNumber: function stringToNumber(string) {\n      var locale = locales[options.currentLocale],\n        stringOriginal = string,\n        abbreviations = {\n          thousand: 3,\n          million: 6,\n          billion: 9,\n          trillion: 12\n        },\n        abbreviation,\n        value,\n        i,\n        regexp;\n      if (options.zeroFormat && string === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        value = 1;\n        if (locale.delimiters.decimal !== '.') {\n          string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n        }\n        for (abbreviation in abbreviations) {\n          regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n          if (stringOriginal.match(regexp)) {\n            value *= Math.pow(10, abbreviations[abbreviation]);\n            break;\n          }\n        }\n\n        // check for negative number\n        value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n        // remove non numbers\n        string = string.replace(/[^0-9\\.]+/g, '');\n        value *= Number(string);\n      }\n      return value;\n    },\n    isNaN: function (_isNaN) {\n      function isNaN(_x) {\n        return _isNaN.apply(this, arguments);\n      }\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n      return isNaN;\n    }(function (value) {\n      return typeof value === 'number' && isNaN(value);\n    }),\n    includes: function includes(string, search) {\n      return string.indexOf(search) !== -1;\n    },\n    insert: function insert(string, subString, start) {\n      return string.slice(0, start) + subString + string.slice(start);\n    },\n    reduce: function reduce(array, callback /*, initialValue*/) {\n      if (this === null) {\n        throw new TypeError('Array.prototype.reduce called on null or undefined');\n      }\n      if (typeof callback !== 'function') {\n        throw new TypeError(callback + ' is not a function');\n      }\n      var t = Object(array),\n        len = t.length >>> 0,\n        k = 0,\n        value;\n      if (arguments.length === 3) {\n        value = arguments[2];\n      } else {\n        while (k < len && !(k in t)) {\n          k++;\n        }\n        if (k >= len) {\n          throw new TypeError('Reduce of empty array with no initial value');\n        }\n        value = t[k++];\n      }\n      for (; k < len; k++) {\n        if (k in t) {\n          value = callback(value, t[k], k, t);\n        }\n      }\n      return value;\n    },\n    /**\n     * Computes the multiplier necessary to make x >= 1,\n     * effectively eliminating miscalculations caused by\n     * finite precision.\n     */\n    multiplier: function multiplier(x) {\n      var parts = x.toString().split('.');\n      return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n    },\n    /**\n     * Given a variable number of arguments, returns the maximum\n     * multiplier that must be used to normalize an operation involving\n     * all of them.\n     */\n    correctionFactor: function correctionFactor() {\n      var args = Array.prototype.slice.call(arguments);\n      return args.reduce(function (accum, next) {\n        var mn = _.multiplier(next);\n        return accum > mn ? accum : mn;\n      }, 1);\n    },\n    /**\n     * Implementation of toFixed() that treats floats more like decimals\n     *\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n     * problems for accounting- and finance-related software.\n     */\n    toFixed: function toFixed(value, maxDecimals, roundingFunction, optionals) {\n      var splitValue = value.toString().split('.'),\n        minDecimals = maxDecimals - (optionals || 0),\n        boundedPrecision,\n        optionalsRegExp,\n        power,\n        output;\n\n      // Use the smallest precision value possible to avoid errors from floating point representation\n      if (splitValue.length === 2) {\n        boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n      } else {\n        boundedPrecision = minDecimals;\n      }\n      power = Math.pow(10, boundedPrecision);\n\n      // Multiply up by precision, round accurately, then divide and use native toFixed():\n      output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n      if (optionals > maxDecimals - boundedPrecision) {\n        optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n        output = output.replace(optionalsRegExp, '');\n      }\n      return output;\n    }\n  };\n\n  // avaliable options\n  _numeral.options = options;\n\n  // avaliable formats\n  _numeral.formats = formats;\n\n  // avaliable formats\n  _numeral.locales = locales;\n\n  // This function sets the current locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n  _numeral.locale = function (key) {\n    if (key) {\n      options.currentLocale = key.toLowerCase();\n    }\n    return options.currentLocale;\n  };\n\n  // This function provides access to the loaded locale data.  If\n  // no arguments are passed in, it will simply return the current\n  // global locale object.\n  _numeral.localeData = function (key) {\n    if (!key) {\n      return locales[options.currentLocale];\n    }\n    key = key.toLowerCase();\n    if (!locales[key]) {\n      throw new Error('Unknown locale : ' + key);\n    }\n    return locales[key];\n  };\n  _numeral.reset = function () {\n    for (var property in defaults) {\n      options[property] = defaults[property];\n    }\n  };\n  _numeral.zeroFormat = function (format) {\n    options.zeroFormat = typeof format === 'string' ? format : null;\n  };\n  _numeral.nullFormat = function (format) {\n    options.nullFormat = typeof format === 'string' ? format : null;\n  };\n  _numeral.defaultFormat = function (format) {\n    options.defaultFormat = typeof format === 'string' ? format : '0.0';\n  };\n  _numeral.register = function (type, name, format) {\n    name = name.toLowerCase();\n    if (this[type + 's'][name]) {\n      throw new TypeError(name + ' ' + type + ' already registered.');\n    }\n    this[type + 's'][name] = format;\n    return format;\n  };\n  _numeral.validate = function (val, culture) {\n    var _decimalSep, _thousandSep, _currSymbol, _valArray, _abbrObj, _thousandRegEx, localeData, temp;\n\n    //coerce val to string\n    if (typeof val !== 'string') {\n      val += '';\n      if (console.warn) {\n        console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n      }\n    }\n\n    //trim whitespaces from either sides\n    val = val.trim();\n\n    //if val is just digits return true\n    if (!!val.match(/^\\d+$/)) {\n      return true;\n    }\n\n    //if val is empty return false\n    if (val === '') {\n      return false;\n    }\n\n    //get the decimal and thousands separator from numeral.localeData\n    try {\n      //check if the culture is understood by numeral. if not, default it to current locale\n      localeData = _numeral.localeData(culture);\n    } catch (e) {\n      localeData = _numeral.localeData(_numeral.locale());\n    }\n\n    //setup the delimiters and currency symbol based on culture/locale\n    _currSymbol = localeData.currency.symbol;\n    _abbrObj = localeData.abbreviations;\n    _decimalSep = localeData.delimiters.decimal;\n    if (localeData.delimiters.thousands === '.') {\n      _thousandSep = '\\\\.';\n    } else {\n      _thousandSep = localeData.delimiters.thousands;\n    }\n\n    // validating currency symbol\n    temp = val.match(/^[^\\d]+/);\n    if (temp !== null) {\n      val = val.substr(1);\n      if (temp[0] !== _currSymbol) {\n        return false;\n      }\n    }\n\n    //validating abbreviation symbol\n    temp = val.match(/[^\\d]+$/);\n    if (temp !== null) {\n      val = val.slice(0, -1);\n      if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n        return false;\n      }\n    }\n    _thousandRegEx = new RegExp(_thousandSep + '{2}');\n    if (!val.match(/[^\\d.,]/g)) {\n      _valArray = val.split(_decimalSep);\n      if (_valArray.length > 2) {\n        return false;\n      } else {\n        if (_valArray.length < 2) {\n          return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx);\n        } else {\n          if (_valArray[0].length === 1) {\n            return !!_valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n          } else {\n            return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  /************************************\n      Numeral Prototype\n  ************************************/\n\n  _numeral.fn = Numeral.prototype = {\n    clone: function clone() {\n      return _numeral(this);\n    },\n    format: function format(inputString, roundingFunction) {\n      var value = this._value,\n        format = inputString || options.defaultFormat,\n        kind,\n        output,\n        formatFunction;\n\n      // make sure we have a roundingFunction\n      roundingFunction = roundingFunction || Math.round;\n\n      // format based on value\n      if (value === 0 && options.zeroFormat !== null) {\n        output = options.zeroFormat;\n      } else if (value === null && options.nullFormat !== null) {\n        output = options.nullFormat;\n      } else {\n        for (kind in formats) {\n          if (format.match(formats[kind].regexps.format)) {\n            formatFunction = formats[kind].format;\n            break;\n          }\n        }\n        formatFunction = formatFunction || _numeral._.numberToFormat;\n        output = formatFunction(value, format, roundingFunction);\n      }\n      return output;\n    },\n    value: function value() {\n      return this._value;\n    },\n    input: function input() {\n      return this._input;\n    },\n    set: function set(value) {\n      this._value = Number(value);\n      return this;\n    },\n    add: function add(value) {\n      var corrFactor = _.correctionFactor.call(null, this._value, value);\n      function cback(accum, curr, currI, O) {\n        return accum + Math.round(corrFactor * curr);\n      }\n      this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n      return this;\n    },\n    subtract: function subtract(value) {\n      var corrFactor = _.correctionFactor.call(null, this._value, value);\n      function cback(accum, curr, currI, O) {\n        return accum - Math.round(corrFactor * curr);\n      }\n      this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n      return this;\n    },\n    multiply: function multiply(value) {\n      function cback(accum, curr, currI, O) {\n        var corrFactor = _.correctionFactor(accum, curr);\n        return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n      }\n      this._value = _.reduce([this._value, value], cback, 1);\n      return this;\n    },\n    divide: function divide(value) {\n      function cback(accum, curr, currI, O) {\n        var corrFactor = _.correctionFactor(accum, curr);\n        return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n      }\n      this._value = _.reduce([this._value, value], cback);\n      return this;\n    },\n    difference: function difference(value) {\n      return Math.abs(_numeral(this._value).subtract(value).value());\n    }\n  };\n\n  /************************************\n      Default Locale && Format\n  ************************************/\n\n  _numeral.register('locale', 'en', {\n    delimiters: {\n      thousands: ',',\n      decimal: '.'\n    },\n    abbreviations: {\n      thousand: 'k',\n      million: 'm',\n      billion: 'b',\n      trillion: 't'\n    },\n    ordinal: function ordinal(number) {\n      var b = number % 10;\n      return ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    },\n    currency: {\n      symbol: '$'\n    }\n  });\n  (function () {\n    _numeral.register('format', 'bps', {\n      regexps: {\n        format: /(BPS)/,\n        unformat: /(BPS)/\n      },\n      format: function format(value, _format, roundingFunction) {\n        var space = _numeral._.includes(_format, ' BPS') ? ' ' : '',\n          output;\n        value = value * 10000;\n\n        // check for space before BPS\n        _format = _format.replace(/\\s?BPS/, '');\n        output = _numeral._.numberToFormat(value, _format, roundingFunction);\n        if (_numeral._.includes(output, ')')) {\n          output = output.split('');\n          output.splice(-1, 0, space + 'BPS');\n          output = output.join('');\n        } else {\n          output = output + space + 'BPS';\n        }\n        return output;\n      },\n      unformat: function unformat(string) {\n        return +(_numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n      }\n    });\n  })();\n  (function () {\n    var decimal = {\n        base: 1000,\n        suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      },\n      binary = {\n        base: 1024,\n        suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n      };\n    var allSuffixes = decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n      return decimal.suffixes.indexOf(item) < 0;\n    }));\n    var unformatRegex = allSuffixes.join('|');\n    // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n    unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n    _numeral.register('format', 'bytes', {\n      regexps: {\n        format: /([0\\s]i?b)/,\n        unformat: new RegExp(unformatRegex)\n      },\n      format: function format(value, _format2, roundingFunction) {\n        var output,\n          bytes = _numeral._.includes(_format2, 'ib') ? binary : decimal,\n          suffix = _numeral._.includes(_format2, ' b') || _numeral._.includes(_format2, ' ib') ? ' ' : '',\n          power,\n          min,\n          max;\n\n        // check for space before\n        _format2 = _format2.replace(/\\s?i?b/, '');\n        for (power = 0; power <= bytes.suffixes.length; power++) {\n          min = Math.pow(bytes.base, power);\n          max = Math.pow(bytes.base, power + 1);\n          if (value === null || value === 0 || value >= min && value < max) {\n            suffix += bytes.suffixes[power];\n            if (min > 0) {\n              value = value / min;\n            }\n            break;\n          }\n        }\n        output = _numeral._.numberToFormat(value, _format2, roundingFunction);\n        return output + suffix;\n      },\n      unformat: function unformat(string) {\n        var value = _numeral._.stringToNumber(string),\n          power,\n          bytesMultiplier;\n        if (value) {\n          for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n            if (_numeral._.includes(string, decimal.suffixes[power])) {\n              bytesMultiplier = Math.pow(decimal.base, power);\n              break;\n            }\n            if (_numeral._.includes(string, binary.suffixes[power])) {\n              bytesMultiplier = Math.pow(binary.base, power);\n              break;\n            }\n          }\n          value *= bytesMultiplier || 1;\n        }\n        return value;\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'currency', {\n      regexps: {\n        format: /(\\$)/\n      },\n      format: function format(value, _format3, roundingFunction) {\n        var locale = _numeral.locales[_numeral.options.currentLocale],\n          symbols = {\n            before: _format3.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n            after: _format3.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n          },\n          output,\n          symbol,\n          i;\n\n        // strip format of spaces and $\n        _format3 = _format3.replace(/\\s?\\$\\s?/, '');\n\n        // format the number\n        output = _numeral._.numberToFormat(value, _format3, roundingFunction);\n\n        // update the before and after based on value\n        if (value >= 0) {\n          symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n          symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n        } else if (value < 0 && !_numeral._.includes(symbols.before, '-') && !_numeral._.includes(symbols.before, '(')) {\n          symbols.before = '-' + symbols.before;\n        }\n\n        // loop through each before symbol\n        for (i = 0; i < symbols.before.length; i++) {\n          symbol = symbols.before[i];\n          switch (symbol) {\n            case '$':\n              output = _numeral._.insert(output, locale.currency.symbol, i);\n              break;\n            case ' ':\n              output = _numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n              break;\n          }\n        }\n\n        // loop through each after symbol\n        for (i = symbols.after.length - 1; i >= 0; i--) {\n          symbol = symbols.after[i];\n          switch (symbol) {\n            case '$':\n              output = i === symbols.after.length - 1 ? output + locale.currency.symbol : _numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n              break;\n            case ' ':\n              output = i === symbols.after.length - 1 ? output + ' ' : _numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n              break;\n          }\n        }\n        return output;\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'exponential', {\n      regexps: {\n        format: /(e\\+|e-)/,\n        unformat: /(e\\+|e-)/\n      },\n      format: function format(value, _format4, roundingFunction) {\n        var output,\n          exponential = typeof value === 'number' && !_numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n          parts = exponential.split('e');\n        _format4 = _format4.replace(/e[\\+|\\-]{1}0/, '');\n        output = _numeral._.numberToFormat(Number(parts[0]), _format4, roundingFunction);\n        return output + 'e' + parts[1];\n      },\n      unformat: function unformat(string) {\n        var parts = _numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n          value = Number(parts[0]),\n          power = Number(parts[1]);\n        power = _numeral._.includes(string, 'e-') ? power *= -1 : power;\n        function cback(accum, curr, currI, O) {\n          var corrFactor = _numeral._.correctionFactor(accum, curr),\n            num = accum * corrFactor * (curr * corrFactor) / (corrFactor * corrFactor);\n          return num;\n        }\n        return _numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'ordinal', {\n      regexps: {\n        format: /(o)/\n      },\n      format: function format(value, _format5, roundingFunction) {\n        var locale = _numeral.locales[_numeral.options.currentLocale],\n          output,\n          ordinal = _numeral._.includes(_format5, ' o') ? ' ' : '';\n\n        // check for space before\n        _format5 = _format5.replace(/\\s?o/, '');\n        ordinal += locale.ordinal(value);\n        output = _numeral._.numberToFormat(value, _format5, roundingFunction);\n        return output + ordinal;\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'percentage', {\n      regexps: {\n        format: /(%)/,\n        unformat: /(%)/\n      },\n      format: function format(value, _format6, roundingFunction) {\n        var space = _numeral._.includes(_format6, ' %') ? ' ' : '',\n          output;\n        if (_numeral.options.scalePercentBy100) {\n          value = value * 100;\n        }\n\n        // check for space before %\n        _format6 = _format6.replace(/\\s?\\%/, '');\n        output = _numeral._.numberToFormat(value, _format6, roundingFunction);\n        if (_numeral._.includes(output, ')')) {\n          output = output.split('');\n          output.splice(-1, 0, space + '%');\n          output = output.join('');\n        } else {\n          output = output + space + '%';\n        }\n        return output;\n      },\n      unformat: function unformat(string) {\n        var number = _numeral._.stringToNumber(string);\n        if (_numeral.options.scalePercentBy100) {\n          return number * 0.01;\n        }\n        return number;\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'time', {\n      regexps: {\n        format: /(:)/,\n        unformat: /(:)/\n      },\n      format: function format(value, _format7, roundingFunction) {\n        var hours = Math.floor(value / 60 / 60),\n          minutes = Math.floor((value - hours * 60 * 60) / 60),\n          seconds = Math.round(value - hours * 60 * 60 - minutes * 60);\n        return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n      },\n      unformat: function unformat(string) {\n        var timeArray = string.split(':'),\n          seconds = 0;\n\n        // turn hours and minutes into seconds and add them all up\n        if (timeArray.length === 3) {\n          // hours\n          seconds = seconds + Number(timeArray[0]) * 60 * 60;\n          // minutes\n          seconds = seconds + Number(timeArray[1]) * 60;\n          // seconds\n          seconds = seconds + Number(timeArray[2]);\n        } else if (timeArray.length === 2) {\n          // minutes\n          seconds = seconds + Number(timeArray[0]) * 60;\n          // seconds\n          seconds = seconds + Number(timeArray[1]);\n        }\n        return Number(seconds);\n      }\n    });\n  })();\n  return _numeral;\n});","import React from 'react';\nimport numeral from \"numeral\";\n\n\nconst PriceCard = (props) => {\n    const { value , style, text} = props\n    return (\n        text? ( <div style={{...style, textTransform: \"capitalize\"}} className=\"price-card-dd\">\n            \n        {value}\n    </div>): ( <div style={{...style}} className=\"price-card-dd\">\n            \n            {\"\\u20A6\"}\n            {numeral(\n                value\n            ).format(\"0,0\")}\n        </div>)\n       \n    );\n}\n\nexport default PriceCard;"],"sourceRoot":""}