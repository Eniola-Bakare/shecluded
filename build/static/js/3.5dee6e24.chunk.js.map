{"version":3,"sources":["components/dashboard/loanRepaymentTable.jsx","components/dashboard/request-loan.js","components/shared/alert.js","dev-data/intervals.js","utils.js"],"names":["LoanRepaymentTable","_ref","intervalType","calculation","sumOfTotalCharges","chargePercentage","react_default","a","createElement","react","className","concat","toFixed","map","eachLoan","i","key","Number","capital","commission","totalAmountToBePaidThisMonth","sumOfTotalCharge","totalAmountToBePaid","totalCommission","sumOfTotalAmountToBePaidMonthly","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","withRouter","history","_useState","useState","amount","weeklyChargePercentage","reasonForLoan","purposeForLoan","bankStatement","numberOfIntervals","repaymentSchedule","chargesArray","sumOfTotalChargesArray","nameOfSelectedBankStatement","fetchingData","errorMessage","maxLength","uploadProgress","uploadHappened","_useState2","slicedToArray","setState","_useState3","useRef","_useState4","checked","setChecked","useEffect","objectSpread","handlePictureUpload","_ref2","asyncToGenerator","_callee","event","file","nameOfField","reader","_context","target","files","swal","FileReader","split","readAsDataURL","onload","e","_objectSpread2","uploadBankStatement","_x","apply","arguments","_ref4","_callee2","uri","_ref3","_ref5","data","image","_context2","FormData","append","UPLOAD_PRESET","axios","url","UPLOAD_URL_FOR_PDFs","onUploadProgress","progressEvent","loaded","total","parseInt","Math","round","secure_url","endsWith","replace","t0","isLoading","_x2","_x3","handleInputChange","repeatingLoanRequestFields","calcMonthlyPercentage","calculateLoan","_ref6","_callee3","_context3","preventDefault","totalAmount","totalMonth","calcResult","amountToBePaid","amountToBePaidMonthly","sumOfTotalChargesResult","ceil","_x4","requestForLoan","_ref7","_callee4","reqBody","_JSON$parse","token","_context4","trim","approved","approvedAmount","createdAt","Date","delFlag","destinationAccount","destinationBankCode","durationType","expectedPaymentAmount","expectedPaymentDate","extendedInterestRate","extendedLoanDuration","extendedPaymentAmount","extendedPaymentDate","initialInterestRate","interestRate","loanDuration","loanId","paymentDate","pitchText","pitchVideo","requestedAmount","status","updatedAt","version","JSON","parse","sessionStorage","getItem","requestLoan","headers","Content-Type","Authorization","timeout","timeOut","respCode","respDescription","response","_x5","preloader","shared_alert","message","onSubmit","htmlFor","onChange","required","placeholder","defaultValue","id","rows","disabled","numberOfLoanIntervals","interval","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","stroke-linecap","accept","x","y","rx","stroke-dasharray","cx","cy","r","isLoadingData","loanRepaymentTable","Alert","show","_home_eebakare_gitclone_shecluded_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","hideAlert","setTimeout","_home_eebakare_gitclone_shecluded_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","clearTimeout","react__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_2__","role","onClick","aria-label","aria-hidden","INTERVALS","UPLOAD_URL","UPLOAD_URL_FOR_VIDEO","MAX_PHOTO_SIZE","PHOTO_ERROR_MESSAGE"],"mappings":"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","file":"static/js/3.5dee6e24.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst LoanRepaymentTable = ({\n  intervalType,\n  calculation,\n  sumOfTotalCharges,\n  chargePercentage,\n}) => {\n  return (\n    <Fragment>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>{intervalType === \"weekly\" ? \"Weeks\" : \"Months\"}</th>\n            <th>Capital</th>\n            <th>Interest ({`${(chargePercentage * 100).toFixed(1)}%`})</th>\n            <th>Repayment</th>\n          </tr>\n        </thead>\n        <tbody>\n          {calculation.map((eachLoan, i) => {\n            return (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{Number(eachLoan.capital).toFixed(2)}</td>\n                <td>{eachLoan.commission.toFixed(2)}</td>\n                <td>{eachLoan.totalAmountToBePaidThisMonth.toFixed(2)}</td>\n              </tr>\n            );\n          })}\n          {sumOfTotalCharges.map((sumOfTotalCharge, i) => {\n            return (\n              <tr className=\"font-bold\" key={i}>\n                <td>Total</td>\n                <td>{sumOfTotalCharge.totalAmountToBePaid}</td>\n                <td>{sumOfTotalCharge.totalCommission.toFixed(2)}</td>\n                <td>\n                  {sumOfTotalCharge.sumOfTotalAmountToBePaidMonthly.toFixed(2)}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default LoanRepaymentTable;\n","import React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { requestLoan, timeOut } from \"../../api/rootUrls\";\nimport axios from \"axios\";\nimport IsLoadingData from \"../shared/isLoadingData/isLoadingData\";\n\nimport Preloader from \"../shared/preloader\";\nimport Alert from \"../shared/alert\";\nimport {\n  UPLOAD_URL_FOR_PDFs,\n  UPLOAD_PRESET,\n  calcMonthlyPercentage,\n  numberOfLoanIntervals,\n  repeatingLoanRequestFields,\n} from \"../../utils\";\nimport LoanRepaymentTable from \"./loanRepaymentTable\";\n\nconst RequestLoan = ({ history }) => {\n  const [state, setState] = useState({\n    amount: \"\",\n    weeklyChargePercentage: 2 / 100,\n    reasonForLoan: \"\",\n    purposeForLoan: \"\",\n    bankStatement: \"\",\n    intervalType: \"\",\n    numberOfIntervals: \"\",\n    repaymentSchedule: false,\n    chargePercentage: 0,\n    chargesArray: [],\n    calculation: [],\n    sumOfTotalChargesArray: [],\n    sumOfTotalCharges: [],\n    nameOfSelectedBankStatement: \"\",\n    fetchingData: false,\n    errorMessage: \"\",\n    maxLength: 200,\n    uploadProgress: 0,\n    uploadHappened: false,\n  });\n  let bankStatementImage = useRef();\nconst [checked, setChecked] = useState(false)\n  useEffect(() => {\n    setState({\n      ...state,\n      numberOfIntervals: \"\",\n    });\n  }, [state.calculation]);\n\n  const handlePictureUpload = async (event) => {\n    let file = event.target.files[0];\n    if (file.type !== \"application/pdf\") {\n      setState({\n        ...state,\n        bankStatement: \"\",\n      });\n      return swal(\"Invalid input\", \"Only PDFs are allowed.\", \"info\");\n    }\n    let nameOfField = event.target.name;\n    let reader = new FileReader();\n    let value = event.target.value;\n    value = value.split(\"\\\\\")[2];\n    if (file) {\n      reader.readAsDataURL(file);\n      reader.onload = (e) => {\n        uploadBankStatement(e.target.result, [nameOfField]);\n        setState({\n          ...state,\n          [nameOfField]: e.target.result,\n          nameOfSelectedBankStatement: value,\n        });\n      };\n    }\n  };\n\n  const uploadBankStatement = async (uri, [nameOfField]) => {\n    setState({\n      ...state,\n      uploadHappened: true,\n    });\n    try {\n      const data = await new FormData();\n      data.append(\"file\", uri);\n      data.append(\"upload_preset\", UPLOAD_PRESET);\n\n      const file = await axios({\n        url: UPLOAD_URL_FOR_PDFs,\n        method: \"post\",\n        data: data,\n        onUploadProgress: (progressEvent) => {\n          let loaded = progressEvent.loaded;\n          let total = progressEvent.total;\n          setState({\n            ...state,\n            uploadProgress: parseInt(Math.round((loaded * 100) / total)),\n          });\n        },\n      });\n      let image = await file.data.secure_url;\n      if (image.endsWith(\".ai\")) {\n        image = image.replace(\".ai\", \".pdf\");\n      }\n      await setState({\n        ...state,\n        [nameOfField]: image,\n      });\n      setChecked(true)\n      swal(\n        \"Successful Upload\",\n        \" Bank Statement uploaded successfully\",\n        \"success\"\n      );\n    } catch (err) {\n      setState({\n        ...state,\n        errorMessage: \"Error occured while uploading file.\",\n        isLoading: false,\n      });\n    }\n  };\n\n  const handleInputChange = (event) => {\n    // Set the charge percentage based on the interval type selected\n    if (event.target.name === \"intervalType\") {\n      const { value } = event.target;\n      if (value === \"weekly\") {\n        setState({\n          ...state,\n          chargePercentage: state.weeklyChargePercentage,\n          ...repeatingLoanRequestFields(event),\n        });\n      } else if (value === \"monthly\") {\n        setState({\n          ...state,\n          chargePercentage: calcMonthlyPercentage(state.amount),\n          ...repeatingLoanRequestFields(event),\n        });\n      }\n    } else if (event.target.name === \"amount\") {\n      setState({\n        ...state,\n        chargePercentage: calcMonthlyPercentage(event.target.value),\n        ...repeatingLoanRequestFields(event),\n      });\n    } else {\n      setState({\n        ...state,\n        ...repeatingLoanRequestFields(event),\n      });\n    }\n  };\n  const calculateLoan = async (e) => {\n    e.preventDefault();\n\n    //This function takes in the amount entered and the number of months entered\n    let result = await function (totalAmount, totalMonth) {\n      //This function returns the result of the calculations of the loans\n      let calculation = function () {\n        let capital = totalAmount;\n        let amountToBePaid = totalAmount;\n        let amountToBePaidMonthly = totalAmount / totalMonth;\n        let commission = totalAmount * state.chargePercentage;\n        for (let i = 1; i <= totalMonth; i++) {\n          //Push into the chargesArray array in the state\n          state.chargesArray.push({\n            commission: commission,\n            amountToBePaid: amountToBePaid,\n            totalAmountToBePaidThisMonth: commission + totalAmount / totalMonth,\n            capital: capital,\n          });\n          amountToBePaid = amountToBePaid - amountToBePaidMonthly;\n          commission = amountToBePaid * state.chargePercentage;\n          capital = capital - amountToBePaidMonthly;\n          amountToBePaidMonthly = totalAmount / totalMonth;\n        }\n        return state.chargesArray;\n      };\n\n      //Call the calculation function above\n      const calcResult = calculation();\n\n      //This function return the sum of all the loans to be repaid over time\n      let sumOfTotalCharges = function () {\n        let totalCommission = 0;\n        let totalAmountToBePaid = 0;\n        let sumOfTotalAmountToBePaidMonthly = 0;\n        calcResult.forEach((eachLoan, i) => {\n          totalCommission = totalCommission + eachLoan.commission;\n          totalAmountToBePaid = totalAmountToBePaid + eachLoan.amountToBePaid;\n          sumOfTotalAmountToBePaidMonthly =\n            sumOfTotalAmountToBePaidMonthly +\n            eachLoan.totalAmountToBePaidThisMonth;\n\n          //Push into the sumOfTotalChargesArray array in the state only when it is the last item in the array\n          if (i === totalMonth - 1) {\n            state.sumOfTotalChargesArray.push({\n              totalCommission: totalCommission,\n              totalAmountToBePaid: totalAmount,\n              sumOfTotalAmountToBePaidMonthly: sumOfTotalAmountToBePaidMonthly,\n            });\n          }\n        });\n        return state.sumOfTotalChargesArray;\n      };\n\n      //Call the sumOfTotalCharges function above\n      const sumOfTotalChargesResult = sumOfTotalCharges();\n\n      //Put the result of the two functions above in the state. State is mapped out in return below.\n      setState((state) => ({\n        ...state,\n        sumOfTotalCharges: sumOfTotalChargesResult,\n        calculation: calcResult,\n        repaymentSchedule: true,\n      }));\n    };\n\n    //Calling the result function passing in the entered amount and the rounded-up value of the number of intervals\n    result(state.amount, Math.ceil(state.numberOfIntervals));\n  };\n\n  const requestForLoan = async (e) => {\n    e.preventDefault();\n    if (\n      state.bankStatement.trim().length &&\n      !state.bankStatement.trim().endsWith(\".pdf\")\n    ) {\n      return swal(\n        \"Invalid Input\",\n        \"Please upload your bank statement in PDF format.\",\n        \"info\"\n      );\n    }\n\n    setState({\n      ...state,\n      fetchingData: true,\n    });\n    const {\n      amount,\n      chargePercentage,\n      reasonForLoan,\n      intervalType,\n      purposeForLoan,\n    } = state;\n    let { bankStatement } = state;\n\n    let reqBody = {\n      approved: false,\n      approvedAmount: amount * 100, // Converted to Kobo\n      bankStatement,\n      createdAt: new Date(),\n      delFlag: \"\",\n      destinationAccount: \"\",\n      destinationBankCode: \"\",\n      durationType: intervalType,\n      expectedPaymentAmount: 0,\n      expectedPaymentDate: \"\",\n      extendedInterestRate: 0,\n      extendedLoanDuration: state.calculation.length,\n      extendedPaymentAmount: 0,\n      extendedPaymentDate: \"\",\n      initialInterestRate: chargePercentage * 100, // Converting from decimal to whole number\n      interestRate: chargePercentage * 100, // Converting from decimal to whole number\n      loanDuration: state.calculation.length,\n      loanId: \"\",\n      paymentDate: \"\",\n      pitchText: reasonForLoan,\n      pitchVideo: \"\",\n      reasonForLoan,\n      purposeForLoan,\n      requestedAmount: amount * 100, //Converted to Kobo\n      status: \"\",\n      updatedAt: new Date(),\n      version: 0,\n    };\n\n    const { token } = JSON.parse(sessionStorage.getItem(\"userData\"));\n\n    axios({\n      url: `${requestLoan}`,\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      timeout: timeOut,\n      data: reqBody,\n    })\n      .then((result) => {\n        setState({\n          ...state,\n          fetchingData: false,\n        });\n        if (result.data.respCode === \"Successful\") {\n          swal(\n            \"Successful Application\",\n            \"Your Loan Application has gone for approval. You will be contacted shortly.\",\n            \"success\"\n          );\n          history.push(\"/dashboard\");\n        } else {\n          setState({\n            ...state,\n            errorMessage: result.data.respDescription,\n          });\n        }\n      })\n      .catch((err) => {\n        setState({\n          ...state,\n          fetchingData: false,\n        });\n        if (!err.response) {\n          setState({\n            ...state,\n            errorMessage: \"Network Error\",\n          });\n        } else {\n          if (err.response.status === 400 || err.response.status === 401) {\n            setState({\n              ...state,\n              errorMessage: err.response.data.respDescription,\n            });\n          } else {\n            setState({\n              ...state,\n              errorMessage: err,\n            });\n          }\n        }\n      });\n  };\n  const {\n    amount,\n    reasonForLoan,\n    repaymentSchedule,\n    intervalType,\n    calculation,\n    sumOfTotalCharges,\n    numberOfIntervals,\n    nameOfSelectedBankStatement,\n    chargePercentage,\n    fetchingData,\n    errorMessage,\n    purposeForLoan,\n  } = state;\n  if (fetchingData) {\n    return <Preloader />;\n  }\n  return (\n    <Fragment>\n      {errorMessage.length ? <Alert message={errorMessage} /> : null}\n\n      <div className=\"user-layout\">\n        <div >\n          \n          <div className=\"row p-4\">\n            <div className=\"col-md-12 col-sm-12\">\n              <form onSubmit={calculateLoan}>\n                <div className=\"d-flex justify-content-around align-items-center flex-wrap\">\n                  <div>\n\n                  <div className=\"row\">\n                  <div className=\"form-group col-12 col-md-12\">\n                    <label className=\"text-body\" htmlFor=\"name\">\n                      Loan Amount\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      name=\"amount\"\n                      onChange={handleInputChange}\n                      value={amount}\n                      required\n                      type=\"number\"\n                      placeholder=\"Amount\"\n                    />\n                  </div>\n                </div>\n               \n                <div className=\"row\">\n                  <div className=\"form-group col-12 col-md-12\">\n                    <label className=\"text-body\" htmlFor=\"name\">\n                      Select Purpose For Loan?\n                    </label>\n                    <select\n                      className=\"form-control\"\n                      required=\"required\"\n                      onChange={handleInputChange}\n                      value={purposeForLoan}\n                      name=\"purposeForLoan\"\n                    >\n                      <option value=\"\" defaultValue>\n                        Purpose\n                      </option>\n                      <option value=\"Laptop Initiative\">\n                        One Woman, One Laptop Initiative\n                      </option>\n                      <option value=\"Expand My Business\">\n                        Expand My Business\n                      </option>\n                      <option value=\"Get More Goods\">Get More Goods</option>\n                      <option value=\"Pay My Rent\">Pay My Rent</option>\n                      <option value=\"Mumpay Package\">Mumpay Package</option>\n                      <option value=\"Fund For School\">Fund For School</option>\n                      <option value=\"Fund For Family Life\">\n                        Fund For Family Life\n                      </option>\n                      <option value=\"Upskill Loan\">Upskill Loan</option>\n                      <option value=\"StephanieObi's Course\">\n                        StephanieObi's Course\n                      </option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"form-group col-12 col-md-12\">\n                    <label className=\"text-body\" htmlFor=\"name\">\n                      Explain why you need the loan\n                    </label>\n                    <textarea\n                      className=\"form-control\"\n                      onChange={handleInputChange}\n                      name=\"reasonForLoan\"\n                      value={reasonForLoan}\n                      id=\"textarea\"\n                      rows=\"5\"\n                      maxLength={state.maxLength}\n                    ></textarea>\n                    {reasonForLoan.length >= 1 ? (\n                      <small className=\"text-shecluded\">{`${\n                        Number(state.maxLength) - Number(reasonForLoan.length)\n                      } characters remaining.`}</small>\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <label className=\"text-body col-12 col-md-12\" htmlFor=\"name\">\n                    Repayment Term\n                  </label>\n                  <div className=\"form-group col-12 col-md-6\">\n                    <select\n                      className=\"form-control\"\n                      required=\"required\"\n                      onChange={handleInputChange}\n                      value={intervalType}\n                      name=\"intervalType\"\n                    >\n                      <option value=\"\" defaultValue>\n                        Interval\n                      </option>\n                      <option value=\"weekly\">Weekly</option>\n                      <option value=\"monthly\">Monthly</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group col-12 col-md-6\">\n                    <select\n                      className=\"form-control\"\n                      required\n                      onChange={handleInputChange}\n                      value={numberOfIntervals}\n                      name=\"numberOfIntervals\"\n                      disabled={amount <= 0}\n                    >\n                      <option value=\"\" defaultValue>\n                        Number of Intervals\n                      </option>\n                      {numberOfLoanIntervals(amount).map((interval, i) => {\n                        return (\n                          <option key={i} value={interval}>\n                            {interval}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </div>\n                \n\n                  </div>\n                  <div>\n                  <div className=\"file-upload-wrapper\">\n                   \n\n                    {!state.uploadHappened ? (\n                    <Fragment>\n                      {state.uploadProgress === 0 ? (\n                        <div>\n                           {\n                      checked?(\n                        <div className=\"checked-icon\">\n                        <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path d=\"M15 29C22.732 29 29 22.732 29 15C29 7.26801 22.732 1 15 1C7.26801 1 1 7.26801 1 15C1 22.732 7.26801 29 15 29Z\" stroke=\"#13CE66\" stroke-width=\"2\"/>\n                          <path d=\"M9 15.5L13 19.5L21.5 11\" stroke=\"#13CE66\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n                        </svg>\n                        </div>\n                      ): null\n                    }\n                   \n                    <input\n                            type=\"file\"\n                            className=\"custom-file-inputX\"\n                            onChange={handlePictureUpload}\n                            id=\"bankStatement\"\n                            name=\"bankStatement\"\n                            accept=\"application/pdf\"\n                          />\n                    <svg className=\"cursor\" width=\"232\" height=\"335\" viewBox=\"0 0 232 335\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect x=\"0.5\" y=\"36.5\" width=\"231\" height=\"298\" rx=\"1.5\" stroke=\"#E0E0E0\" stroke-dasharray=\"8 8\"/>\n                    <path d=\"M1.40137 11H0L3.36328 2.18164H4.47754L7.84082 11H6.43945L5.66699 8.96973H2.16699L1.40137 11ZM5.18164 7.71191L3.91699 4.21191L2.65918 7.71191H5.18164ZM10.3564 8.90137C10.3564 9.17936 10.4499 9.41178 10.6367 9.59863C10.8236 9.78548 11.056 9.87891 11.334 9.87891C11.3796 9.87891 11.4274 9.87663 11.4775 9.87207C11.5322 9.86751 11.5824 9.86068 11.6279 9.85156C11.6735 9.84245 11.7168 9.82878 11.7578 9.81055V10.9316C11.7031 10.959 11.637 10.9818 11.5596 11C11.4183 11.0456 11.252 11.0684 11.0605 11.0684C10.7826 11.0684 10.5228 11.0182 10.2812 10.918C10.0443 10.8132 9.83691 10.6673 9.65918 10.4805C9.48145 10.2936 9.34245 10.068 9.24219 9.80371C9.14648 9.53939 9.09863 9.23861 9.09863 8.90137V5.88672H7.97754V4.69727H8.46973C8.71126 4.69727 8.91178 4.61979 9.07129 4.46484C9.23079 4.30534 9.31055 4.10482 9.31055 3.86328V3.02246H10.3564V4.69727H11.7578V5.88672H10.3564V8.90137ZM15.0459 8.90137C15.0459 9.17936 15.1393 9.41178 15.3262 9.59863C15.513 9.78548 15.7454 9.87891 16.0234 9.87891C16.069 9.87891 16.1169 9.87663 16.167 9.87207C16.2217 9.86751 16.2718 9.86068 16.3174 9.85156C16.363 9.84245 16.4062 9.82878 16.4473 9.81055V10.9316C16.3926 10.959 16.3265 10.9818 16.249 11C16.1077 11.0456 15.9414 11.0684 15.75 11.0684C15.472 11.0684 15.2122 11.0182 14.9707 10.918C14.7337 10.8132 14.5264 10.6673 14.3486 10.4805C14.1709 10.2936 14.0319 10.068 13.9316 9.80371C13.8359 9.53939 13.7881 9.23861 13.7881 8.90137V5.88672H12.667V4.69727H13.1592C13.4007 4.69727 13.6012 4.61979 13.7607 4.46484C13.9202 4.30534 14 4.10482 14 3.86328V3.02246H15.0459V4.69727H16.4473V5.88672H15.0459V8.90137ZM20.2275 4.62891C20.5921 4.62891 20.9248 4.68815 21.2256 4.80664C21.5309 4.92057 21.7907 5.0778 22.0049 5.27832C22.2191 5.47884 22.3854 5.71582 22.5039 5.98926C22.6224 6.25814 22.6816 6.55208 22.6816 6.87109V11H21.7725L21.4922 10.3711C21.3691 10.5033 21.2233 10.6195 21.0547 10.7197C20.9043 10.8109 20.7152 10.8929 20.4873 10.9658C20.2594 11.0342 19.986 11.0684 19.667 11.0684C18.9652 11.0684 18.4274 10.8952 18.0537 10.5488C17.6846 10.1979 17.5 9.74219 17.5 9.18164C17.5 8.86263 17.5592 8.57552 17.6777 8.32031C17.8008 8.06055 18.0081 7.8418 18.2998 7.66406C18.596 7.48177 18.9948 7.34049 19.4961 7.24023C20.002 7.13542 20.6423 7.08301 21.417 7.08301V6.87109C21.417 6.55208 21.3167 6.29688 21.1162 6.10547C20.9157 5.91406 20.6195 5.81836 20.2275 5.81836C19.8083 5.81836 19.5029 5.89355 19.3115 6.04395C19.1201 6.19434 19.0062 6.37663 18.9697 6.59082H17.7119C17.7484 6.03027 17.9831 5.56315 18.416 5.18945C18.849 4.81576 19.4528 4.62891 20.2275 4.62891ZM19.7422 9.94727C20.2754 9.94727 20.6878 9.81055 20.9795 9.53711C21.2712 9.26367 21.417 8.93099 21.417 8.53906V8.19727C20.8564 8.19727 20.403 8.22461 20.0566 8.2793C19.7148 8.32943 19.446 8.40007 19.25 8.49121C19.054 8.5778 18.9219 8.68717 18.8535 8.81934C18.7897 8.94694 18.7578 9.09049 18.7578 9.25C18.7578 9.42773 18.8421 9.58952 19.0107 9.73535C19.1794 9.87663 19.4232 9.94727 19.7422 9.94727ZM29.75 8.68945C29.6771 9.02669 29.5609 9.34115 29.4014 9.63281C29.2419 9.91992 29.0391 10.1706 28.793 10.3848C28.5514 10.599 28.2734 10.7676 27.959 10.8906C27.6491 11.0091 27.3118 11.0684 26.9473 11.0684C26.528 11.0684 26.1361 10.9909 25.7715 10.8359C25.4069 10.6764 25.0856 10.4554 24.8076 10.1729C24.5342 9.88574 24.32 9.54622 24.165 9.1543C24.0146 8.76237 23.9395 8.32715 23.9395 7.84863C23.9395 7.37467 24.0146 6.94173 24.165 6.5498C24.32 6.15788 24.5342 5.82064 24.8076 5.53809C25.0856 5.25098 25.4069 5.02767 25.7715 4.86816C26.1361 4.70866 26.528 4.62891 26.9473 4.62891C27.3118 4.62891 27.6491 4.69043 27.959 4.81348C28.2734 4.93197 28.5514 5.10059 28.793 5.31934C29.0391 5.53353 29.2396 5.78646 29.3945 6.07812C29.554 6.36523 29.6725 6.67513 29.75 7.00781H28.417C28.3122 6.65234 28.139 6.36523 27.8975 6.14648C27.6559 5.92773 27.3392 5.81836 26.9473 5.81836C26.724 5.81836 26.5052 5.86849 26.291 5.96875C26.0768 6.06445 25.89 6.20345 25.7305 6.38574C25.571 6.56803 25.4411 6.78451 25.3408 7.03516C25.2451 7.28125 25.1973 7.55241 25.1973 7.84863C25.1973 8.14941 25.2451 8.42285 25.3408 8.66895C25.4411 8.91504 25.571 9.12923 25.7305 9.31152C25.89 9.49382 26.0768 9.63509 26.291 9.73535C26.5052 9.83105 26.724 9.87891 26.9473 9.87891C27.3392 9.87891 27.6559 9.76953 27.8975 9.55078C28.1436 9.33203 28.3167 9.04492 28.417 8.68945H29.75ZM34.0908 4.62891C34.4372 4.62891 34.763 4.69727 35.0684 4.83398C35.3783 4.9707 35.6471 5.15755 35.875 5.39453C36.1074 5.63151 36.2874 5.91862 36.415 6.25586C36.5472 6.58854 36.6133 6.95768 36.6133 7.36328V11H35.3555V7.36328C35.3555 7.1582 35.3145 6.96224 35.2324 6.77539C35.1549 6.58854 35.0479 6.42448 34.9111 6.2832C34.779 6.14193 34.624 6.03027 34.4463 5.94824C34.2686 5.86165 34.0817 5.81836 33.8857 5.81836C33.6715 5.81836 33.471 5.86165 33.2842 5.94824C33.0973 6.03027 32.9333 6.14193 32.792 6.2832C32.6507 6.42448 32.5391 6.58854 32.457 6.77539C32.3796 6.95768 32.3408 7.15365 32.3408 7.36328V11H31.083V2.18164H32.3408V5.33301C32.473 5.20085 32.6234 5.08236 32.792 4.97754C32.9424 4.89551 33.127 4.81803 33.3457 4.74512C33.5645 4.66764 33.8128 4.62891 34.0908 4.62891ZM46.6143 6.31055C46.8467 6.44271 47.0563 6.61133 47.2432 6.81641C47.4027 6.99414 47.5462 7.21745 47.6738 7.48633C47.806 7.75521 47.8721 8.08561 47.8721 8.47754C47.8721 8.81478 47.8014 9.13607 47.6602 9.44141C47.5234 9.74219 47.3275 10.0088 47.0723 10.2412C46.8216 10.4691 46.5254 10.6536 46.1836 10.7949C45.8464 10.9316 45.4772 11 45.0762 11H41.5078V2.18164H45.0078C45.3542 2.18164 45.68 2.24772 45.9854 2.37988C46.2952 2.50749 46.5641 2.68294 46.792 2.90625C47.0199 3.12956 47.1976 3.38932 47.3252 3.68555C47.4574 3.97721 47.5234 4.29167 47.5234 4.62891C47.5234 4.9069 47.4733 5.15299 47.373 5.36719C47.2773 5.57682 47.1748 5.75 47.0654 5.88672C46.9333 6.05534 46.7829 6.19661 46.6143 6.31055ZM42.834 5.81836H45.0078C45.3633 5.81836 45.6618 5.69987 45.9033 5.46289C46.1449 5.22591 46.2656 4.94792 46.2656 4.62891C46.2656 4.3099 46.1426 4.0319 45.8965 3.79492C45.6549 3.55794 45.3587 3.43945 45.0078 3.43945H42.834V5.81836ZM45.0762 9.74219C45.2812 9.74219 45.4749 9.70573 45.6572 9.63281C45.8395 9.55534 45.9945 9.45508 46.1221 9.33203C46.2542 9.20443 46.3568 9.05632 46.4297 8.8877C46.5072 8.71908 46.5459 8.53678 46.5459 8.34082C46.5459 8.14486 46.5072 7.96257 46.4297 7.79395C46.3568 7.62533 46.2542 7.47949 46.1221 7.35645C45.9945 7.22884 45.8395 7.12858 45.6572 7.05566C45.4749 6.97819 45.2812 6.93945 45.0762 6.93945H42.834V9.74219H45.0762ZM51.6592 4.62891C52.0238 4.62891 52.3564 4.68815 52.6572 4.80664C52.9626 4.92057 53.2223 5.0778 53.4365 5.27832C53.6507 5.47884 53.8171 5.71582 53.9355 5.98926C54.054 6.25814 54.1133 6.55208 54.1133 6.87109V11H53.2041L52.9238 10.3711C52.8008 10.5033 52.6549 10.6195 52.4863 10.7197C52.3359 10.8109 52.1468 10.8929 51.9189 10.9658C51.6911 11.0342 51.4176 11.0684 51.0986 11.0684C50.3968 11.0684 49.859 10.8952 49.4854 10.5488C49.1162 10.1979 48.9316 9.74219 48.9316 9.18164C48.9316 8.86263 48.9909 8.57552 49.1094 8.32031C49.2324 8.06055 49.4398 7.8418 49.7314 7.66406C50.0277 7.48177 50.4264 7.34049 50.9277 7.24023C51.4336 7.13542 52.0739 7.08301 52.8486 7.08301V6.87109C52.8486 6.55208 52.7484 6.29688 52.5479 6.10547C52.3473 5.91406 52.0511 5.81836 51.6592 5.81836C51.2399 5.81836 50.9346 5.89355 50.7432 6.04395C50.5518 6.19434 50.4378 6.37663 50.4014 6.59082H49.1436C49.18 6.03027 49.4147 5.56315 49.8477 5.18945C50.2806 4.81576 50.8844 4.62891 51.6592 4.62891ZM51.1738 9.94727C51.707 9.94727 52.1195 9.81055 52.4111 9.53711C52.7028 9.26367 52.8486 8.93099 52.8486 8.53906V8.19727C52.2881 8.19727 51.8346 8.22461 51.4883 8.2793C51.1465 8.32943 50.8776 8.40007 50.6816 8.49121C50.4857 8.5778 50.3535 8.68717 50.2852 8.81934C50.2214 8.94694 50.1895 9.09049 50.1895 9.25C50.1895 9.42773 50.2738 9.58952 50.4424 9.73535C50.611 9.87663 50.8548 9.94727 51.1738 9.94727ZM58.7275 4.62891C59.0739 4.62891 59.3997 4.69727 59.7051 4.83398C60.015 4.9707 60.2839 5.15755 60.5117 5.39453C60.7396 5.63151 60.9196 5.91862 61.0518 6.25586C61.1839 6.58854 61.25 6.95768 61.25 7.36328V11H59.9922V7.36328C59.9922 7.1582 59.9512 6.96224 59.8691 6.77539C59.7917 6.58854 59.6846 6.42448 59.5479 6.2832C59.4111 6.14193 59.2539 6.03027 59.0762 5.94824C58.8984 5.86165 58.7116 5.81836 58.5156 5.81836C58.3014 5.81836 58.1009 5.86165 57.9141 5.94824C57.7272 6.03027 57.5632 6.14193 57.4219 6.2832C57.2852 6.42448 57.1758 6.58854 57.0938 6.77539C57.0163 6.95768 56.9775 7.15365 56.9775 7.36328V11H55.7197V4.69727H56.6289L56.9092 5.33301C57.0322 5.20085 57.1758 5.08236 57.3398 4.97754C57.4902 4.89551 57.6794 4.81803 57.9072 4.74512C58.1351 4.66764 58.4085 4.62891 58.7275 4.62891ZM66.6367 11L64.1826 7.99219V11H62.9248V2.18164H64.1826V7.43164L66.3564 4.69727H67.8262L65.3789 7.63672L68.1748 11H66.6367ZM71.668 4.56055C71.668 4.24154 71.7363 3.9362 71.873 3.64453C72.0143 3.34831 72.2148 3.08626 72.4746 2.8584C72.7389 2.63053 73.0511 2.45052 73.4111 2.31836C73.7712 2.18164 74.1699 2.11328 74.6074 2.11328C75.0267 2.11328 75.4118 2.18392 75.7627 2.3252C76.1136 2.46191 76.4167 2.6556 76.6719 2.90625C76.9271 3.15234 77.1253 3.44173 77.2666 3.77441C77.4079 4.10254 77.4785 4.45801 77.4785 4.84082H76.1455C76.1455 4.38509 76.002 4.01595 75.7148 3.7334C75.4323 3.44629 75.0632 3.30273 74.6074 3.30273C74.3659 3.30273 74.1449 3.33691 73.9443 3.40527C73.7438 3.47363 73.5729 3.56934 73.4316 3.69238C73.2904 3.81543 73.181 3.95215 73.1035 4.10254C73.0306 4.24837 72.9941 4.40104 72.9941 4.56055C72.9941 4.87044 73.1104 5.1097 73.3428 5.27832C73.5798 5.44238 73.8691 5.58594 74.2109 5.70898C74.5573 5.82747 74.9333 5.94596 75.3389 6.06445C75.749 6.18294 76.125 6.34245 76.4668 6.54297C76.8132 6.74349 77.1025 7.00781 77.335 7.33594C77.5719 7.65951 77.6904 8.08789 77.6904 8.62109C77.6904 8.9401 77.6175 9.24544 77.4717 9.53711C77.3258 9.82878 77.1185 10.0908 76.8496 10.3232C76.5853 10.5511 76.264 10.7334 75.8857 10.8701C75.5075 11.0023 75.0814 11.0684 74.6074 11.0684C74.1335 11.0684 73.7119 11.0023 73.3428 10.8701C72.9736 10.7334 72.6569 10.5465 72.3926 10.3096C72.1328 10.068 71.9346 9.78092 71.7979 9.44824C71.6657 9.111 71.5996 8.74186 71.5996 8.34082H72.9258C72.9258 8.83757 73.0648 9.2181 73.3428 9.48242C73.6253 9.74674 74.0469 9.87891 74.6074 9.87891C75.2044 9.87891 75.6442 9.75814 75.9268 9.5166C76.2139 9.27507 76.3574 8.97656 76.3574 8.62109C76.3574 8.29297 76.2412 8.03548 76.0088 7.84863C75.7764 7.66178 75.487 7.50684 75.1406 7.38379C74.7943 7.25618 74.4183 7.13314 74.0127 7.01465C73.6071 6.8916 73.2311 6.73438 72.8848 6.54297C72.5384 6.35156 72.249 6.10319 72.0166 5.79785C71.7842 5.48796 71.668 5.07552 71.668 4.56055ZM80.7666 8.90137C80.7666 9.17936 80.86 9.41178 81.0469 9.59863C81.2337 9.78548 81.4661 9.87891 81.7441 9.87891C81.7897 9.87891 81.8376 9.87663 81.8877 9.87207C81.9424 9.86751 81.9925 9.86068 82.0381 9.85156C82.0837 9.84245 82.127 9.82878 82.168 9.81055V10.9316C82.1133 10.959 82.0472 10.9818 81.9697 11C81.8285 11.0456 81.6621 11.0684 81.4707 11.0684C81.1927 11.0684 80.9329 11.0182 80.6914 10.918C80.4544 10.8132 80.2471 10.6673 80.0693 10.4805C79.8916 10.2936 79.7526 10.068 79.6523 9.80371C79.5566 9.53939 79.5088 9.23861 79.5088 8.90137V5.88672H78.3877V4.69727H78.8799C79.1214 4.69727 79.3219 4.61979 79.4814 4.46484C79.641 4.30534 79.7207 4.10482 79.7207 3.86328V3.02246H80.7666V4.69727H82.168V5.88672H80.7666V8.90137ZM85.9482 4.62891C86.3128 4.62891 86.6455 4.68815 86.9463 4.80664C87.2516 4.92057 87.5114 5.0778 87.7256 5.27832C87.9398 5.47884 88.1061 5.71582 88.2246 5.98926C88.3431 6.25814 88.4023 6.55208 88.4023 6.87109V11H87.4932L87.2129 10.3711C87.0898 10.5033 86.944 10.6195 86.7754 10.7197C86.625 10.8109 86.4359 10.8929 86.208 10.9658C85.9801 11.0342 85.7067 11.0684 85.3877 11.0684C84.6859 11.0684 84.1481 10.8952 83.7744 10.5488C83.4053 10.1979 83.2207 9.74219 83.2207 9.18164C83.2207 8.86263 83.2799 8.57552 83.3984 8.32031C83.5215 8.06055 83.7288 7.8418 84.0205 7.66406C84.3167 7.48177 84.7155 7.34049 85.2168 7.24023C85.7227 7.13542 86.363 7.08301 87.1377 7.08301V6.87109C87.1377 6.55208 87.0374 6.29688 86.8369 6.10547C86.6364 5.91406 86.3402 5.81836 85.9482 5.81836C85.529 5.81836 85.2236 5.89355 85.0322 6.04395C84.8408 6.19434 84.7269 6.37663 84.6904 6.59082H83.4326C83.4691 6.03027 83.7038 5.56315 84.1367 5.18945C84.5697 4.81576 85.1735 4.62891 85.9482 4.62891ZM85.4629 9.94727C85.9961 9.94727 86.4085 9.81055 86.7002 9.53711C86.9919 9.26367 87.1377 8.93099 87.1377 8.53906V8.19727C86.5771 8.19727 86.1237 8.22461 85.7773 8.2793C85.4355 8.32943 85.1667 8.40007 84.9707 8.49121C84.7747 8.5778 84.6426 8.68717 84.5742 8.81934C84.5104 8.94694 84.4785 9.09049 84.4785 9.25C84.4785 9.42773 84.5628 9.58952 84.7314 9.73535C84.9001 9.87663 85.1439 9.94727 85.4629 9.94727ZM91.6904 8.90137C91.6904 9.17936 91.7839 9.41178 91.9707 9.59863C92.1576 9.78548 92.39 9.87891 92.668 9.87891C92.7135 9.87891 92.7614 9.87663 92.8115 9.87207C92.8662 9.86751 92.9163 9.86068 92.9619 9.85156C93.0075 9.84245 93.0508 9.82878 93.0918 9.81055V10.9316C93.0371 10.959 92.971 10.9818 92.8936 11C92.7523 11.0456 92.5859 11.0684 92.3945 11.0684C92.1165 11.0684 91.8568 11.0182 91.6152 10.918C91.3783 10.8132 91.1709 10.6673 90.9932 10.4805C90.8154 10.2936 90.6764 10.068 90.5762 9.80371C90.4805 9.53939 90.4326 9.23861 90.4326 8.90137V5.88672H89.3115V4.69727H89.8037C90.0452 4.69727 90.2458 4.61979 90.4053 4.46484C90.5648 4.30534 90.6445 4.10482 90.6445 3.86328V3.02246H91.6904V4.69727H93.0918V5.88672H91.6904V8.90137ZM99.8867 9.18164C99.7819 9.44141 99.6497 9.68522 99.4902 9.91309C99.3307 10.141 99.1393 10.3415 98.916 10.5146C98.6927 10.6878 98.4329 10.8245 98.1367 10.9248C97.8451 11.0205 97.5169 11.0684 97.1523 11.0684C96.7331 11.0684 96.3411 10.9909 95.9766 10.8359C95.612 10.6764 95.293 10.4554 95.0195 10.1729C94.7461 9.88574 94.5319 9.54622 94.377 9.1543C94.222 8.76237 94.1445 8.32715 94.1445 7.84863C94.1445 7.37467 94.222 6.94173 94.377 6.5498C94.5319 6.15788 94.7415 5.82064 95.0059 5.53809C95.2702 5.25098 95.5824 5.02767 95.9424 4.86816C96.3024 4.70866 96.6829 4.62891 97.084 4.62891C97.485 4.62891 97.8656 4.70866 98.2256 4.86816C98.5856 5.02767 98.8978 5.25098 99.1621 5.53809C99.4264 5.82064 99.6361 6.15788 99.791 6.5498C99.946 6.94173 100.023 7.37467 100.023 7.84863C100.023 7.92155 100.019 7.99447 100.01 8.06738C100.001 8.13574 99.9915 8.19499 99.9824 8.24512C99.9733 8.30892 99.9642 8.36361 99.9551 8.40918H95.4707C95.4889 8.60514 95.5459 8.79199 95.6416 8.96973C95.7373 9.14746 95.8558 9.30469 95.9971 9.44141C96.1429 9.57357 96.3161 9.68066 96.5166 9.7627C96.7171 9.84017 96.929 9.87891 97.1523 9.87891C97.5352 9.87891 97.8382 9.79688 98.0615 9.63281C98.2894 9.46875 98.4535 9.31836 98.5537 9.18164H99.8867ZM97.084 5.81836C96.6647 5.81836 96.3092 5.96191 96.0176 6.24902C95.7305 6.53158 95.5482 6.90299 95.4707 7.36328H98.834C98.7611 6.90755 98.5742 6.53613 98.2734 6.24902C97.9772 5.96191 97.5807 5.81836 97.084 5.81836ZM107.728 4.62891C108.028 4.62891 108.309 4.68815 108.568 4.80664C108.828 4.92057 109.056 5.09147 109.252 5.31934C109.448 5.54264 109.603 5.81608 109.717 6.13965C109.835 6.45866 109.895 6.81868 109.895 7.21973V11H108.637V7.21973C108.637 6.80046 108.516 6.46322 108.274 6.20801C108.037 5.94824 107.762 5.81836 107.447 5.81836C107.128 5.81836 106.85 5.94824 106.613 6.20801C106.376 6.46322 106.258 6.80046 106.258 7.21973V11H104.993V7.21973C104.993 6.80046 104.875 6.46322 104.638 6.20801C104.401 5.94824 104.123 5.81836 103.804 5.81836C103.485 5.81836 103.207 5.94824 102.97 6.20801C102.733 6.46322 102.614 6.80046 102.614 7.21973V11H101.356V4.69727H102.266L102.546 5.33301C102.66 5.20085 102.794 5.08236 102.949 4.97754C103.081 4.89551 103.243 4.81803 103.435 4.74512C103.626 4.66764 103.842 4.62891 104.084 4.62891C104.385 4.62891 104.642 4.68132 104.856 4.78613C105.071 4.88639 105.253 4.99805 105.403 5.12109C105.572 5.27148 105.715 5.43555 105.834 5.61328C105.834 5.61328 105.875 5.56315 105.957 5.46289C106.035 5.36719 106.153 5.25553 106.312 5.12793C106.472 5.00033 106.668 4.88639 106.9 4.78613C107.133 4.68132 107.409 4.62891 107.728 4.62891ZM117.045 9.18164C116.94 9.44141 116.808 9.68522 116.648 9.91309C116.489 10.141 116.298 10.3415 116.074 10.5146C115.851 10.6878 115.591 10.8245 115.295 10.9248C115.003 11.0205 114.675 11.0684 114.311 11.0684C113.891 11.0684 113.499 10.9909 113.135 10.8359C112.77 10.6764 112.451 10.4554 112.178 10.1729C111.904 9.88574 111.69 9.54622 111.535 9.1543C111.38 8.76237 111.303 8.32715 111.303 7.84863C111.303 7.37467 111.38 6.94173 111.535 6.5498C111.69 6.15788 111.9 5.82064 112.164 5.53809C112.428 5.25098 112.741 5.02767 113.101 4.86816C113.461 4.70866 113.841 4.62891 114.242 4.62891C114.643 4.62891 115.024 4.70866 115.384 4.86816C115.744 5.02767 116.056 5.25098 116.32 5.53809C116.585 5.82064 116.794 6.15788 116.949 6.5498C117.104 6.94173 117.182 7.37467 117.182 7.84863C117.182 7.92155 117.177 7.99447 117.168 8.06738C117.159 8.13574 117.15 8.19499 117.141 8.24512C117.132 8.30892 117.122 8.36361 117.113 8.40918H112.629C112.647 8.60514 112.704 8.79199 112.8 8.96973C112.896 9.14746 113.014 9.30469 113.155 9.44141C113.301 9.57357 113.474 9.68066 113.675 9.7627C113.875 9.84017 114.087 9.87891 114.311 9.87891C114.693 9.87891 114.996 9.79688 115.22 9.63281C115.448 9.46875 115.612 9.31836 115.712 9.18164H117.045ZM114.242 5.81836C113.823 5.81836 113.467 5.96191 113.176 6.24902C112.889 6.53158 112.706 6.90299 112.629 7.36328H115.992C115.919 6.90755 115.732 6.53613 115.432 6.24902C115.135 5.96191 114.739 5.81836 114.242 5.81836ZM121.522 4.62891C121.869 4.62891 122.195 4.69727 122.5 4.83398C122.81 4.9707 123.079 5.15755 123.307 5.39453C123.535 5.63151 123.715 5.91862 123.847 6.25586C123.979 6.58854 124.045 6.95768 124.045 7.36328V11H122.787V7.36328C122.787 7.1582 122.746 6.96224 122.664 6.77539C122.587 6.58854 122.479 6.42448 122.343 6.2832C122.206 6.14193 122.049 6.03027 121.871 5.94824C121.693 5.86165 121.507 5.81836 121.311 5.81836C121.096 5.81836 120.896 5.86165 120.709 5.94824C120.522 6.03027 120.358 6.14193 120.217 6.2832C120.08 6.42448 119.971 6.58854 119.889 6.77539C119.811 6.95768 119.772 7.15365 119.772 7.36328V11H118.515V4.69727H119.424L119.704 5.33301C119.827 5.20085 119.971 5.08236 120.135 4.97754C120.285 4.89551 120.474 4.81803 120.702 4.74512C120.93 4.66764 121.203 4.62891 121.522 4.62891ZM127.47 8.90137C127.47 9.17936 127.563 9.41178 127.75 9.59863C127.937 9.78548 128.169 9.87891 128.447 9.87891C128.493 9.87891 128.541 9.87663 128.591 9.87207C128.646 9.86751 128.696 9.86068 128.741 9.85156C128.787 9.84245 128.83 9.82878 128.871 9.81055V10.9316C128.816 10.959 128.75 10.9818 128.673 11C128.532 11.0456 128.365 11.0684 128.174 11.0684C127.896 11.0684 127.636 11.0182 127.395 10.918C127.158 10.8132 126.95 10.6673 126.772 10.4805C126.595 10.2936 126.456 10.068 126.355 9.80371C126.26 9.53939 126.212 9.23861 126.212 8.90137V5.88672H125.091V4.69727H125.583C125.825 4.69727 126.025 4.61979 126.185 4.46484C126.344 4.30534 126.424 4.10482 126.424 3.86328V3.02246H127.47V4.69727H128.871V5.88672H127.47V8.90137Z\" fill=\"#333333\"/>\n                    <path d=\"M1.40137 11H0L3.36328 2.18164H4.47754L7.84082 11H6.43945L5.66699 8.96973H2.16699L1.40137 11ZM5.18164 7.71191L3.91699 4.21191L2.65918 7.71191H5.18164ZM10.3564 8.90137C10.3564 9.17936 10.4499 9.41178 10.6367 9.59863C10.8236 9.78548 11.056 9.87891 11.334 9.87891C11.3796 9.87891 11.4274 9.87663 11.4775 9.87207C11.5322 9.86751 11.5824 9.86068 11.6279 9.85156C11.6735 9.84245 11.7168 9.82878 11.7578 9.81055V10.9316C11.7031 10.959 11.637 10.9818 11.5596 11C11.4183 11.0456 11.252 11.0684 11.0605 11.0684C10.7826 11.0684 10.5228 11.0182 10.2812 10.918C10.0443 10.8132 9.83691 10.6673 9.65918 10.4805C9.48145 10.2936 9.34245 10.068 9.24219 9.80371C9.14648 9.53939 9.09863 9.23861 9.09863 8.90137V5.88672H7.97754V4.69727H8.46973C8.71126 4.69727 8.91178 4.61979 9.07129 4.46484C9.23079 4.30534 9.31055 4.10482 9.31055 3.86328V3.02246H10.3564V4.69727H11.7578V5.88672H10.3564V8.90137ZM15.0459 8.90137C15.0459 9.17936 15.1393 9.41178 15.3262 9.59863C15.513 9.78548 15.7454 9.87891 16.0234 9.87891C16.069 9.87891 16.1169 9.87663 16.167 9.87207C16.2217 9.86751 16.2718 9.86068 16.3174 9.85156C16.363 9.84245 16.4062 9.82878 16.4473 9.81055V10.9316C16.3926 10.959 16.3265 10.9818 16.249 11C16.1077 11.0456 15.9414 11.0684 15.75 11.0684C15.472 11.0684 15.2122 11.0182 14.9707 10.918C14.7337 10.8132 14.5264 10.6673 14.3486 10.4805C14.1709 10.2936 14.0319 10.068 13.9316 9.80371C13.8359 9.53939 13.7881 9.23861 13.7881 8.90137V5.88672H12.667V4.69727H13.1592C13.4007 4.69727 13.6012 4.61979 13.7607 4.46484C13.9202 4.30534 14 4.10482 14 3.86328V3.02246H15.0459V4.69727H16.4473V5.88672H15.0459V8.90137ZM20.2275 4.62891C20.5921 4.62891 20.9248 4.68815 21.2256 4.80664C21.5309 4.92057 21.7907 5.0778 22.0049 5.27832C22.2191 5.47884 22.3854 5.71582 22.5039 5.98926C22.6224 6.25814 22.6816 6.55208 22.6816 6.87109V11H21.7725L21.4922 10.3711C21.3691 10.5033 21.2233 10.6195 21.0547 10.7197C20.9043 10.8109 20.7152 10.8929 20.4873 10.9658C20.2594 11.0342 19.986 11.0684 19.667 11.0684C18.9652 11.0684 18.4274 10.8952 18.0537 10.5488C17.6846 10.1979 17.5 9.74219 17.5 9.18164C17.5 8.86263 17.5592 8.57552 17.6777 8.32031C17.8008 8.06055 18.0081 7.8418 18.2998 7.66406C18.596 7.48177 18.9948 7.34049 19.4961 7.24023C20.002 7.13542 20.6423 7.08301 21.417 7.08301V6.87109C21.417 6.55208 21.3167 6.29688 21.1162 6.10547C20.9157 5.91406 20.6195 5.81836 20.2275 5.81836C19.8083 5.81836 19.5029 5.89355 19.3115 6.04395C19.1201 6.19434 19.0062 6.37663 18.9697 6.59082H17.7119C17.7484 6.03027 17.9831 5.56315 18.416 5.18945C18.849 4.81576 19.4528 4.62891 20.2275 4.62891ZM19.7422 9.94727C20.2754 9.94727 20.6878 9.81055 20.9795 9.53711C21.2712 9.26367 21.417 8.93099 21.417 8.53906V8.19727C20.8564 8.19727 20.403 8.22461 20.0566 8.2793C19.7148 8.32943 19.446 8.40007 19.25 8.49121C19.054 8.5778 18.9219 8.68717 18.8535 8.81934C18.7897 8.94694 18.7578 9.09049 18.7578 9.25C18.7578 9.42773 18.8421 9.58952 19.0107 9.73535C19.1794 9.87663 19.4232 9.94727 19.7422 9.94727ZM29.75 8.68945C29.6771 9.02669 29.5609 9.34115 29.4014 9.63281C29.2419 9.91992 29.0391 10.1706 28.793 10.3848C28.5514 10.599 28.2734 10.7676 27.959 10.8906C27.6491 11.0091 27.3118 11.0684 26.9473 11.0684C26.528 11.0684 26.1361 10.9909 25.7715 10.8359C25.4069 10.6764 25.0856 10.4554 24.8076 10.1729C24.5342 9.88574 24.32 9.54622 24.165 9.1543C24.0146 8.76237 23.9395 8.32715 23.9395 7.84863C23.9395 7.37467 24.0146 6.94173 24.165 6.5498C24.32 6.15788 24.5342 5.82064 24.8076 5.53809C25.0856 5.25098 25.4069 5.02767 25.7715 4.86816C26.1361 4.70866 26.528 4.62891 26.9473 4.62891C27.3118 4.62891 27.6491 4.69043 27.959 4.81348C28.2734 4.93197 28.5514 5.10059 28.793 5.31934C29.0391 5.53353 29.2396 5.78646 29.3945 6.07812C29.554 6.36523 29.6725 6.67513 29.75 7.00781H28.417C28.3122 6.65234 28.139 6.36523 27.8975 6.14648C27.6559 5.92773 27.3392 5.81836 26.9473 5.81836C26.724 5.81836 26.5052 5.86849 26.291 5.96875C26.0768 6.06445 25.89 6.20345 25.7305 6.38574C25.571 6.56803 25.4411 6.78451 25.3408 7.03516C25.2451 7.28125 25.1973 7.55241 25.1973 7.84863C25.1973 8.14941 25.2451 8.42285 25.3408 8.66895C25.4411 8.91504 25.571 9.12923 25.7305 9.31152C25.89 9.49382 26.0768 9.63509 26.291 9.73535C26.5052 9.83105 26.724 9.87891 26.9473 9.87891C27.3392 9.87891 27.6559 9.76953 27.8975 9.55078C28.1436 9.33203 28.3167 9.04492 28.417 8.68945H29.75ZM34.0908 4.62891C34.4372 4.62891 34.763 4.69727 35.0684 4.83398C35.3783 4.9707 35.6471 5.15755 35.875 5.39453C36.1074 5.63151 36.2874 5.91862 36.415 6.25586C36.5472 6.58854 36.6133 6.95768 36.6133 7.36328V11H35.3555V7.36328C35.3555 7.1582 35.3145 6.96224 35.2324 6.77539C35.1549 6.58854 35.0479 6.42448 34.9111 6.2832C34.779 6.14193 34.624 6.03027 34.4463 5.94824C34.2686 5.86165 34.0817 5.81836 33.8857 5.81836C33.6715 5.81836 33.471 5.86165 33.2842 5.94824C33.0973 6.03027 32.9333 6.14193 32.792 6.2832C32.6507 6.42448 32.5391 6.58854 32.457 6.77539C32.3796 6.95768 32.3408 7.15365 32.3408 7.36328V11H31.083V2.18164H32.3408V5.33301C32.473 5.20085 32.6234 5.08236 32.792 4.97754C32.9424 4.89551 33.127 4.81803 33.3457 4.74512C33.5645 4.66764 33.8128 4.62891 34.0908 4.62891ZM46.6143 6.31055C46.8467 6.44271 47.0563 6.61133 47.2432 6.81641C47.4027 6.99414 47.5462 7.21745 47.6738 7.48633C47.806 7.75521 47.8721 8.08561 47.8721 8.47754C47.8721 8.81478 47.8014 9.13607 47.6602 9.44141C47.5234 9.74219 47.3275 10.0088 47.0723 10.2412C46.8216 10.4691 46.5254 10.6536 46.1836 10.7949C45.8464 10.9316 45.4772 11 45.0762 11H41.5078V2.18164H45.0078C45.3542 2.18164 45.68 2.24772 45.9854 2.37988C46.2952 2.50749 46.5641 2.68294 46.792 2.90625C47.0199 3.12956 47.1976 3.38932 47.3252 3.68555C47.4574 3.97721 47.5234 4.29167 47.5234 4.62891C47.5234 4.9069 47.4733 5.15299 47.373 5.36719C47.2773 5.57682 47.1748 5.75 47.0654 5.88672C46.9333 6.05534 46.7829 6.19661 46.6143 6.31055ZM42.834 5.81836H45.0078C45.3633 5.81836 45.6618 5.69987 45.9033 5.46289C46.1449 5.22591 46.2656 4.94792 46.2656 4.62891C46.2656 4.3099 46.1426 4.0319 45.8965 3.79492C45.6549 3.55794 45.3587 3.43945 45.0078 3.43945H42.834V5.81836ZM45.0762 9.74219C45.2812 9.74219 45.4749 9.70573 45.6572 9.63281C45.8395 9.55534 45.9945 9.45508 46.1221 9.33203C46.2542 9.20443 46.3568 9.05632 46.4297 8.8877C46.5072 8.71908 46.5459 8.53678 46.5459 8.34082C46.5459 8.14486 46.5072 7.96257 46.4297 7.79395C46.3568 7.62533 46.2542 7.47949 46.1221 7.35645C45.9945 7.22884 45.8395 7.12858 45.6572 7.05566C45.4749 6.97819 45.2812 6.93945 45.0762 6.93945H42.834V9.74219H45.0762ZM51.6592 4.62891C52.0238 4.62891 52.3564 4.68815 52.6572 4.80664C52.9626 4.92057 53.2223 5.0778 53.4365 5.27832C53.6507 5.47884 53.8171 5.71582 53.9355 5.98926C54.054 6.25814 54.1133 6.55208 54.1133 6.87109V11H53.2041L52.9238 10.3711C52.8008 10.5033 52.6549 10.6195 52.4863 10.7197C52.3359 10.8109 52.1468 10.8929 51.9189 10.9658C51.6911 11.0342 51.4176 11.0684 51.0986 11.0684C50.3968 11.0684 49.859 10.8952 49.4854 10.5488C49.1162 10.1979 48.9316 9.74219 48.9316 9.18164C48.9316 8.86263 48.9909 8.57552 49.1094 8.32031C49.2324 8.06055 49.4398 7.8418 49.7314 7.66406C50.0277 7.48177 50.4264 7.34049 50.9277 7.24023C51.4336 7.13542 52.0739 7.08301 52.8486 7.08301V6.87109C52.8486 6.55208 52.7484 6.29688 52.5479 6.10547C52.3473 5.91406 52.0511 5.81836 51.6592 5.81836C51.2399 5.81836 50.9346 5.89355 50.7432 6.04395C50.5518 6.19434 50.4378 6.37663 50.4014 6.59082H49.1436C49.18 6.03027 49.4147 5.56315 49.8477 5.18945C50.2806 4.81576 50.8844 4.62891 51.6592 4.62891ZM51.1738 9.94727C51.707 9.94727 52.1195 9.81055 52.4111 9.53711C52.7028 9.26367 52.8486 8.93099 52.8486 8.53906V8.19727C52.2881 8.19727 51.8346 8.22461 51.4883 8.2793C51.1465 8.32943 50.8776 8.40007 50.6816 8.49121C50.4857 8.5778 50.3535 8.68717 50.2852 8.81934C50.2214 8.94694 50.1895 9.09049 50.1895 9.25C50.1895 9.42773 50.2738 9.58952 50.4424 9.73535C50.611 9.87663 50.8548 9.94727 51.1738 9.94727ZM58.7275 4.62891C59.0739 4.62891 59.3997 4.69727 59.7051 4.83398C60.015 4.9707 60.2839 5.15755 60.5117 5.39453C60.7396 5.63151 60.9196 5.91862 61.0518 6.25586C61.1839 6.58854 61.25 6.95768 61.25 7.36328V11H59.9922V7.36328C59.9922 7.1582 59.9512 6.96224 59.8691 6.77539C59.7917 6.58854 59.6846 6.42448 59.5479 6.2832C59.4111 6.14193 59.2539 6.03027 59.0762 5.94824C58.8984 5.86165 58.7116 5.81836 58.5156 5.81836C58.3014 5.81836 58.1009 5.86165 57.9141 5.94824C57.7272 6.03027 57.5632 6.14193 57.4219 6.2832C57.2852 6.42448 57.1758 6.58854 57.0938 6.77539C57.0163 6.95768 56.9775 7.15365 56.9775 7.36328V11H55.7197V4.69727H56.6289L56.9092 5.33301C57.0322 5.20085 57.1758 5.08236 57.3398 4.97754C57.4902 4.89551 57.6794 4.81803 57.9072 4.74512C58.1351 4.66764 58.4085 4.62891 58.7275 4.62891ZM66.6367 11L64.1826 7.99219V11H62.9248V2.18164H64.1826V7.43164L66.3564 4.69727H67.8262L65.3789 7.63672L68.1748 11H66.6367ZM71.668 4.56055C71.668 4.24154 71.7363 3.9362 71.873 3.64453C72.0143 3.34831 72.2148 3.08626 72.4746 2.8584C72.7389 2.63053 73.0511 2.45052 73.4111 2.31836C73.7712 2.18164 74.1699 2.11328 74.6074 2.11328C75.0267 2.11328 75.4118 2.18392 75.7627 2.3252C76.1136 2.46191 76.4167 2.6556 76.6719 2.90625C76.9271 3.15234 77.1253 3.44173 77.2666 3.77441C77.4079 4.10254 77.4785 4.45801 77.4785 4.84082H76.1455C76.1455 4.38509 76.002 4.01595 75.7148 3.7334C75.4323 3.44629 75.0632 3.30273 74.6074 3.30273C74.3659 3.30273 74.1449 3.33691 73.9443 3.40527C73.7438 3.47363 73.5729 3.56934 73.4316 3.69238C73.2904 3.81543 73.181 3.95215 73.1035 4.10254C73.0306 4.24837 72.9941 4.40104 72.9941 4.56055C72.9941 4.87044 73.1104 5.1097 73.3428 5.27832C73.5798 5.44238 73.8691 5.58594 74.2109 5.70898C74.5573 5.82747 74.9333 5.94596 75.3389 6.06445C75.749 6.18294 76.125 6.34245 76.4668 6.54297C76.8132 6.74349 77.1025 7.00781 77.335 7.33594C77.5719 7.65951 77.6904 8.08789 77.6904 8.62109C77.6904 8.9401 77.6175 9.24544 77.4717 9.53711C77.3258 9.82878 77.1185 10.0908 76.8496 10.3232C76.5853 10.5511 76.264 10.7334 75.8857 10.8701C75.5075 11.0023 75.0814 11.0684 74.6074 11.0684C74.1335 11.0684 73.7119 11.0023 73.3428 10.8701C72.9736 10.7334 72.6569 10.5465 72.3926 10.3096C72.1328 10.068 71.9346 9.78092 71.7979 9.44824C71.6657 9.111 71.5996 8.74186 71.5996 8.34082H72.9258C72.9258 8.83757 73.0648 9.2181 73.3428 9.48242C73.6253 9.74674 74.0469 9.87891 74.6074 9.87891C75.2044 9.87891 75.6442 9.75814 75.9268 9.5166C76.2139 9.27507 76.3574 8.97656 76.3574 8.62109C76.3574 8.29297 76.2412 8.03548 76.0088 7.84863C75.7764 7.66178 75.487 7.50684 75.1406 7.38379C74.7943 7.25618 74.4183 7.13314 74.0127 7.01465C73.6071 6.8916 73.2311 6.73438 72.8848 6.54297C72.5384 6.35156 72.249 6.10319 72.0166 5.79785C71.7842 5.48796 71.668 5.07552 71.668 4.56055ZM80.7666 8.90137C80.7666 9.17936 80.86 9.41178 81.0469 9.59863C81.2337 9.78548 81.4661 9.87891 81.7441 9.87891C81.7897 9.87891 81.8376 9.87663 81.8877 9.87207C81.9424 9.86751 81.9925 9.86068 82.0381 9.85156C82.0837 9.84245 82.127 9.82878 82.168 9.81055V10.9316C82.1133 10.959 82.0472 10.9818 81.9697 11C81.8285 11.0456 81.6621 11.0684 81.4707 11.0684C81.1927 11.0684 80.9329 11.0182 80.6914 10.918C80.4544 10.8132 80.2471 10.6673 80.0693 10.4805C79.8916 10.2936 79.7526 10.068 79.6523 9.80371C79.5566 9.53939 79.5088 9.23861 79.5088 8.90137V5.88672H78.3877V4.69727H78.8799C79.1214 4.69727 79.3219 4.61979 79.4814 4.46484C79.641 4.30534 79.7207 4.10482 79.7207 3.86328V3.02246H80.7666V4.69727H82.168V5.88672H80.7666V8.90137ZM85.9482 4.62891C86.3128 4.62891 86.6455 4.68815 86.9463 4.80664C87.2516 4.92057 87.5114 5.0778 87.7256 5.27832C87.9398 5.47884 88.1061 5.71582 88.2246 5.98926C88.3431 6.25814 88.4023 6.55208 88.4023 6.87109V11H87.4932L87.2129 10.3711C87.0898 10.5033 86.944 10.6195 86.7754 10.7197C86.625 10.8109 86.4359 10.8929 86.208 10.9658C85.9801 11.0342 85.7067 11.0684 85.3877 11.0684C84.6859 11.0684 84.1481 10.8952 83.7744 10.5488C83.4053 10.1979 83.2207 9.74219 83.2207 9.18164C83.2207 8.86263 83.2799 8.57552 83.3984 8.32031C83.5215 8.06055 83.7288 7.8418 84.0205 7.66406C84.3167 7.48177 84.7155 7.34049 85.2168 7.24023C85.7227 7.13542 86.363 7.08301 87.1377 7.08301V6.87109C87.1377 6.55208 87.0374 6.29688 86.8369 6.10547C86.6364 5.91406 86.3402 5.81836 85.9482 5.81836C85.529 5.81836 85.2236 5.89355 85.0322 6.04395C84.8408 6.19434 84.7269 6.37663 84.6904 6.59082H83.4326C83.4691 6.03027 83.7038 5.56315 84.1367 5.18945C84.5697 4.81576 85.1735 4.62891 85.9482 4.62891ZM85.4629 9.94727C85.9961 9.94727 86.4085 9.81055 86.7002 9.53711C86.9919 9.26367 87.1377 8.93099 87.1377 8.53906V8.19727C86.5771 8.19727 86.1237 8.22461 85.7773 8.2793C85.4355 8.32943 85.1667 8.40007 84.9707 8.49121C84.7747 8.5778 84.6426 8.68717 84.5742 8.81934C84.5104 8.94694 84.4785 9.09049 84.4785 9.25C84.4785 9.42773 84.5628 9.58952 84.7314 9.73535C84.9001 9.87663 85.1439 9.94727 85.4629 9.94727ZM91.6904 8.90137C91.6904 9.17936 91.7839 9.41178 91.9707 9.59863C92.1576 9.78548 92.39 9.87891 92.668 9.87891C92.7135 9.87891 92.7614 9.87663 92.8115 9.87207C92.8662 9.86751 92.9163 9.86068 92.9619 9.85156C93.0075 9.84245 93.0508 9.82878 93.0918 9.81055V10.9316C93.0371 10.959 92.971 10.9818 92.8936 11C92.7523 11.0456 92.5859 11.0684 92.3945 11.0684C92.1165 11.0684 91.8568 11.0182 91.6152 10.918C91.3783 10.8132 91.1709 10.6673 90.9932 10.4805C90.8154 10.2936 90.6764 10.068 90.5762 9.80371C90.4805 9.53939 90.4326 9.23861 90.4326 8.90137V5.88672H89.3115V4.69727H89.8037C90.0452 4.69727 90.2458 4.61979 90.4053 4.46484C90.5648 4.30534 90.6445 4.10482 90.6445 3.86328V3.02246H91.6904V4.69727H93.0918V5.88672H91.6904V8.90137ZM99.8867 9.18164C99.7819 9.44141 99.6497 9.68522 99.4902 9.91309C99.3307 10.141 99.1393 10.3415 98.916 10.5146C98.6927 10.6878 98.4329 10.8245 98.1367 10.9248C97.8451 11.0205 97.5169 11.0684 97.1523 11.0684C96.7331 11.0684 96.3411 10.9909 95.9766 10.8359C95.612 10.6764 95.293 10.4554 95.0195 10.1729C94.7461 9.88574 94.5319 9.54622 94.377 9.1543C94.222 8.76237 94.1445 8.32715 94.1445 7.84863C94.1445 7.37467 94.222 6.94173 94.377 6.5498C94.5319 6.15788 94.7415 5.82064 95.0059 5.53809C95.2702 5.25098 95.5824 5.02767 95.9424 4.86816C96.3024 4.70866 96.6829 4.62891 97.084 4.62891C97.485 4.62891 97.8656 4.70866 98.2256 4.86816C98.5856 5.02767 98.8978 5.25098 99.1621 5.53809C99.4264 5.82064 99.6361 6.15788 99.791 6.5498C99.946 6.94173 100.023 7.37467 100.023 7.84863C100.023 7.92155 100.019 7.99447 100.01 8.06738C100.001 8.13574 99.9915 8.19499 99.9824 8.24512C99.9733 8.30892 99.9642 8.36361 99.9551 8.40918H95.4707C95.4889 8.60514 95.5459 8.79199 95.6416 8.96973C95.7373 9.14746 95.8558 9.30469 95.9971 9.44141C96.1429 9.57357 96.3161 9.68066 96.5166 9.7627C96.7171 9.84017 96.929 9.87891 97.1523 9.87891C97.5352 9.87891 97.8382 9.79688 98.0615 9.63281C98.2894 9.46875 98.4535 9.31836 98.5537 9.18164H99.8867ZM97.084 5.81836C96.6647 5.81836 96.3092 5.96191 96.0176 6.24902C95.7305 6.53158 95.5482 6.90299 95.4707 7.36328H98.834C98.7611 6.90755 98.5742 6.53613 98.2734 6.24902C97.9772 5.96191 97.5807 5.81836 97.084 5.81836ZM107.728 4.62891C108.028 4.62891 108.309 4.68815 108.568 4.80664C108.828 4.92057 109.056 5.09147 109.252 5.31934C109.448 5.54264 109.603 5.81608 109.717 6.13965C109.835 6.45866 109.895 6.81868 109.895 7.21973V11H108.637V7.21973C108.637 6.80046 108.516 6.46322 108.274 6.20801C108.037 5.94824 107.762 5.81836 107.447 5.81836C107.128 5.81836 106.85 5.94824 106.613 6.20801C106.376 6.46322 106.258 6.80046 106.258 7.21973V11H104.993V7.21973C104.993 6.80046 104.875 6.46322 104.638 6.20801C104.401 5.94824 104.123 5.81836 103.804 5.81836C103.485 5.81836 103.207 5.94824 102.97 6.20801C102.733 6.46322 102.614 6.80046 102.614 7.21973V11H101.356V4.69727H102.266L102.546 5.33301C102.66 5.20085 102.794 5.08236 102.949 4.97754C103.081 4.89551 103.243 4.81803 103.435 4.74512C103.626 4.66764 103.842 4.62891 104.084 4.62891C104.385 4.62891 104.642 4.68132 104.856 4.78613C105.071 4.88639 105.253 4.99805 105.403 5.12109C105.572 5.27148 105.715 5.43555 105.834 5.61328C105.834 5.61328 105.875 5.56315 105.957 5.46289C106.035 5.36719 106.153 5.25553 106.312 5.12793C106.472 5.00033 106.668 4.88639 106.9 4.78613C107.133 4.68132 107.409 4.62891 107.728 4.62891ZM117.045 9.18164C116.94 9.44141 116.808 9.68522 116.648 9.91309C116.489 10.141 116.298 10.3415 116.074 10.5146C115.851 10.6878 115.591 10.8245 115.295 10.9248C115.003 11.0205 114.675 11.0684 114.311 11.0684C113.891 11.0684 113.499 10.9909 113.135 10.8359C112.77 10.6764 112.451 10.4554 112.178 10.1729C111.904 9.88574 111.69 9.54622 111.535 9.1543C111.38 8.76237 111.303 8.32715 111.303 7.84863C111.303 7.37467 111.38 6.94173 111.535 6.5498C111.69 6.15788 111.9 5.82064 112.164 5.53809C112.428 5.25098 112.741 5.02767 113.101 4.86816C113.461 4.70866 113.841 4.62891 114.242 4.62891C114.643 4.62891 115.024 4.70866 115.384 4.86816C115.744 5.02767 116.056 5.25098 116.32 5.53809C116.585 5.82064 116.794 6.15788 116.949 6.5498C117.104 6.94173 117.182 7.37467 117.182 7.84863C117.182 7.92155 117.177 7.99447 117.168 8.06738C117.159 8.13574 117.15 8.19499 117.141 8.24512C117.132 8.30892 117.122 8.36361 117.113 8.40918H112.629C112.647 8.60514 112.704 8.79199 112.8 8.96973C112.896 9.14746 113.014 9.30469 113.155 9.44141C113.301 9.57357 113.474 9.68066 113.675 9.7627C113.875 9.84017 114.087 9.87891 114.311 9.87891C114.693 9.87891 114.996 9.79688 115.22 9.63281C115.448 9.46875 115.612 9.31836 115.712 9.18164H117.045ZM114.242 5.81836C113.823 5.81836 113.467 5.96191 113.176 6.24902C112.889 6.53158 112.706 6.90299 112.629 7.36328H115.992C115.919 6.90755 115.732 6.53613 115.432 6.24902C115.135 5.96191 114.739 5.81836 114.242 5.81836ZM121.522 4.62891C121.869 4.62891 122.195 4.69727 122.5 4.83398C122.81 4.9707 123.079 5.15755 123.307 5.39453C123.535 5.63151 123.715 5.91862 123.847 6.25586C123.979 6.58854 124.045 6.95768 124.045 7.36328V11H122.787V7.36328C122.787 7.1582 122.746 6.96224 122.664 6.77539C122.587 6.58854 122.479 6.42448 122.343 6.2832C122.206 6.14193 122.049 6.03027 121.871 5.94824C121.693 5.86165 121.507 5.81836 121.311 5.81836C121.096 5.81836 120.896 5.86165 120.709 5.94824C120.522 6.03027 120.358 6.14193 120.217 6.2832C120.08 6.42448 119.971 6.58854 119.889 6.77539C119.811 6.95768 119.772 7.15365 119.772 7.36328V11H118.515V4.69727H119.424L119.704 5.33301C119.827 5.20085 119.971 5.08236 120.135 4.97754C120.285 4.89551 120.474 4.81803 120.702 4.74512C120.93 4.66764 121.203 4.62891 121.522 4.62891ZM127.47 8.90137C127.47 9.17936 127.563 9.41178 127.75 9.59863C127.937 9.78548 128.169 9.87891 128.447 9.87891C128.493 9.87891 128.541 9.87663 128.591 9.87207C128.646 9.86751 128.696 9.86068 128.741 9.85156C128.787 9.84245 128.83 9.82878 128.871 9.81055V10.9316C128.816 10.959 128.75 10.9818 128.673 11C128.532 11.0456 128.365 11.0684 128.174 11.0684C127.896 11.0684 127.636 11.0182 127.395 10.918C127.158 10.8132 126.95 10.6673 126.772 10.4805C126.595 10.2936 126.456 10.068 126.355 9.80371C126.26 9.53939 126.212 9.23861 126.212 8.90137V5.88672H125.091V4.69727H125.583C125.825 4.69727 126.025 4.61979 126.185 4.46484C126.344 4.30534 126.424 4.10482 126.424 3.86328V3.02246H127.47V4.69727H128.871V5.88672H127.47V8.90137Z\" fill=\"#333333\"/>\n                    <path d=\"M90.92 201.44C90.92 201.984 91.008 202.488 91.184 202.952C91.376 203.4 91.624 203.792 91.928 204.128C92.248 204.448 92.616 204.704 93.032 204.896C93.464 205.072 93.92 205.16 94.4 205.16C94.88 205.16 95.328 205.072 95.744 204.896C96.176 204.704 96.544 204.448 96.848 204.128C97.168 203.792 97.416 203.4 97.592 202.952C97.784 202.488 97.88 201.984 97.88 201.44C97.88 200.896 97.784 200.4 97.592 199.952C97.416 199.488 97.168 199.096 96.848 198.776C96.544 198.44 96.176 198.184 95.744 198.008C95.328 197.816 94.88 197.72 94.4 197.72C93.92 197.72 93.464 197.816 93.032 198.008C92.616 198.184 92.248 198.44 91.928 198.776C91.624 199.096 91.376 199.488 91.184 199.952C91.008 200.4 90.92 200.896 90.92 201.44ZM102.08 201.44C102.08 202.544 101.88 203.576 101.48 204.536C101.096 205.48 100.552 206.304 99.848 207.008C99.16 207.696 98.344 208.24 97.4 208.64C96.472 209.04 95.472 209.24 94.4 209.24C93.312 209.24 92.304 209.04 91.376 208.64C90.448 208.24 89.632 207.696 88.928 207.008C88.24 206.304 87.696 205.48 87.296 204.536C86.912 203.576 86.72 202.544 86.72 201.44C86.72 200.336 86.912 199.312 87.296 198.368C87.696 197.408 88.24 196.584 88.928 195.896C89.632 195.192 90.448 194.64 91.376 194.24C92.304 193.84 93.312 193.64 94.4 193.64C95.472 193.64 96.472 193.84 97.4 194.24C98.344 194.64 99.16 195.192 99.848 195.896C100.552 196.584 101.096 197.408 101.48 198.368C101.88 199.312 102.08 200.336 102.08 201.44ZM117.685 193.88V209H113.845L108.325 201.2V209H104.125V193.88H107.965L113.485 201.68V193.88H117.685ZM120.32 193.88H124.52V204.92H131.12V209H120.32V193.88ZM135.196 203.48L130.036 193.88H134.596L137.308 199.4L139.996 193.88H144.556L139.396 203.48V209H135.196V203.48Z\" fill=\"#333333\"/>\n                    <path d=\"M70.4526 250.297H67.5952L66.9346 252H66L68.6426 245.071H69.4106L72.0479 252H71.1133L70.4526 250.297ZM67.8691 249.524H70.1787L69.0239 246.5L67.8691 249.524ZM73.1489 245.732H73.8633V247.048H74.9644V247.821H73.8633V250.405C73.8633 250.684 73.9385 250.901 74.0889 251.055C74.2393 251.209 74.4398 251.286 74.6904 251.286C74.762 251.286 74.8283 251.278 74.8892 251.264C74.9178 251.257 74.9429 251.246 74.9644 251.232V251.946C74.9285 251.968 74.8892 251.986 74.8462 252C74.7495 252.036 74.6242 252.054 74.4702 252.054C74.2804 252.054 74.0996 252.014 73.9277 251.936C73.7559 251.853 73.6037 251.74 73.4712 251.597C73.3387 251.454 73.2331 251.282 73.1543 251.082C73.0791 250.881 73.0415 250.655 73.0415 250.405V247.821H72.1606V247.048H72.5474C72.952 247.048 73.1525 246.847 73.1489 246.446V245.732ZM76.6724 245.732H77.3867V247.048H78.4878V247.821H77.3867V250.405C77.3867 250.684 77.4619 250.901 77.6123 251.055C77.7627 251.209 77.9632 251.286 78.2139 251.286C78.2855 251.286 78.3517 251.278 78.4126 251.264C78.4412 251.257 78.4663 251.246 78.4878 251.232V251.946C78.452 251.968 78.4126 251.986 78.3696 252C78.2729 252.036 78.1476 252.054 77.9937 252.054C77.8039 252.054 77.623 252.014 77.4512 251.936C77.2793 251.853 77.1271 251.74 76.9946 251.597C76.8621 251.454 76.7565 251.282 76.6777 251.082C76.6025 250.881 76.5649 250.655 76.5649 250.405V247.821H75.6841V247.048H76.0708C76.4754 247.048 76.6759 246.847 76.6724 246.446V245.732ZM81.4634 246.994C81.7355 246.994 81.9862 247.041 82.2153 247.134C82.4481 247.223 82.6468 247.345 82.8115 247.499C82.9762 247.653 83.1034 247.834 83.1929 248.042C83.286 248.246 83.3325 248.466 83.3325 248.702V252H82.731L82.5107 251.452C82.3997 251.57 82.2744 251.672 82.1348 251.758C82.0094 251.841 81.8555 251.91 81.6729 251.968C81.4902 252.025 81.2736 252.054 81.0229 252.054C80.7723 252.054 80.5467 252.016 80.3462 251.941C80.1457 251.862 79.9738 251.755 79.8306 251.619C79.6873 251.483 79.5745 251.325 79.4922 251.146C79.4134 250.967 79.374 250.775 79.374 250.571C79.374 250.335 79.4206 250.12 79.5137 249.927C79.6104 249.733 79.7751 249.565 80.0078 249.422C80.2441 249.279 80.5664 249.169 80.9746 249.094C81.3828 249.015 81.8949 248.976 82.5107 248.976V248.702C82.5107 248.451 82.4123 248.233 82.2153 248.047C82.022 247.861 81.7713 247.768 81.4634 247.768C81.1554 247.768 80.9281 247.832 80.7812 247.961C80.6344 248.086 80.5324 248.26 80.4751 248.482H79.5942C79.6229 248.278 79.6855 248.086 79.7822 247.907C79.8789 247.725 80.006 247.565 80.1636 247.429C80.3211 247.293 80.5073 247.188 80.7222 247.112C80.937 247.034 81.1841 246.994 81.4634 246.994ZM81.0229 251.286C81.2414 251.286 81.4419 251.252 81.6245 251.184C81.8107 251.112 81.9683 251.022 82.0972 250.915C82.2261 250.804 82.3263 250.681 82.3979 250.544C82.4731 250.408 82.5107 250.271 82.5107 250.131V249.744C82.013 249.744 81.6138 249.766 81.313 249.809C81.0122 249.848 80.7777 249.907 80.6094 249.986C80.4447 250.061 80.3354 250.152 80.2817 250.26C80.228 250.364 80.2012 250.485 80.2012 250.625C80.2012 250.793 80.2746 250.945 80.4214 251.082C80.5718 251.218 80.7723 251.286 81.0229 251.286ZM86.6895 247.768C86.4997 247.768 86.3135 247.811 86.1309 247.896C85.9518 247.979 85.7925 248.097 85.6528 248.251C85.5132 248.405 85.4022 248.589 85.3198 248.804C85.241 249.019 85.2017 249.259 85.2017 249.524C85.2017 249.789 85.241 250.031 85.3198 250.249C85.4022 250.464 85.5132 250.648 85.6528 250.802C85.7925 250.956 85.9518 251.076 86.1309 251.162C86.3135 251.244 86.4997 251.286 86.6895 251.286C86.8506 251.286 87.0028 251.257 87.146 251.2C87.2892 251.139 87.4163 251.062 87.5273 250.969C87.6419 250.872 87.7386 250.761 87.8174 250.636C87.8997 250.51 87.9642 250.378 88.0107 250.238H88.8325C88.7752 250.489 88.6839 250.725 88.5586 250.947C88.4333 251.166 88.2775 251.357 88.0913 251.522C87.9051 251.687 87.6921 251.817 87.4521 251.914C87.2158 252.007 86.9616 252.054 86.6895 252.054C86.3743 252.054 86.0754 251.993 85.7925 251.871C85.5096 251.746 85.2625 251.572 85.0513 251.35C84.8436 251.125 84.6789 250.858 84.5571 250.55C84.439 250.242 84.3799 249.9 84.3799 249.524C84.3799 249.152 84.439 248.811 84.5571 248.503C84.6789 248.195 84.8436 247.931 85.0513 247.708C85.2625 247.483 85.5096 247.307 85.7925 247.182C86.0754 247.057 86.3743 246.994 86.6895 246.994C86.9616 246.994 87.2158 247.042 87.4521 247.139C87.6921 247.232 87.9051 247.363 88.0913 247.531C88.2775 247.696 88.4333 247.888 88.5586 248.106C88.6839 248.324 88.7752 248.559 88.8325 248.81H88.0107C87.9678 248.67 87.9051 248.539 87.8228 248.417C87.7404 248.292 87.6419 248.181 87.5273 248.084C87.4163 247.988 87.2892 247.911 87.146 247.854C87.0028 247.796 86.8506 247.768 86.6895 247.768ZM92.1841 246.994C92.4491 246.994 92.6961 247.048 92.9253 247.155C93.158 247.263 93.3621 247.41 93.5376 247.596C93.7131 247.782 93.8527 248.007 93.9565 248.272C94.0604 248.534 94.1123 248.824 94.1123 249.143V252H93.2852V249.143C93.2852 248.938 93.2511 248.752 93.1831 248.584C93.1187 248.412 93.0309 248.265 92.9199 248.144C92.8125 248.022 92.6854 247.929 92.5386 247.864C92.3918 247.8 92.2378 247.768 92.0767 247.768C91.6864 247.768 91.3677 247.893 91.1206 248.144C90.8771 248.391 90.7554 248.724 90.7554 249.143V252H89.9282V245.071H90.7554V247.655C90.8592 247.529 90.981 247.42 91.1206 247.327C91.2459 247.245 91.3945 247.17 91.5664 247.102C91.7419 247.03 91.9478 246.994 92.1841 246.994ZM101.863 250.679C101.78 250.854 101.677 251.028 101.551 251.2C101.426 251.368 101.279 251.515 101.111 251.64C100.943 251.762 100.751 251.862 100.536 251.941C100.325 252.016 100.089 252.054 99.8271 252.054C99.512 252.054 99.2131 251.993 98.9302 251.871C98.6473 251.746 98.4002 251.572 98.189 251.35C97.9813 251.125 97.8166 250.858 97.6948 250.55C97.5767 250.242 97.5176 249.9 97.5176 249.524C97.5176 249.152 97.5767 248.811 97.6948 248.503C97.8166 248.195 97.9795 247.931 98.1836 247.708C98.3913 247.483 98.633 247.307 98.9087 247.182C99.1844 247.057 99.4727 246.994 99.7734 246.994C100.074 246.994 100.357 247.053 100.622 247.171C100.891 247.29 101.123 247.458 101.32 247.676C101.521 247.891 101.678 248.151 101.793 248.455C101.911 248.759 101.97 249.098 101.97 249.47C101.97 249.542 101.967 249.604 101.959 249.658C101.952 249.708 101.945 249.751 101.938 249.787C101.931 249.83 101.924 249.871 101.917 249.911H98.3984C98.4128 250.086 98.4611 250.258 98.5435 250.426C98.6294 250.595 98.735 250.741 98.8604 250.867C98.9893 250.992 99.1379 251.094 99.3062 251.173C99.478 251.248 99.6517 251.286 99.8271 251.286C99.9811 251.286 100.117 251.264 100.235 251.221C100.357 251.175 100.468 251.123 100.568 251.065C100.669 251.008 100.751 250.945 100.815 250.877C100.883 250.806 100.939 250.74 100.982 250.679H101.863ZM99.7734 247.768C99.6051 247.768 99.444 247.803 99.29 247.875C99.1396 247.947 99.0018 248.045 98.8765 248.17C98.7547 248.296 98.6509 248.446 98.5649 248.622C98.4826 248.797 98.4271 248.989 98.3984 249.196H101.089C101.032 248.756 100.88 248.409 100.633 248.154C100.389 247.896 100.103 247.768 99.7734 247.768ZM107.137 247.048L105.155 252H104.387L102.405 247.048H103.286L104.774 250.845L106.256 247.048H107.137ZM108.792 252H107.964V247.048H108.792V252ZM107.857 245.651C107.857 245.497 107.905 245.372 108.002 245.275C108.102 245.175 108.226 245.125 108.373 245.125C108.527 245.125 108.652 245.175 108.749 245.275C108.849 245.372 108.899 245.497 108.899 245.651C108.899 245.798 108.849 245.922 108.749 246.022C108.652 246.122 108.527 246.172 108.373 246.172C108.226 246.172 108.102 246.122 108.002 246.022C107.905 245.922 107.857 245.798 107.857 245.651ZM113.797 249.524C113.797 249.259 113.754 249.019 113.668 248.804C113.586 248.589 113.475 248.405 113.335 248.251C113.196 248.097 113.031 247.979 112.841 247.896C112.655 247.811 112.46 247.768 112.256 247.768C112.052 247.768 111.855 247.811 111.665 247.896C111.479 247.979 111.316 248.097 111.176 248.251C111.037 248.405 110.924 248.589 110.838 248.804C110.756 249.019 110.714 249.259 110.714 249.524C110.714 249.789 110.756 250.031 110.838 250.249C110.924 250.464 111.037 250.648 111.176 250.802C111.316 250.956 111.479 251.076 111.665 251.162C111.855 251.244 112.052 251.286 112.256 251.286C112.46 251.286 112.655 251.244 112.841 251.162C113.031 251.076 113.196 250.956 113.335 250.802C113.475 250.648 113.586 250.464 113.668 250.249C113.754 250.031 113.797 249.789 113.797 249.524ZM113.685 251.452C113.574 251.57 113.45 251.672 113.314 251.758C113.189 251.841 113.033 251.91 112.847 251.968C112.664 252.025 112.449 252.054 112.202 252.054C111.887 252.054 111.588 251.993 111.305 251.871C111.022 251.746 110.775 251.572 110.564 251.35C110.356 251.125 110.192 250.858 110.07 250.55C109.952 250.242 109.893 249.9 109.893 249.524C109.893 249.152 109.952 248.811 110.07 248.503C110.192 248.195 110.356 247.931 110.564 247.708C110.775 247.483 111.022 247.307 111.305 247.182C111.588 247.057 111.887 246.994 112.202 246.994C112.453 246.994 112.669 247.03 112.852 247.102C113.035 247.17 113.189 247.245 113.314 247.327C113.454 247.424 113.577 247.533 113.685 247.655V245.071H114.512V252H113.905L113.685 251.452ZM120.017 250.679C119.935 250.854 119.831 251.028 119.706 251.2C119.58 251.368 119.433 251.515 119.265 251.64C119.097 251.762 118.905 251.862 118.69 251.941C118.479 252.016 118.243 252.054 117.981 252.054C117.666 252.054 117.367 251.993 117.084 251.871C116.802 251.746 116.555 251.572 116.343 251.35C116.136 251.125 115.971 250.858 115.849 250.55C115.731 250.242 115.672 249.9 115.672 249.524C115.672 249.152 115.731 248.811 115.849 248.503C115.971 248.195 116.134 247.931 116.338 247.708C116.546 247.483 116.787 247.307 117.063 247.182C117.339 247.057 117.627 246.994 117.928 246.994C118.229 246.994 118.511 247.053 118.776 247.171C119.045 247.29 119.278 247.458 119.475 247.676C119.675 247.891 119.833 248.151 119.947 248.455C120.065 248.759 120.125 249.098 120.125 249.47C120.125 249.542 120.121 249.604 120.114 249.658C120.107 249.708 120.099 249.751 120.092 249.787C120.085 249.83 120.078 249.871 120.071 249.911H116.553C116.567 250.086 116.615 250.258 116.698 250.426C116.784 250.595 116.889 250.741 117.015 250.867C117.144 250.992 117.292 251.094 117.46 251.173C117.632 251.248 117.806 251.286 117.981 251.286C118.135 251.286 118.271 251.264 118.39 251.221C118.511 251.175 118.622 251.123 118.723 251.065C118.823 251.008 118.905 250.945 118.97 250.877C119.038 250.806 119.093 250.74 119.136 250.679H120.017ZM117.928 247.768C117.759 247.768 117.598 247.803 117.444 247.875C117.294 247.947 117.156 248.045 117.031 248.17C116.909 248.296 116.805 248.446 116.719 248.622C116.637 248.797 116.581 248.989 116.553 249.196H119.244C119.186 248.756 119.034 248.409 118.787 248.154C118.544 247.896 118.257 247.768 117.928 247.768ZM123.476 246.994C123.741 246.994 123.988 247.048 124.217 247.155C124.45 247.263 124.654 247.41 124.83 247.596C125.005 247.782 125.143 248.007 125.243 248.272C125.347 248.534 125.399 248.824 125.399 249.143V252H124.577V249.143C124.577 248.938 124.543 248.752 124.475 248.584C124.411 248.412 124.323 248.265 124.212 248.144C124.101 248.022 123.972 247.929 123.825 247.864C123.682 247.8 123.528 247.768 123.363 247.768C122.973 247.768 122.656 247.893 122.413 248.144C122.169 248.391 122.047 248.724 122.047 249.143V252H121.22V247.048H121.827L122.047 247.601C122.151 247.49 122.271 247.392 122.407 247.306C122.533 247.223 122.683 247.152 122.858 247.091C123.034 247.026 123.24 246.994 123.476 246.994ZM128.756 247.768C128.566 247.768 128.38 247.811 128.197 247.896C128.018 247.979 127.859 248.097 127.719 248.251C127.58 248.405 127.469 248.589 127.386 248.804C127.307 249.019 127.268 249.259 127.268 249.524C127.268 249.789 127.307 250.031 127.386 250.249C127.469 250.464 127.58 250.648 127.719 250.802C127.859 250.956 128.018 251.076 128.197 251.162C128.38 251.244 128.566 251.286 128.756 251.286C128.917 251.286 129.069 251.257 129.212 251.2C129.356 251.139 129.483 251.062 129.594 250.969C129.708 250.872 129.805 250.761 129.884 250.636C129.966 250.51 130.031 250.378 130.077 250.238H130.899C130.842 250.489 130.75 250.725 130.625 250.947C130.5 251.166 130.344 251.357 130.158 251.522C129.972 251.687 129.758 251.817 129.519 251.914C129.282 252.007 129.028 252.054 128.756 252.054C128.441 252.054 128.142 251.993 127.859 251.871C127.576 251.746 127.329 251.572 127.118 251.35C126.91 251.125 126.745 250.858 126.624 250.55C126.505 250.242 126.446 249.9 126.446 249.524C126.446 249.152 126.505 248.811 126.624 248.503C126.745 248.195 126.91 247.931 127.118 247.708C127.329 247.483 127.576 247.307 127.859 247.182C128.142 247.057 128.441 246.994 128.756 246.994C129.028 246.994 129.282 247.042 129.519 247.139C129.758 247.232 129.972 247.363 130.158 247.531C130.344 247.696 130.5 247.888 130.625 248.106C130.75 248.324 130.842 248.559 130.899 248.81H130.077C130.034 248.67 129.972 248.539 129.889 248.417C129.807 248.292 129.708 248.181 129.594 248.084C129.483 247.988 129.356 247.911 129.212 247.854C129.069 247.796 128.917 247.768 128.756 247.768ZM135.958 250.679C135.876 250.854 135.772 251.028 135.647 251.2C135.522 251.368 135.375 251.515 135.207 251.64C135.038 251.762 134.847 251.862 134.632 251.941C134.421 252.016 134.184 252.054 133.923 252.054C133.608 252.054 133.309 251.993 133.026 251.871C132.743 251.746 132.496 251.572 132.285 251.35C132.077 251.125 131.912 250.858 131.791 250.55C131.672 250.242 131.613 249.9 131.613 249.524C131.613 249.152 131.672 248.811 131.791 248.503C131.912 248.195 132.075 247.931 132.279 247.708C132.487 247.483 132.729 247.307 133.004 247.182C133.28 247.057 133.568 246.994 133.869 246.994C134.17 246.994 134.453 247.053 134.718 247.171C134.986 247.29 135.219 247.458 135.416 247.676C135.617 247.891 135.774 248.151 135.889 248.455C136.007 248.759 136.066 249.098 136.066 249.47C136.066 249.542 136.062 249.604 136.055 249.658C136.048 249.708 136.041 249.751 136.034 249.787C136.027 249.83 136.019 249.871 136.012 249.911H132.494C132.508 250.086 132.557 250.258 132.639 250.426C132.725 250.595 132.831 250.741 132.956 250.867C133.085 250.992 133.234 251.094 133.402 251.173C133.574 251.248 133.747 251.286 133.923 251.286C134.077 251.286 134.213 251.264 134.331 251.221C134.453 251.175 134.564 251.123 134.664 251.065C134.764 251.008 134.847 250.945 134.911 250.877C134.979 250.806 135.035 250.74 135.078 250.679H135.958ZM133.869 247.768C133.701 247.768 133.54 247.803 133.386 247.875C133.235 247.947 133.097 248.045 132.972 248.17C132.85 248.296 132.747 248.446 132.661 248.622C132.578 248.797 132.523 248.989 132.494 249.196H135.185C135.128 248.756 134.976 248.409 134.729 248.154C134.485 247.896 134.199 247.768 133.869 247.768ZM140.019 249.524C140.019 249.789 140.058 250.031 140.137 250.249C140.22 250.464 140.331 250.648 140.47 250.802C140.61 250.956 140.769 251.076 140.948 251.162C141.131 251.244 141.317 251.286 141.507 251.286C141.697 251.286 141.881 251.244 142.06 251.162C142.239 251.076 142.397 250.956 142.533 250.802C142.669 250.648 142.778 250.464 142.86 250.249C142.946 250.031 142.989 249.789 142.989 249.524C142.989 249.259 142.946 249.019 142.86 248.804C142.778 248.589 142.669 248.405 142.533 248.251C142.397 248.097 142.239 247.979 142.06 247.896C141.881 247.811 141.697 247.768 141.507 247.768C141.317 247.768 141.131 247.811 140.948 247.896C140.769 247.979 140.61 248.097 140.47 248.251C140.331 248.405 140.22 248.589 140.137 248.804C140.058 249.019 140.019 249.259 140.019 249.524ZM143.816 249.524C143.816 249.896 143.756 250.238 143.634 250.55C143.512 250.858 143.347 251.125 143.14 251.35C142.932 251.572 142.687 251.746 142.404 251.871C142.121 251.993 141.822 252.054 141.507 252.054C141.192 252.054 140.893 251.993 140.61 251.871C140.327 251.746 140.08 251.572 139.869 251.35C139.661 251.125 139.496 250.858 139.375 250.55C139.256 250.242 139.197 249.9 139.197 249.524C139.197 249.152 139.256 248.811 139.375 248.503C139.496 248.195 139.661 247.931 139.869 247.708C140.08 247.483 140.327 247.307 140.61 247.182C140.893 247.057 141.192 246.994 141.507 246.994C141.822 246.994 142.121 247.057 142.404 247.182C142.687 247.307 142.932 247.483 143.14 247.708C143.347 247.931 143.512 248.195 143.634 248.503C143.756 248.811 143.816 249.152 143.816 249.524ZM147.007 247.821H145.906V252H145.084V247.821H144.477V247.048H145.084V246.667C145.084 246.416 145.122 246.19 145.197 245.99C145.276 245.786 145.381 245.614 145.514 245.474C145.646 245.331 145.798 245.22 145.97 245.141C146.142 245.059 146.323 245.018 146.513 245.018C146.595 245.018 146.667 245.023 146.728 245.034C146.788 245.044 146.842 245.057 146.889 245.071C146.932 245.093 146.971 245.111 147.007 245.125V245.839C146.985 245.832 146.96 245.825 146.932 245.818C146.91 245.811 146.88 245.804 146.84 245.796C146.805 245.789 146.769 245.786 146.733 245.786C146.482 245.786 146.282 245.863 146.131 246.017C145.981 246.171 145.906 246.387 145.906 246.667V247.048H147.007V247.821ZM151.024 249.524C151.024 249.789 151.066 250.031 151.148 250.249C151.234 250.464 151.347 250.648 151.486 250.802C151.626 250.956 151.789 251.076 151.975 251.162C152.165 251.244 152.362 251.286 152.566 251.286C152.77 251.286 152.965 251.244 153.151 251.162C153.341 251.076 153.506 250.956 153.646 250.802C153.785 250.648 153.896 250.464 153.979 250.249C154.064 250.031 154.107 249.789 154.107 249.524C154.107 249.259 154.064 249.019 153.979 248.804C153.896 248.589 153.785 248.405 153.646 248.251C153.506 248.097 153.341 247.979 153.151 247.896C152.965 247.811 152.77 247.768 152.566 247.768C152.362 247.768 152.165 247.811 151.975 247.896C151.789 247.979 151.626 248.097 151.486 248.251C151.347 248.405 151.234 248.589 151.148 248.804C151.066 249.019 151.024 249.259 151.024 249.524ZM151.137 247.601C151.241 247.49 151.365 247.392 151.508 247.306C151.633 247.223 151.787 247.152 151.97 247.091C152.156 247.026 152.373 246.994 152.62 246.994C152.935 246.994 153.234 247.057 153.517 247.182C153.799 247.307 154.045 247.483 154.252 247.708C154.464 247.931 154.628 248.195 154.747 248.503C154.868 248.811 154.929 249.152 154.929 249.524C154.929 249.896 154.868 250.238 154.747 250.55C154.628 250.858 154.464 251.125 154.252 251.35C154.045 251.572 153.799 251.746 153.517 251.871C153.234 251.993 152.935 252.054 152.62 252.054C152.369 252.054 152.152 252.02 151.97 251.952C151.787 251.88 151.633 251.805 151.508 251.726C151.361 251.629 151.237 251.518 151.137 251.393V253.762H150.31V247.048H150.917L151.137 247.601ZM157.894 246.994C158.166 246.994 158.417 247.041 158.646 247.134C158.879 247.223 159.077 247.345 159.242 247.499C159.407 247.653 159.534 247.834 159.624 248.042C159.717 248.246 159.763 248.466 159.763 248.702V252H159.162L158.941 251.452C158.83 251.57 158.705 251.672 158.565 251.758C158.44 251.841 158.286 251.91 158.104 251.968C157.921 252.025 157.704 252.054 157.454 252.054C157.203 252.054 156.977 252.016 156.777 251.941C156.576 251.862 156.404 251.755 156.261 251.619C156.118 251.483 156.005 251.325 155.923 251.146C155.844 250.967 155.805 250.775 155.805 250.571C155.805 250.335 155.851 250.12 155.944 249.927C156.041 249.733 156.206 249.565 156.438 249.422C156.675 249.279 156.997 249.169 157.405 249.094C157.813 249.015 158.326 248.976 158.941 248.976V248.702C158.941 248.451 158.843 248.233 158.646 248.047C158.453 247.861 158.202 247.768 157.894 247.768C157.586 247.768 157.359 247.832 157.212 247.961C157.065 248.086 156.963 248.26 156.906 248.482H156.025C156.054 248.278 156.116 248.086 156.213 247.907C156.31 247.725 156.437 247.565 156.594 247.429C156.752 247.293 156.938 247.188 157.153 247.112C157.368 247.034 157.615 246.994 157.894 246.994ZM157.454 251.286C157.672 251.286 157.873 251.252 158.055 251.184C158.241 251.112 158.399 251.022 158.528 250.915C158.657 250.804 158.757 250.681 158.829 250.544C158.904 250.408 158.941 250.271 158.941 250.131V249.744C158.444 249.744 158.044 249.766 157.744 249.809C157.443 249.848 157.208 249.907 157.04 249.986C156.875 250.061 156.766 250.152 156.712 250.26C156.659 250.364 156.632 250.485 156.632 250.625C156.632 250.793 156.705 250.945 156.852 251.082C157.002 251.218 157.203 251.286 157.454 251.286ZM160.531 247.048H161.412L162.9 250.845L164.382 247.048H165.263L163.12 252.44C162.923 252.938 162.715 253.291 162.497 253.499C162.282 253.71 162.014 253.815 161.691 253.815C161.648 253.815 161.607 253.814 161.568 253.81C161.532 253.806 161.496 253.801 161.46 253.794C161.425 253.787 161.391 253.776 161.358 253.762V253.101C161.609 253.101 161.795 253.046 161.917 252.935C162.042 252.824 162.15 252.659 162.239 252.44L162.459 251.893L160.531 247.048ZM170.983 246.994C171.202 246.994 171.411 247.041 171.612 247.134C171.812 247.223 171.99 247.358 172.144 247.537C172.298 247.712 172.417 247.927 172.503 248.181C172.593 248.432 172.638 248.715 172.638 249.03V252H171.811V249.03C171.811 248.611 171.716 248.296 171.526 248.084C171.336 247.873 171.102 247.768 170.822 247.768C170.543 247.768 170.298 247.88 170.086 248.106C169.879 248.332 169.775 248.639 169.775 249.03V252H168.953V249.03C168.953 248.611 168.856 248.296 168.663 248.084C168.473 247.873 168.239 247.768 167.959 247.768C167.827 247.768 167.696 247.798 167.567 247.859C167.442 247.92 167.331 248.007 167.234 248.122C167.138 248.237 167.061 248.371 167.003 248.525C166.946 248.679 166.917 248.847 166.917 249.03V252H166.09V247.048H166.697L166.917 247.601C167 247.49 167.098 247.392 167.213 247.306C167.317 247.223 167.442 247.152 167.589 247.091C167.736 247.026 167.915 246.994 168.126 246.994C168.377 246.994 168.588 247.041 168.76 247.134C168.932 247.223 169.073 247.324 169.184 247.435C169.317 247.567 169.422 247.714 169.501 247.875C169.598 247.714 169.716 247.567 169.855 247.435C169.981 247.324 170.133 247.223 170.312 247.134C170.495 247.041 170.718 246.994 170.983 246.994ZM178.025 250.679C177.943 250.854 177.839 251.028 177.713 251.2C177.588 251.368 177.441 251.515 177.273 251.64C177.105 251.762 176.913 251.862 176.698 251.941C176.487 252.016 176.251 252.054 175.989 252.054C175.674 252.054 175.375 251.993 175.092 251.871C174.809 251.746 174.562 251.572 174.351 251.35C174.143 251.125 173.979 250.858 173.857 250.55C173.739 250.242 173.68 249.9 173.68 249.524C173.68 249.152 173.739 248.811 173.857 248.503C173.979 248.195 174.142 247.931 174.346 247.708C174.553 247.483 174.795 247.307 175.071 247.182C175.347 247.057 175.635 246.994 175.936 246.994C176.236 246.994 176.519 247.053 176.784 247.171C177.053 247.29 177.285 247.458 177.482 247.676C177.683 247.891 177.84 248.151 177.955 248.455C178.073 248.759 178.132 249.098 178.132 249.47C178.132 249.542 178.129 249.604 178.122 249.658C178.114 249.708 178.107 249.751 178.1 249.787C178.093 249.83 178.086 249.871 178.079 249.911H174.561C174.575 250.086 174.623 250.258 174.706 250.426C174.792 250.595 174.897 250.741 175.022 250.867C175.151 250.992 175.3 251.094 175.468 251.173C175.64 251.248 175.814 251.286 175.989 251.286C176.143 251.286 176.279 251.264 176.397 251.221C176.519 251.175 176.63 251.123 176.73 251.065C176.831 251.008 176.913 250.945 176.978 250.877C177.046 250.806 177.101 250.74 177.144 250.679H178.025ZM175.936 247.768C175.767 247.768 175.606 247.803 175.452 247.875C175.302 247.947 175.164 248.045 175.039 248.17C174.917 248.296 174.813 248.446 174.727 248.622C174.645 248.797 174.589 248.989 174.561 249.196H177.251C177.194 248.756 177.042 248.409 176.795 248.154C176.551 247.896 176.265 247.768 175.936 247.768ZM181.484 246.994C181.749 246.994 181.996 247.048 182.225 247.155C182.458 247.263 182.662 247.41 182.837 247.596C183.013 247.782 183.151 248.007 183.251 248.272C183.355 248.534 183.407 248.824 183.407 249.143V252H182.585V249.143C182.585 248.938 182.551 248.752 182.483 248.584C182.418 248.412 182.331 248.265 182.22 248.144C182.109 248.022 181.98 247.929 181.833 247.864C181.69 247.8 181.536 247.768 181.371 247.768C180.981 247.768 180.664 247.893 180.42 248.144C180.177 248.391 180.055 248.724 180.055 249.143V252H179.228V247.048H179.835L180.055 247.601C180.159 247.49 180.279 247.392 180.415 247.306C180.54 247.223 180.691 247.152 180.866 247.091C181.042 247.026 181.248 246.994 181.484 246.994ZM185.276 245.732H185.99V247.048H187.091V247.821H185.99V250.405C185.99 250.684 186.065 250.901 186.216 251.055C186.366 251.209 186.567 251.286 186.817 251.286C186.889 251.286 186.955 251.278 187.016 251.264C187.045 251.257 187.07 251.246 187.091 251.232V251.946C187.056 251.968 187.016 251.986 186.973 252C186.876 252.036 186.751 252.054 186.597 252.054C186.407 252.054 186.227 252.014 186.055 251.936C185.883 251.853 185.731 251.74 185.598 251.597C185.466 251.454 185.36 251.282 185.281 251.082C185.206 250.881 185.168 250.655 185.168 250.405V247.821H184.288V247.048H184.674C185.079 247.048 185.279 246.847 185.276 246.446V245.732Z\" fill=\"#F0008C\"/>\n                    <path d=\"M50.7571 245.5V248.303H53.5V249.705H50.7571V252.5H49.2515V249.705H46.5V248.303H49.2515V245.5H50.7571Z\" fill=\"#F0008C\"/>\n                    <circle cx=\"50\" cy=\"249\" r=\"9.5\" stroke=\"#F0008C\" stroke-dasharray=\"5 5\"/>\n                    <path d=\"M95.4571 145.337C95.4571 143.676 94.3047 142.686 92.2715 142.686C91.4412 142.686 90.8789 142.767 90.5848 142.846V148.174C90.9331 148.253 91.3612 148.279 91.9512 148.279C94.1185 148.279 95.4571 147.184 95.4571 145.337Z\" fill=\"black\"/>\n                    <path d=\"M108.044 142.742C107.133 142.742 106.545 142.821 106.197 142.902V154.703C106.545 154.785 107.107 154.785 107.616 154.785C111.309 154.811 113.718 152.778 113.718 148.469C113.744 144.723 111.549 142.742 108.044 142.742Z\" fill=\"black\"/>\n                    <path d=\"M131.429 81H91.2647C85.3971 81 80.6215 85.7789 80.6215 91.6432V131H79.582C77.2138 131 75.2932 132.919 75.2932 135.289V161.299C75.2932 163.669 77.2136 165.587 79.582 165.587H80.6215V170.357C80.6215 176.227 85.3971 181 91.2647 181H146.067C151.931 181 156.707 176.227 156.707 170.357V106.19L131.429 81ZM86.5445 139.983C87.8014 139.77 89.5681 139.61 92.0572 139.61C94.5727 139.61 96.3655 140.09 97.5701 141.055C98.7208 141.964 99.4974 143.464 99.4974 145.229C99.4974 146.994 98.909 148.495 97.8383 149.511C96.4458 150.822 94.3864 151.411 91.9774 151.411C91.4412 151.411 90.9607 151.384 90.5848 151.332V157.782H86.5445V139.983ZM146.067 174.482H91.2647C88.9928 174.482 87.1427 172.632 87.1427 170.357V165.587H138.23C140.598 165.587 142.519 163.669 142.519 161.299V135.289C142.519 132.919 140.598 131 138.23 131H87.1427V91.6432C87.1427 89.3745 88.993 87.5245 91.2647 87.5245L128.99 87.485V101.43C128.99 105.503 132.295 108.811 136.371 108.811L150.032 108.772L150.185 170.356C150.185 172.632 148.339 174.482 146.067 174.482ZM102.103 157.7V139.983C103.601 139.744 105.554 139.61 107.616 139.61C111.041 139.61 113.262 140.225 115.003 141.535C116.876 142.928 118.053 145.148 118.053 148.334C118.053 151.786 116.796 154.169 115.055 155.64C113.156 157.219 110.265 157.968 106.733 157.968C104.618 157.968 103.119 157.834 102.103 157.7ZM131.311 147.21V150.528H124.834V157.782H120.74V139.744H131.766V143.088H124.834V147.21H131.311Z\" fill=\"black\"/>\n                    </svg>\n                        </div>\n                      ) : (\n                        <IsLoadingData />\n                      )}\n                    </Fragment>\n                  ) : null}\n\n              </div>\n              \n\n                  </div>\n                </div>\n                \n                <div className=\"row\">\n                  <div className=\"form-group col-12 col-md-12 justify-content-center d-flex mt-4\">\n                    <button\n                      type=\"submit\"\n                      disabled={amount <= 0}\n                      className=\"btn btn-shecluded btn-lg\"\n                    >\n                      Calculate Loan\n                    </button>\n                  </div>\n                </div>\n              </form>\n             \n              {/* <div className=\"row\">\n                  <div className=\"form-group col-12 col-md-12\">\n                    <label className=\"text-body\" htmlFor=\"name\">\n                      Attach Bank Statement\n                      <span className=\"text-shecluded\">\n                        <small>(Only PDFs are allowed)</small>\n                      </span>\n                    </label>\n                    <div\n                      className=\"form-group custom-file\"\n                      ref={bankStatementImage}\n                    >\n                      <input\n                        type=\"file\"\n                        className=\"custom-file-input\"\n                        onChange={handlePictureUpload}\n                        id=\"bankStatement\"\n                        name=\"bankStatement\"\n                        accept=\"application/pdf\"\n                      />\n                      <label\n                        className=\"custom-file-label\"\n                        onClick={() => bankStatementImage.current.click()}\n                        htmlFor=\"bankStatement\"\n                      >\n                        {nameOfSelectedBankStatement}\n                      </label>\n                    </div>\n                  </div>\n                  {!state.uploadHappened ? (\n                    <Fragment>\n                      {state.uploadProgress === 0 ? null : (\n                        <IsLoadingData />\n                      )}\n                    </Fragment>\n                  ) : null}\n                </div>\n                 */}\n            </div>\n          </div>\n          {!repaymentSchedule ? null : (\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-12\">\n                <div className=\"card dashboard-header-container\">\n                  <div className=\"card-header\">\n                    <div className=\"dashboard-header\">\n                      <div>Repayment Schedule</div>\n                    </div>\n                  </div>\n                  <div className=\"loan-table\">\n                    {chargePercentage === 0.07 ? (\n                      <div>\n                        5% Cost of Capital; 2% Business Support Services\n                      </div>\n                    ) : (\n                      <div>\n                        3% Cost of Capital; 2% Business Support Services\n                      </div>\n                    )}\n                    <div className=\"loan-table-body\">\n                      <div className=\"card-body\">\n                        <LoanRepaymentTable\n                          intervalType={intervalType}\n                          calculation={calculation}\n                          sumOfTotalCharges={sumOfTotalCharges}\n                          chargePercentage={chargePercentage}\n                        />\n                        <form onSubmit={requestForLoan}>\n                          <div className=\"row\">\n                            <div className=\"form-group col-12 col-md-12\">\n                              <button\n                                type=\"submit\"\n                                className=\"btn btn-shecluded btn-lg\"\n                                disabled={\n                                  state.uploadProgress > 0 ? true : false\n                                }\n                              >\n                                {state.uploadProgress > 0\n                                  ? \"Uploading Bank Statement\"\n                                  : \"Request\"}\n                              </button>\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n     \n      </div>\n    </Fragment>\n  );\n};\n\nexport default withRouter(RequestLoan);\n","import React, { useEffect, useState, Fragment } from 'react';\n\nconst Alert = ({ message }) => {\n\tconst [state, setState] = useState({\n\t\tshow: true\n\t})\n\n\tuseEffect(() => {\n\t\tconst hideAlert = setTimeout(() => {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tshow: false\n\t\t\t})\n\t\t}, 3000)\n\n\t\treturn(() => {\n\t\t\tclearTimeout(hideAlert)\n\t\t})\n\t}, [])\n\n\tconst close = () => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tshow: false\n\t\t})\n\t}\n\treturn(\n\t\t<Fragment>\n\t\t{\n\t\t\tstate.show ? \n\t\t\t<div className=\"main-alert d-flex justify-content-center\">\n\t\t\t\t<div className={\"alert alert-danger alert-dismissible text-center font-md\"} role=\"alert\">\n\t\t\t\t\t<strong></strong> {message}\n\t\t\t\t\t<button type=\"button\" className=\"close\" onClick={close} aria-label=\"Close\">\n\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t: null\n\t\t}\n\t\t</Fragment>\n\t)\n}\nexport default Alert;","export const INTERVALS = [\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"10\",\n  \"11\",\n  \"12\",\n];\n","import { INTERVALS } from \"./dev-data/intervals\";\n\nexport const UPLOAD_PRESET = \"qltwstph\";\nexport const UPLOAD_URL =\n  \"https://api.cloudinary.com/v1_1/shecludedng/image/upload\";\nexport const UPLOAD_URL_FOR_PDFs =\n  \"https://api.cloudinary.com/v1_1/shecludedng/image/upload\";\nexport const UPLOAD_URL_FOR_VIDEO =\n  \"https://api.cloudinary.com/v1_1/shecludedng/video/upload\";\nexport const MAX_PHOTO_SIZE = 1024;\nexport const PHOTO_ERROR_MESSAGE = \"File must not be larger than 1mb\";\n\n// Making the monthly interest rate change dynamically based on the amount entered\nexport const calcMonthlyPercentage = (amount) => {\n  if (amount >= 1000000) {\n    return 5 / 100;\n  } else {\n    return 7 / 100;\n  }\n};\n\n// Making the number of loan repayment intervals change dynamically based on the amount entered\nexport const numberOfLoanIntervals = (amount) => {\n  if (amount < 100000) {\n    return INTERVALS.slice(0, 3);\n  } else if (amount >= 100000 && amount < 300000) {\n    return INTERVALS.slice(0, 6);\n  } else if (amount >= 300000 && amount < 600000) {\n    return INTERVALS.slice(0, 6);\n  } else if (amount > 600000) {\n    return INTERVALS.slice(0, 12);\n  } else {\n    return INTERVALS.slice(0, INTERVALS.length);\n  }\n};\n\n// Repeating fields under handleInputChange function in requestLoan component\nexport const repeatingLoanRequestFields = (event) => {\n  return {\n    chargesArray: [],\n    sumOfTotalChargesArray: [],\n    repaymentSchedule: false,\n    [event.target.name]: event.target.value,\n  };\n};\n"],"sourceRoot":""}