{"version":3,"sources":["../node_modules/react-minimal-pie-chart/dist/index.js"],"names":["exports","React","degreesToRadians","degrees","Math","PI","valueBetween","value","min","max","extractPercentage","percentage","bisectorAngle","startAngle","lengthAngle","shiftVectorAlongAngle","angle","distance","angleRadians","dx","cos","dy","sin","isNumber","functionProp","prop","payload","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","ReactMinimalPieChartLabel","_ref","renderLabel","labelProps","label","dataEntry","dataIndex","props","createElement","assign","dominantBaseline","isValidElement","evaluateTextAnchorPosition","number","labelPosition","lineWidth","labelHorizontalShift","round","Number","EPSILON","innerRadius","renderLabels","data","map","index","_functionProp","segmentsShift","distanceFromCenter","radius","_shiftVectorAlongAngl","labelRenderProps","x","center","y","textAnchor","style","labelStyle","makeLabelRenderProps","partialCircle$1","cx","cy","r","start","end","fromX","fromY","toX","toY","large","abs","sweep","ReactMinimalPieChartPath","strokeDasharray","strokeDashoffset","_ref$shift","shift","reveal","rounded","title","pathRadius","pathCommands","patchedLengthAngle","command","join","makePathCommands","pathLength","d","fill","strokeWidth","strokeLinecap","undefined","combineSegmentTransitionsStyle","duration","easing","customStyle","transition","makeEventHandler","eventHandler","e","renderSegments","revealOverride","animate","getRevealValue","_props$center","paths","segmentsStyle","animationDuration","animationEasing","stroke","color","tabIndex","segmentsTabIndex","onBlur","onClick","onFocus","onKeyDown","onMouseOver","onMouseOut","background","unshift","defaultProps","paddingAngle","viewBoxSize","PieChart","originalProps","result","makePropsWithDefaults","_useState","useState","setRevealOverride","useEffect","extendedData","totalAngle","totalValue","chartStartAngle","total","sum","sumValues","normalizedTotalAngle","numberOfPaddings","singlePaddingDegrees","sign","degreesTakenByPaths","lastSegmentEnd","valueInPercentage","push","extendData","viewBox","width","height","className","children","pieChartDefaultProps","factory","__webpack_require__"],"mappings":"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","file":"static/js/64.117bfd28.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactMinimalPieChart = {}, global.React));\n})(this, function (exports, React) {\n  'use strict';\n\n  function degreesToRadians(degrees) {\n    return degrees * Math.PI / 180;\n  }\n  function valueBetween(value, min, max) {\n    if (value > max) return max;\n    if (value < min) return min;\n    return value;\n  }\n  function extractPercentage(value, percentage) {\n    return percentage / 100 * value;\n  }\n  function bisectorAngle(startAngle, lengthAngle) {\n    return startAngle + lengthAngle / 2;\n  }\n  function shiftVectorAlongAngle(angle, distance) {\n    var angleRadians = degreesToRadians(angle);\n    return {\n      dx: distance * Math.cos(angleRadians),\n      dy: distance * Math.sin(angleRadians)\n    };\n  }\n  function isNumber(value) {\n    return typeof value === 'number';\n  }\n  function functionProp(prop, payload) {\n    return typeof prop === 'function' ? prop(payload) : prop;\n  }\n  function makePropsWithDefaults(props, defaultProps) {\n    var result = Object.assign({}, defaultProps, props);\n\n    // @NOTE Object.assign doesn't default properties with undefined value (like React defaultProps does)\n    for (var key in defaultProps) {\n      if (props[key] === undefined) {\n        result[key] = defaultProps[key];\n      }\n    }\n    return result;\n  }\n  function sumValues(data) {\n    var sum = 0;\n    for (var i = 0; i < data.length; i++) {\n      sum += data[i].value;\n    }\n    return sum;\n  }\n\n  // Append \"percentage\", \"degrees\" and \"startAngle\" to each data entry\n  function extendData(_ref) {\n    var data = _ref.data,\n      totalAngle = _ref.lengthAngle,\n      totalValue = _ref.totalValue,\n      paddingAngle = _ref.paddingAngle,\n      chartStartAngle = _ref.startAngle;\n    var total = totalValue || sumValues(data);\n    var normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n    var numberOfPaddings = Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n    var singlePaddingDegrees = Math.abs(paddingAngle) * Math.sign(totalAngle);\n    var degreesTakenByPadding = singlePaddingDegrees * numberOfPaddings;\n    var degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n    var lastSegmentEnd = 0;\n    var extendedData = [];\n\n    // @NOTE: Shall we evaluate percentage accordingly to dataEntry.value's sign?\n    for (var i = 0; i < data.length; i++) {\n      var dataEntry = data[i];\n      var valueInPercentage = total === 0 ? 0 : dataEntry.value / total * 100;\n      var degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n      var startAngle = lastSegmentEnd + chartStartAngle;\n      lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n      extendedData.push(Object.assign({\n        percentage: valueInPercentage,\n        startAngle: startAngle,\n        degrees: degrees\n      }, dataEntry));\n    }\n    return extendedData;\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function ReactMinimalPieChartLabel(_ref) {\n    var renderLabel = _ref.renderLabel,\n      labelProps = _ref.labelProps;\n    var label = renderLabel(labelProps);\n\n    // Default label\n    if (typeof label === 'string' || typeof label === 'number') {\n      labelProps.dataEntry;\n      labelProps.dataIndex;\n      var props = _objectWithoutPropertiesLoose(labelProps, [\"dataEntry\", \"dataIndex\"]);\n      return /*#__PURE__*/React.createElement(\"text\", Object.assign({\n        dominantBaseline: \"central\"\n      }, props), label);\n    }\n    if (React.isValidElement(label)) {\n      return label;\n    }\n    return null;\n  }\n  function round(number) {\n    var divisor = 1e14; // 14 decimals\n    return Math.round((number + Number.EPSILON) * divisor) / divisor;\n  }\n  function evaluateTextAnchorPosition(_ref) {\n    var labelPosition = _ref.labelPosition,\n      lineWidth = _ref.lineWidth,\n      labelHorizontalShift = _ref.labelHorizontalShift;\n    var dx = round(labelHorizontalShift);\n    // Label in the vertical center\n    if (dx === 0) {\n      return 'middle';\n    }\n    // Outward label\n    if (labelPosition > 100) {\n      return dx > 0 ? 'start' : 'end';\n    }\n    // Inward label\n    var innerRadius = 100 - lineWidth;\n    if (labelPosition < innerRadius) {\n      return dx > 0 ? 'end' : 'start';\n    }\n    // Overlying label\n    return 'middle';\n  }\n  function makeLabelRenderProps(data, props) {\n    return data.map(function (dataEntry, index) {\n      var _functionProp;\n      var segmentsShift = (_functionProp = functionProp(props.segmentsShift, index)) != null ? _functionProp : 0;\n      var distanceFromCenter = extractPercentage(props.radius, props.labelPosition) + segmentsShift;\n      var _shiftVectorAlongAngl = shiftVectorAlongAngle(bisectorAngle(dataEntry.startAngle, dataEntry.degrees), distanceFromCenter),\n        dx = _shiftVectorAlongAngl.dx,\n        dy = _shiftVectorAlongAngl.dy; // This object is passed as argument to the \"label\" function prop\n      var labelRenderProps = {\n        x: props.center[0],\n        y: props.center[1],\n        dx: dx,\n        dy: dy,\n        textAnchor: evaluateTextAnchorPosition({\n          labelPosition: props.labelPosition,\n          lineWidth: props.lineWidth,\n          labelHorizontalShift: dx\n        }),\n        dataEntry: dataEntry,\n        dataIndex: index,\n        style: functionProp(props.labelStyle, index)\n      };\n      return labelRenderProps;\n    });\n  }\n  function renderLabels(data, props) {\n    var label = props.label;\n    if (label) {\n      return makeLabelRenderProps(data, props).map(function (labelRenderProps, index) {\n        return /*#__PURE__*/React.createElement(ReactMinimalPieChartLabel, {\n          key: \"label-\" + (labelRenderProps.dataEntry.key || index),\n          renderLabel: label,\n          labelProps: labelRenderProps\n        });\n      });\n    }\n  }\n\n  // from http://stackoverflow.com/a/18473154\n  var partialCircle = function partialCircle(cx, cy, r, start, end) {\n    var length = end - start;\n    if (length === 0) return [];\n    var fromX = r * Math.cos(start) + cx;\n    var fromY = r * Math.sin(start) + cy;\n    var toX = r * Math.cos(end) + cx;\n    var toY = r * Math.sin(end) + cy;\n    var large = Math.abs(length) <= Math.PI ? '0' : '1';\n    var sweep = length < 0 ? '0' : '1';\n    return [['M', fromX, fromY], ['A', r, r, 0, large, sweep, toX, toY]];\n  };\n  var svgPartialCircle = partialCircle;\n  var partialCircle$1 = svgPartialCircle;\n  function makePathCommands(cx, cy, startAngle, lengthAngle, radius) {\n    var patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n    return partialCircle$1(cx, cy,\n    // center X and Y\n    radius, degreesToRadians(startAngle), degreesToRadians(startAngle + patchedLengthAngle)).map(function (command) {\n      return command.join(' ');\n    }).join(' ');\n  }\n  function ReactMinimalPieChartPath(_ref) {\n    var cx = _ref.cx,\n      cy = _ref.cy,\n      lengthAngle = _ref.lengthAngle,\n      lineWidth = _ref.lineWidth,\n      radius = _ref.radius,\n      _ref$shift = _ref.shift,\n      shift = _ref$shift === void 0 ? 0 : _ref$shift,\n      reveal = _ref.reveal,\n      rounded = _ref.rounded,\n      startAngle = _ref.startAngle,\n      title = _ref.title,\n      props = _objectWithoutPropertiesLoose(_ref, [\"cx\", \"cy\", \"lengthAngle\", \"lineWidth\", \"radius\", \"shift\", \"reveal\", \"rounded\", \"startAngle\", \"title\"]);\n    var pathRadius = radius - lineWidth / 2;\n    //@NOTE This shift might be rendered as a translation in future\n    var _shiftVectorAlongAngl = shiftVectorAlongAngle(bisectorAngle(startAngle, lengthAngle), shift),\n      dx = _shiftVectorAlongAngl.dx,\n      dy = _shiftVectorAlongAngl.dy;\n    var pathCommands = makePathCommands(cx + dx, cy + dy, startAngle, lengthAngle, pathRadius);\n    var strokeDasharray;\n    var strokeDashoffset;\n\n    // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n    // https://css-tricks.com/svg-line-animation-works/\n    if (isNumber(reveal)) {\n      var pathLength = degreesToRadians(pathRadius) * lengthAngle;\n      strokeDasharray = Math.abs(pathLength);\n      strokeDashoffset = strokeDasharray - extractPercentage(strokeDasharray, reveal);\n    }\n    return /*#__PURE__*/React.createElement(\"path\", Object.assign({\n      d: pathCommands,\n      fill: \"none\",\n      strokeWidth: lineWidth,\n      strokeDasharray: strokeDasharray,\n      strokeDashoffset: strokeDashoffset,\n      strokeLinecap: rounded ? 'round' : undefined\n    }, props), title && /*#__PURE__*/React.createElement(\"title\", null, title));\n  }\n  function combineSegmentTransitionsStyle(duration, easing, customStyle) {\n    // Merge chart's animation CSS transition with \"transition\" found to customStyle\n    var transition = \"stroke-dashoffset \" + duration + \"ms \" + easing;\n    if (customStyle && customStyle.transition) {\n      transition = transition + \",\" + customStyle.transition;\n    }\n    return {\n      transition: transition\n    };\n  }\n  function getRevealValue(props) {\n    //@NOTE When animation is on, chart has to be fully revealed when reveal is not set\n    if (props.animate && !isNumber(props.reveal)) {\n      return 100;\n    }\n    return props.reveal;\n  }\n  function makeEventHandler(eventHandler, payload) {\n    return eventHandler && function (e) {\n      eventHandler(e, payload);\n    };\n  }\n  function renderSegments(data, props, revealOverride) {\n    // @NOTE this should go in Path component. Here for performance reasons\n    var reveal = revealOverride != null ? revealOverride : getRevealValue(props);\n    var radius = props.radius,\n      _props$center = props.center,\n      cx = _props$center[0],\n      cy = _props$center[1];\n    var lineWidth = extractPercentage(radius, props.lineWidth);\n    var paths = data.map(function (dataEntry, index) {\n      var segmentsStyle = functionProp(props.segmentsStyle, index);\n      return /*#__PURE__*/React.createElement(ReactMinimalPieChartPath, {\n        cx: cx,\n        cy: cy,\n        key: dataEntry.key || index,\n        lengthAngle: dataEntry.degrees,\n        lineWidth: lineWidth,\n        radius: radius,\n        rounded: props.rounded,\n        reveal: reveal,\n        shift: functionProp(props.segmentsShift, index),\n        startAngle: dataEntry.startAngle,\n        title: dataEntry.title,\n        style: Object.assign({}, segmentsStyle, props.animate && combineSegmentTransitionsStyle(props.animationDuration, props.animationEasing, segmentsStyle)),\n        stroke: dataEntry.color,\n        tabIndex: props.segmentsTabIndex,\n        onBlur: makeEventHandler(props.onBlur, index),\n        onClick: makeEventHandler(props.onClick, index),\n        onFocus: makeEventHandler(props.onFocus, index),\n        onKeyDown: makeEventHandler(props.onKeyDown, index),\n        onMouseOver: makeEventHandler(props.onMouseOver, index),\n        onMouseOut: makeEventHandler(props.onMouseOut, index)\n      });\n    });\n    if (props.background) {\n      paths.unshift( /*#__PURE__*/React.createElement(ReactMinimalPieChartPath, {\n        cx: cx,\n        cy: cy,\n        key: \"bg\",\n        lengthAngle: props.lengthAngle,\n        lineWidth: lineWidth,\n        radius: radius,\n        rounded: props.rounded,\n        startAngle: props.startAngle,\n        stroke: props.background\n      }));\n    }\n    return paths;\n  }\n  var defaultProps = {\n    animationDuration: 500,\n    animationEasing: 'ease-out',\n    center: [50, 50],\n    data: [],\n    labelPosition: 50,\n    lengthAngle: 360,\n    lineWidth: 100,\n    paddingAngle: 0,\n    radius: 50,\n    startAngle: 0,\n    viewBoxSize: [100, 100]\n  };\n  function ReactMinimalPieChart(originalProps) {\n    var props = makePropsWithDefaults(originalProps,\n    // @ts-expect-error: defaultProps.data is typed as BaseDataEntry\n    defaultProps);\n    var _useState = React.useState(props.animate ? 0 : null),\n      revealOverride = _useState[0],\n      setRevealOverride = _useState[1];\n    React.useEffect(function () {\n      if (props.animate) {\n        // Trigger initial animation\n        setRevealOverride(null);\n      }\n    }, []);\n    var extendedData = extendData(props);\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"0 0 \" + props.viewBoxSize[0] + \" \" + props.viewBoxSize[1],\n      width: \"100%\",\n      height: \"100%\",\n      className: props.className,\n      style: props.style\n    }, renderSegments(extendedData, props, revealOverride), renderLabels(extendedData, props), props.children);\n  }\n  exports.PieChart = ReactMinimalPieChart;\n  exports.pieChartDefaultProps = defaultProps;\n});"],"sourceRoot":""}