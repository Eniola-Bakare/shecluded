{"version":3,"sources":["components/newdashboard/WealthInfo.js","components/newdashboard/Profile.js","../node_modules/numeral/numeral.js","components/priceCard/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","App","props","a","createElement","className","style","color","fontSize","fontWeight","width","height","viewBox","fill","xmlns","cx","cy","r","d","stroke","stroke-width","Profile","console","log","user","_useState","useState","loans","isLoading","page","size","totalCount","errorMessage","_useState2","Object","_home_eebakare_gitclone_shecluded_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","state","setState","useEffect","_home_eebakare_gitclone_shecluded_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_JSON$parse","JSON","parse","sessionStorage","getItem","token","shecludedId","reqBody","pageNumber","pageSize","axios","url","concat","allLoans","method","headers","Content-Type","Authorization","timeout","timeOut","data","then","result","respCode","_result$data$respBody","respBody","content","totalElements","respDescription","catch","err","loanDetails","firstName","lastName","ProfilePicture","socialMediaDetails","bio","phoneNumber","email","address","employmentStatus","react__WEBPACK_IMPORTED_MODULE_2___default","padding","src","DummyProfileImage","onClick","history","push","clip-path","id","transform","length","map","socialMedia","i","platform","socialLink","react__WEBPACK_IMPORTED_MODULE_2__","key","target","rel","href","includes","_priceCard__WEBPACK_IMPORTED_MODULE_8__","background","value","requestedAmount","text","totalPaymentAmount","loanPaybacks","interestRate","moment","nextPaymentDate","format","_LoanCard__WEBPACK_IMPORTED_MODULE_4__","_WealthInfo__WEBPACK_IMPORTED_MODULE_3__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_numeral","_","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","this","_input","_value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","roundingFunction","leadingCount","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","abbr","decimal","neg","Math","indexOf","RegExp","abbreviations","trillion","billion","million","thousand","toString","split","toFixed","delimiters","slice","String","string","abbreviation","stringOriginal","currency","symbol","pow","min","_isNaN","_x","apply","arguments","search","insert","subString","start","reduce","array","callback","TypeError","t","len","k","multiplier","x","parts","correctionFactor","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","toLowerCase","localeData","Error","reset","property","register","type","name","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","_format","space","splice","join","base","suffixes","binary","unformatRegex","filter","item","_format2","bytes","suffix","bytesMultiplier","_format3","symbols","before","after","_format4","toExponential","_format5","_format6","_format7","hours","floor","minutes","seconds","timeArray","exports","module","PriceCard","react__WEBPACK_IMPORTED_MODULE_1___default","textTransform","numeral"],"mappings":"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","file":"static/js/46.1a8f2505.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction App(props) {\n  return (\n    <div>\n      <div className=\"container-of-left-side\">\n        <div className=\"leftbar-card-1\">\n          <div className=\"leftbar-card-header\">\n            <span\n              style={{ color: \"#4F4F4F\", fontSize: \"18px\", fontWeight: \"600\" }}\n            >\n              Why do Women require unique wealth managemnt plan?{\" \"}\n            </span>\n          </div>\n\n          <div className=\"p-3\">\n            <p>\n              When it comes to managing money, women may be making a crucial\n              financial mistake that is making them poorer. And they probably do\n              not realize that they’re doing it.\n            </p>\n            <p>\n              But regardless of those systemic financial problems, women are not\n              doing this one thing to improve their financial picture: taking an\n              active role in their financial life.\n            </p>\n          </div>\n\n          <div className=\"leftbar-card-header\">\n            <span\n              style={{ color: \"#4F4F4F\", fontSize: \"18px\", fontWeight: \"600\" }}\n            >\n              We show you how with our topnotch solution\n            </span>\n          </div>\n\n          <div className=\"card-side\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#FFE9F6\"/>\n            <path d=\"M5 8.18182L6.875 10L11 6\" stroke=\"#F0008C\" stroke-width=\"1.2\"/>\n            </svg>\n\n            <span>Determine your Financial Strength</span>\n          </div>\n          <div className=\"card-side\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#FFE9F6\"/>\n            <path d=\"M5 8.18182L6.875 10L11 6\" stroke=\"#F0008C\" stroke-width=\"1.2\"/>\n            </svg>\n\n            <span>Create Wealth</span>\n          </div>\n          <div className=\"card-side\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#FFE9F6\"/>\n            <path d=\"M5 8.18182L6.875 10L11 6\" stroke=\"#F0008C\" stroke-width=\"1.2\"/>\n            </svg>\n            <span>Grow Wealth </span>\n          </div>\n          <div className=\"card-side\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#FFE9F6\"/>\n            <path d=\"M5 8.18182L6.875 10L11 6\" stroke=\"#F0008C\" stroke-width=\"1.2\"/>\n            </svg>\n            <span>Protect Wealth </span>\n          </div>\n          <div className=\"card-side\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#FFE9F6\"/>\n            <path d=\"M5 8.18182L6.875 10L11 6\" stroke=\"#F0008C\" stroke-width=\"1.2\"/>\n            </svg>\n            <span>Transfer Wealth </span>\n          </div>\n        </div>\n\n        <div className=\"leftcard-card-3\">\n          <div className=\"leftbar-card-header\">\n            <span\n              style={{ color: \"#4F4F4F\", fontSize: \"18px\", fontWeight: \"600\" }}\n            >\n              Privacy & Security\n            </span>\n          </div>\n\n          <div className=\"card-side\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#FFE9F6\"/>\n            <path d=\"M5 8.18182L6.875 10L11 6\" stroke=\"#F0008C\" stroke-width=\"1.2\"/>\n            </svg>\n            <span>All Information is kept at a secure Data Center</span>\n          </div>\n          <div className=\"card-side\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#FFE9F6\"/>\n            <path d=\"M5 8.18182L6.875 10L11 6\" stroke=\"#F0008C\" stroke-width=\"1.2\"/>\n            </svg>\n            <span>\n              Keeping your personal & private information secure is our first\n              priority\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport WealthInfo from './WealthInfo';\nimport { RequestedLoans, TotalLoans, RepaidLoans, ManageLoans, FinanacialCourse, RioCalculator } from './LoanCard'\nimport { allLoans, timeOut } from \"../../api/rootUrls\";\nimport axios from \"axios\";\nimport moment from 'moment'\nimport PriceCard from '../priceCard'\nimport DummyProfileImage from '../../assets/profile-image.svg';\n\n\n\n\nfunction Profile(props) {\n    console.log(\"JOEL THIS IS THE OROS\", props.user)\n    const {user} = props\n    const [state, setState] = useState({\n        loans: [],\n        isLoading: false,\n        page: 0,\n        size: 20,\n        totalCount: 0,\n        errorMessage: \"\",\n    });\n\n    useEffect(() => {\n        setState({\n            ...state,\n            isLoading: true,\n        });\n        const { token, shecludedId } = JSON.parse(\n            sessionStorage.getItem(\"userData\")\n        );\n        let reqBody = {\n            pageNumber: state.page,\n            pageSize: state.size,\n            shecludedId,\n        };\n        axios({\n            url: `${allLoans}`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n            timeout: timeOut,\n            data: reqBody,\n        })\n            .then((result) => {\n                if (result.data.respCode === \"00\") {\n                    const { content, totalElements } = result.data.respBody;\n                    setState({\n                        ...state,\n                        loans: content,\n                        totalCount: totalElements,\n                    });\n                } else {\n                    setState({\n                        ...state,\n                        isLoading: false,\n                        errorMessage: result.data.respDescription,\n                    });\n                }\n            })\n            .catch((err) => {\n                setState({\n                    ...state,\n                    isLoading: false,\n                    errorMessage: err,\n                });\n            });\n    }, [state.page]);\n\n    const { loans, isLoading} = state;\n    const loanDetails = loans[0] || {}\n    const { firstName, lastName, ProfilePicture, bio, socialMediaDetails, phoneNumber, email,address,employmentStatus  } = user;\n\n    return (\n        <div>\n            <div className='Dashboard-main-page'>\n                <div className='Dashboard-main-page-main'>\n                <div style={{ width: \"100%\", padding: \"0 32px\" }}>\n                        <h3 className=\"mt-4\">\n                        My Profile</h3>\n                        <p>Lets see how well you’re doing </p>\n\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-centerX align-items-center mt-3\">\n                        <div className=\"profile-image-wraaper d-flex flex-wrap justify-content-center align-items-center flex-column\">\n                            <div className=\"img-rel\">\n                            <img\n                                className=\"img-responsive\"\n                                src={ProfilePicture ? ProfilePicture : DummyProfileImage} \n                            />\n                            <div onClick={() => props.history.push(\"/settings\")}>\n                            <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <circle cx=\"15\" cy=\"15\" r=\"15\" fill=\"#F0008C\"/>\n                            <g clip-path=\"url(#clip0)\">\n                            <path d=\"M15.4707 22.5H14.5293C13.7679 22.5 13.1484 21.8805 13.1484 21.1192V20.8007C12.8247 20.6972 12.5102 20.5667 12.2081 20.4103L11.9824 20.636C11.4357 21.1834 10.5601 21.1673 10.0293 20.6358L9.36393 19.9705C8.83222 19.4394 8.81692 18.564 9.3641 18.0174L9.58963 17.7919C9.43327 17.4898 9.30275 17.1753 9.19931 16.8516H8.88085C8.11948 16.8516 7.5 16.2321 7.5 15.4707V14.5293C7.5 13.7679 8.11948 13.1484 8.88088 13.1484H9.19934C9.30278 12.8247 9.4333 12.5102 9.58966 12.2081L9.36396 11.9824C8.8171 11.4362 8.83219 10.5607 9.36413 10.0293L10.0296 9.36396C10.5616 8.83122 11.437 8.81792 11.9826 9.36413L12.2081 9.58963C12.5102 9.4333 12.8247 9.30275 13.1484 9.19931V8.88085C13.1484 8.11945 13.7679 7.5 14.5293 7.5H15.4707C16.2321 7.5 16.8516 8.11945 16.8516 8.88085V9.19934C17.1753 9.30275 17.4898 9.4333 17.7919 9.58966L18.0176 9.36396C18.5643 8.81663 19.4399 8.83269 19.9707 9.36416L20.636 10.0295C21.1678 10.5606 21.183 11.436 20.6359 11.9826L20.4103 12.2081C20.5667 12.5102 20.6972 12.8247 20.8007 13.1484H21.1191C21.8805 13.1484 22.5 13.7679 22.5 14.5293V15.4707C22.5 16.2321 21.8805 16.8516 21.1191 16.8516H20.8007C20.6972 17.1753 20.5667 17.4898 20.4103 17.7919L20.636 18.0176C21.1829 18.5639 21.1678 19.4393 20.6359 19.9707L19.9704 20.6361C19.4384 21.1688 18.563 21.1821 18.0174 20.6359L17.7919 20.4104C17.4898 20.5667 17.1753 20.6973 16.8516 20.8007V21.1192C16.8516 21.8805 16.2321 22.5 15.4707 22.5ZM12.355 19.4874C12.7747 19.7356 13.2265 19.9232 13.6977 20.0448C13.8918 20.0948 14.0273 20.2699 14.0273 20.4703V21.1192C14.0273 21.3959 14.2525 21.6211 14.5293 21.6211H15.4707C15.7475 21.6211 15.9727 21.3959 15.9727 21.1192V20.4703C15.9727 20.2699 16.1083 20.0948 16.3023 20.0448C16.7735 19.9232 17.2253 19.7356 17.645 19.4874C17.8177 19.3853 18.0376 19.413 18.1795 19.5549L18.6391 20.0146C18.8373 20.213 19.1555 20.2084 19.3488 20.0148L20.0146 19.349C20.2075 19.1564 20.2139 18.8381 20.0148 18.6393L19.555 18.1794C19.4131 18.0376 19.3854 17.8177 19.4875 17.645C19.7357 17.2253 19.9232 16.7735 20.0448 16.3023C20.0949 16.1082 20.2699 15.9727 20.4703 15.9727H21.1192C21.3959 15.9727 21.6211 15.7475 21.6211 15.4707V14.5293C21.6211 14.2525 21.3959 14.0274 21.1192 14.0274H20.4703C20.2699 14.0274 20.0949 13.8918 20.0448 13.6978C19.9232 13.2265 19.7357 12.7748 19.4875 12.355C19.3854 12.1824 19.4131 11.9625 19.555 11.8206L20.0146 11.361C20.2133 11.1625 20.2081 10.8444 20.0148 10.6513L19.349 9.98549C19.1561 9.79225 18.8378 9.78659 18.6393 9.98531L18.1795 10.4451C18.0377 10.587 17.8177 10.6148 17.6451 10.5127C17.2253 10.2644 16.7736 10.0769 16.3024 9.95528C16.1083 9.90521 15.9727 9.7302 15.9727 9.52978V8.88085C15.9727 8.60408 15.7475 8.37891 15.4707 8.37891H14.5293C14.2526 8.37891 14.0274 8.60408 14.0274 8.88085V9.52972C14.0274 9.73014 13.8918 9.90516 13.6977 9.95522C13.2265 10.0768 12.7748 10.2644 12.355 10.5126C12.1823 10.6147 11.9624 10.5869 11.8206 10.4451L11.3609 9.98543C11.1628 9.78703 10.8445 9.79163 10.6513 9.98522L9.98543 10.651C9.7926 10.8436 9.78615 11.1619 9.98525 11.3607L10.4451 11.8206C10.5869 11.9624 10.6147 12.1823 10.5126 12.355C10.2644 12.7747 10.0769 13.2265 9.95525 13.6977C9.90516 13.8918 9.73014 14.0273 9.52975 14.0273H8.88088C8.60411 14.0273 8.37891 14.2525 8.37891 14.5293V15.4707C8.37891 15.7475 8.60411 15.9727 8.88088 15.9727H9.52972C9.73014 15.9727 9.90513 16.1082 9.95522 16.3023C10.0768 16.7735 10.2644 17.2253 10.5126 17.645C10.6147 17.8177 10.5869 18.0376 10.445 18.1794L9.9854 18.6391C9.78671 18.8375 9.79189 19.1557 9.98522 19.3488L10.651 20.0145C10.844 20.2078 11.1623 20.2134 11.3607 20.0147L11.8205 19.5549C11.925 19.4504 12.1425 19.3617 12.355 19.4874Z\" fill=\"white\"/>\n                            <path d=\"M15.0001 18.2637C13.2005 18.2637 11.7365 16.7996 11.7365 15C11.7365 13.2004 13.2005 11.7363 15.0001 11.7363C16.7997 11.7363 18.2638 13.2004 18.2638 15C18.2638 16.7996 16.7997 18.2637 15.0001 18.2637ZM15.0001 12.6152C13.6851 12.6152 12.6154 13.685 12.6154 15C12.6154 16.315 13.6852 17.3848 15.0001 17.3848C16.3151 17.3848 17.3849 16.315 17.3849 15C17.3849 13.685 16.3151 12.6152 15.0001 12.6152Z\" fill=\"white\"/>\n                            </g>\n                            <defs>\n                            <clipPath id=\"clip0\">\n                            <rect width=\"15\" height=\"15\" fill=\"white\" transform=\"translate(7.5 7.5)\"/>\n                            </clipPath>\n                            </defs>\n                            </svg>\n\n\n                            </div>\n\n                            </div>\n                            \n                             <h3 className=\"mt-3\">{firstName} {lastName} </h3>\n                             \n                             <div className=\"d-flex\">\n                             {\n                                socialMediaDetails.length ?\n                                socialMediaDetails.map((socialMedia, i) => {\n                                    const { platform, socialLink } = socialMedia;\n                                    const linkVerifier = () => {\n                                        if(socialLink.includes('http')){\n                                            return socialLink\n                                        } else {\n                                            return `http://${socialLink}`\n                                        }\n                                    }\n                                    return(\n                                        <Fragment key={i} >\n                                        {\n                                            socialLink.length ?\n                                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={linkVerifier()}><i className={`fab fa-${platform}`}></i></a>\n                                            : null\n                                        }\n                                        </Fragment>\n                                    )\n                                })\n                                :\n                                null\n                            } \n                                 \n                                 \n                             </div>\n                        </div>\n                        <div className=\"profile-detials-wrapper\">\n                            <div className=\"d-flex\">\n                                <h5 className=\"mr-2 ww\">Phone:</h5>\n                                 <p> {phoneNumber}</p>\n                            </div>\n                            <div className=\"d-flex \">\n                                <h5 className=\"mr-2 ww\">Email:</h5>\n                                <p> {email} </p>\n                            </div>\n                            <div className=\"d-flex\">\n                                <h5 className=\"mr-2 ww\">Location:</h5>\n                                <p> {address} </p>\n                            </div>\n                            <div className=\"d-flex\">\n                                <h5 className=\"mr-2 ww\">State:</h5>\n                                <p>{user.state}</p>\n                            </div>\n                            <div className=\"d-flex\">\n                                <h5 className=\"mr-2 ww\">Employment:</h5>\n                                <p> {employmentStatus} </p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{ width: \"100%\", padding: \"0 32px\" }}>\n                        <h3 className=\"mt-4\">\n                        My Loans</h3>\n                        <p>Lets see how well you’re doing </p>\n\n                    </div>\n\n                    <div className=\"current-loan\">\n                        <p className=\"sub-heading mb-5\">\n                            Current Loan Overview\n\n                        </p>\n\n                        <div className=\"d-flex justify-content-between mb-4 flex-wrap nd-head-sub\">\n                            <div className=\"d-flex flex-column justify-content-center align-items-center price-br\">\n\n                                <PriceCard style={{ color: \"#1F57AC\", background: \"rgba(228, 242, 254, 0.7)\" }}\n                                    value={loanDetails.requestedAmount\n                                        ? loanDetails.requestedAmount / 100\n                                        : 0}\n                                    text={false} />\n\n                                <h5 className=\"price-h\">\n                                    Amount Loaned\n                            </h5>\n                            </div>\n\n                            <div className=\"d-flex flex-column justify-content-center align-items-center price-br\">\n\n                                <PriceCard style={{ color: \"#AC1F1F\", background: \"rgba(254, 228, 228, 0.7)\" }}\n                                    value={loanDetails.totalPaymentAmount\n                                        ? loanDetails.totalPaymentAmount / 100\n                                        : 0}\n                                    text={false} />\n\n                                <h5 className=\"price-h\">\n                                    Amount to be paid\n                            </h5>\n                            </div>\n                            <div className=\"d-flex flex-column justify-content-center align-items-center price-br\">\n\n                                <PriceCard style={{ color: \"#1FAC46\", background: \"rgba(229, 254, 228, 0.7)\" }}\n                                    value={`${\n                                        loanDetails.loanPaybacks\n                                            ? loanDetails.loanPaybacks[0].interestRate\n                                            : 0\n                                        }%`}\n                                    text={true} />\n\n                                <h5 className=\"price-h\">\n                                    Interest Rate\n                            </h5>\n                            </div>\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\">\n\n                                <PriceCard style={{ color: \"#A9AC1F\", background: \"rgba(254, 253, 228, 0.7)\" }}\n                                    value={moment(loanDetails.nextPaymentDate).format('DD-MM-YYYY')}\n                                    text={true} />\n\n                                <h5 className=\"price-h\">\n                                    Next payment\n                            </h5>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"d-flex flex-flow-wrap mt-5\">\n                        <ManageLoans {...props} />\n                        <RioCalculator {...props} />\n                        <FinanacialCourse {...props} />\n                    </div>\n\n\n\n\n\n                </div>\n\n                <div className='Dashboard-main-page-side'>\n                    <WealthInfo />\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    global.numeral = factory();\n  }\n})(this, function () {\n  /************************************\n      Variables\n  ************************************/\n\n  var _numeral,\n    _,\n    VERSION = '2.0.6',\n    formats = {},\n    locales = {},\n    defaults = {\n      currentLocale: 'en',\n      zeroFormat: null,\n      nullFormat: null,\n      defaultFormat: '0,0',\n      scalePercentBy100: true\n    },\n    options = {\n      currentLocale: defaults.currentLocale,\n      zeroFormat: defaults.zeroFormat,\n      nullFormat: defaults.nullFormat,\n      defaultFormat: defaults.defaultFormat,\n      scalePercentBy100: defaults.scalePercentBy100\n    };\n\n  /************************************\n      Constructors\n  ************************************/\n\n  // Numeral prototype object\n  function Numeral(input, number) {\n    this._input = input;\n    this._value = number;\n  }\n  _numeral = function numeral(input) {\n    var value, kind, unformatFunction, regexp;\n    if (_numeral.isNumeral(input)) {\n      value = input.value();\n    } else if (input === 0 || typeof input === 'undefined') {\n      value = 0;\n    } else if (input === null || _.isNaN(input)) {\n      value = null;\n    } else if (typeof input === 'string') {\n      if (options.zeroFormat && input === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        for (kind in formats) {\n          regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n          if (regexp && input.match(regexp)) {\n            unformatFunction = formats[kind].unformat;\n            break;\n          }\n        }\n        unformatFunction = unformatFunction || _numeral._.stringToNumber;\n        value = unformatFunction(input);\n      }\n    } else {\n      value = Number(input) || null;\n    }\n    return new Numeral(input, value);\n  };\n\n  // version number\n  _numeral.version = VERSION;\n\n  // compare numeral object\n  _numeral.isNumeral = function (obj) {\n    return obj instanceof Numeral;\n  };\n\n  // helper functions\n  _numeral._ = _ = {\n    // formats numbers separators, decimals places, signs, abbreviations\n    numberToFormat: function numberToFormat(value, format, roundingFunction) {\n      var locale = locales[_numeral.options.currentLocale],\n        negP = false,\n        optDec = false,\n        leadingCount = 0,\n        abbr = '',\n        trillion = 1000000000000,\n        billion = 1000000000,\n        million = 1000000,\n        thousand = 1000,\n        decimal = '',\n        neg = false,\n        abbrForce,\n        // force abbreviation\n        abs,\n        min,\n        max,\n        power,\n        int,\n        precision,\n        signed,\n        thousands,\n        output;\n\n      // make sure we never format a null value\n      value = value || 0;\n      abs = Math.abs(value);\n\n      // see if we should use parentheses for negative number or if we should prefix with a sign\n      // if both are present we default to parentheses\n      if (_numeral._.includes(format, '(')) {\n        negP = true;\n        format = format.replace(/[\\(|\\)]/g, '');\n      } else if (_numeral._.includes(format, '+') || _numeral._.includes(format, '-')) {\n        signed = _numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n        format = format.replace(/[\\+|\\-]/g, '');\n      }\n\n      // see if abbreviation is wanted\n      if (_numeral._.includes(format, 'a')) {\n        abbrForce = format.match(/a(k|m|b|t)?/);\n        abbrForce = abbrForce ? abbrForce[1] : false;\n\n        // check for space before abbreviation\n        if (_numeral._.includes(format, ' a')) {\n          abbr = ' ';\n        }\n        format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n        if (abs >= trillion && !abbrForce || abbrForce === 't') {\n          // trillion\n          abbr += locale.abbreviations.trillion;\n          value = value / trillion;\n        } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n          // billion\n          abbr += locale.abbreviations.billion;\n          value = value / billion;\n        } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n          // million\n          abbr += locale.abbreviations.million;\n          value = value / million;\n        } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n          // thousand\n          abbr += locale.abbreviations.thousand;\n          value = value / thousand;\n        }\n      }\n\n      // check for optional decimals\n      if (_numeral._.includes(format, '[.]')) {\n        optDec = true;\n        format = format.replace('[.]', '.');\n      }\n\n      // break number and format\n      int = value.toString().split('.')[0];\n      precision = format.split('.')[1];\n      thousands = format.indexOf(',');\n      leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n      if (precision) {\n        if (_numeral._.includes(precision, '[')) {\n          precision = precision.replace(']', '');\n          precision = precision.split('[');\n          decimal = _numeral._.toFixed(value, precision[0].length + precision[1].length, roundingFunction, precision[1].length);\n        } else {\n          decimal = _numeral._.toFixed(value, precision.length, roundingFunction);\n        }\n        int = decimal.split('.')[0];\n        if (_numeral._.includes(decimal, '.')) {\n          decimal = locale.delimiters.decimal + decimal.split('.')[1];\n        } else {\n          decimal = '';\n        }\n        if (optDec && Number(decimal.slice(1)) === 0) {\n          decimal = '';\n        }\n      } else {\n        int = _numeral._.toFixed(value, 0, roundingFunction);\n      }\n\n      // check abbreviation again after rounding\n      if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n        int = String(Number(int) / 1000);\n        switch (abbr) {\n          case locale.abbreviations.thousand:\n            abbr = locale.abbreviations.million;\n            break;\n          case locale.abbreviations.million:\n            abbr = locale.abbreviations.billion;\n            break;\n          case locale.abbreviations.billion:\n            abbr = locale.abbreviations.trillion;\n            break;\n        }\n      }\n\n      // format number\n      if (_numeral._.includes(int, '-')) {\n        int = int.slice(1);\n        neg = true;\n      }\n      if (int.length < leadingCount) {\n        for (var i = leadingCount - int.length; i > 0; i--) {\n          int = '0' + int;\n        }\n      }\n      if (thousands > -1) {\n        int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n      }\n      if (format.indexOf('.') === 0) {\n        int = '';\n      }\n      output = int + decimal + (abbr ? abbr : '');\n      if (negP) {\n        output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n      } else {\n        if (signed >= 0) {\n          output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n        } else if (neg) {\n          output = '-' + output;\n        }\n      }\n      return output;\n    },\n    // unformats numbers separators, decimals places, signs, abbreviations\n    stringToNumber: function stringToNumber(string) {\n      var locale = locales[options.currentLocale],\n        stringOriginal = string,\n        abbreviations = {\n          thousand: 3,\n          million: 6,\n          billion: 9,\n          trillion: 12\n        },\n        abbreviation,\n        value,\n        i,\n        regexp;\n      if (options.zeroFormat && string === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        value = 1;\n        if (locale.delimiters.decimal !== '.') {\n          string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n        }\n        for (abbreviation in abbreviations) {\n          regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n          if (stringOriginal.match(regexp)) {\n            value *= Math.pow(10, abbreviations[abbreviation]);\n            break;\n          }\n        }\n\n        // check for negative number\n        value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n        // remove non numbers\n        string = string.replace(/[^0-9\\.]+/g, '');\n        value *= Number(string);\n      }\n      return value;\n    },\n    isNaN: function (_isNaN) {\n      function isNaN(_x) {\n        return _isNaN.apply(this, arguments);\n      }\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n      return isNaN;\n    }(function (value) {\n      return typeof value === 'number' && isNaN(value);\n    }),\n    includes: function includes(string, search) {\n      return string.indexOf(search) !== -1;\n    },\n    insert: function insert(string, subString, start) {\n      return string.slice(0, start) + subString + string.slice(start);\n    },\n    reduce: function reduce(array, callback /*, initialValue*/) {\n      if (this === null) {\n        throw new TypeError('Array.prototype.reduce called on null or undefined');\n      }\n      if (typeof callback !== 'function') {\n        throw new TypeError(callback + ' is not a function');\n      }\n      var t = Object(array),\n        len = t.length >>> 0,\n        k = 0,\n        value;\n      if (arguments.length === 3) {\n        value = arguments[2];\n      } else {\n        while (k < len && !(k in t)) {\n          k++;\n        }\n        if (k >= len) {\n          throw new TypeError('Reduce of empty array with no initial value');\n        }\n        value = t[k++];\n      }\n      for (; k < len; k++) {\n        if (k in t) {\n          value = callback(value, t[k], k, t);\n        }\n      }\n      return value;\n    },\n    /**\n     * Computes the multiplier necessary to make x >= 1,\n     * effectively eliminating miscalculations caused by\n     * finite precision.\n     */\n    multiplier: function multiplier(x) {\n      var parts = x.toString().split('.');\n      return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n    },\n    /**\n     * Given a variable number of arguments, returns the maximum\n     * multiplier that must be used to normalize an operation involving\n     * all of them.\n     */\n    correctionFactor: function correctionFactor() {\n      var args = Array.prototype.slice.call(arguments);\n      return args.reduce(function (accum, next) {\n        var mn = _.multiplier(next);\n        return accum > mn ? accum : mn;\n      }, 1);\n    },\n    /**\n     * Implementation of toFixed() that treats floats more like decimals\n     *\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n     * problems for accounting- and finance-related software.\n     */\n    toFixed: function toFixed(value, maxDecimals, roundingFunction, optionals) {\n      var splitValue = value.toString().split('.'),\n        minDecimals = maxDecimals - (optionals || 0),\n        boundedPrecision,\n        optionalsRegExp,\n        power,\n        output;\n\n      // Use the smallest precision value possible to avoid errors from floating point representation\n      if (splitValue.length === 2) {\n        boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n      } else {\n        boundedPrecision = minDecimals;\n      }\n      power = Math.pow(10, boundedPrecision);\n\n      // Multiply up by precision, round accurately, then divide and use native toFixed():\n      output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n      if (optionals > maxDecimals - boundedPrecision) {\n        optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n        output = output.replace(optionalsRegExp, '');\n      }\n      return output;\n    }\n  };\n\n  // avaliable options\n  _numeral.options = options;\n\n  // avaliable formats\n  _numeral.formats = formats;\n\n  // avaliable formats\n  _numeral.locales = locales;\n\n  // This function sets the current locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n  _numeral.locale = function (key) {\n    if (key) {\n      options.currentLocale = key.toLowerCase();\n    }\n    return options.currentLocale;\n  };\n\n  // This function provides access to the loaded locale data.  If\n  // no arguments are passed in, it will simply return the current\n  // global locale object.\n  _numeral.localeData = function (key) {\n    if (!key) {\n      return locales[options.currentLocale];\n    }\n    key = key.toLowerCase();\n    if (!locales[key]) {\n      throw new Error('Unknown locale : ' + key);\n    }\n    return locales[key];\n  };\n  _numeral.reset = function () {\n    for (var property in defaults) {\n      options[property] = defaults[property];\n    }\n  };\n  _numeral.zeroFormat = function (format) {\n    options.zeroFormat = typeof format === 'string' ? format : null;\n  };\n  _numeral.nullFormat = function (format) {\n    options.nullFormat = typeof format === 'string' ? format : null;\n  };\n  _numeral.defaultFormat = function (format) {\n    options.defaultFormat = typeof format === 'string' ? format : '0.0';\n  };\n  _numeral.register = function (type, name, format) {\n    name = name.toLowerCase();\n    if (this[type + 's'][name]) {\n      throw new TypeError(name + ' ' + type + ' already registered.');\n    }\n    this[type + 's'][name] = format;\n    return format;\n  };\n  _numeral.validate = function (val, culture) {\n    var _decimalSep, _thousandSep, _currSymbol, _valArray, _abbrObj, _thousandRegEx, localeData, temp;\n\n    //coerce val to string\n    if (typeof val !== 'string') {\n      val += '';\n      if (console.warn) {\n        console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n      }\n    }\n\n    //trim whitespaces from either sides\n    val = val.trim();\n\n    //if val is just digits return true\n    if (!!val.match(/^\\d+$/)) {\n      return true;\n    }\n\n    //if val is empty return false\n    if (val === '') {\n      return false;\n    }\n\n    //get the decimal and thousands separator from numeral.localeData\n    try {\n      //check if the culture is understood by numeral. if not, default it to current locale\n      localeData = _numeral.localeData(culture);\n    } catch (e) {\n      localeData = _numeral.localeData(_numeral.locale());\n    }\n\n    //setup the delimiters and currency symbol based on culture/locale\n    _currSymbol = localeData.currency.symbol;\n    _abbrObj = localeData.abbreviations;\n    _decimalSep = localeData.delimiters.decimal;\n    if (localeData.delimiters.thousands === '.') {\n      _thousandSep = '\\\\.';\n    } else {\n      _thousandSep = localeData.delimiters.thousands;\n    }\n\n    // validating currency symbol\n    temp = val.match(/^[^\\d]+/);\n    if (temp !== null) {\n      val = val.substr(1);\n      if (temp[0] !== _currSymbol) {\n        return false;\n      }\n    }\n\n    //validating abbreviation symbol\n    temp = val.match(/[^\\d]+$/);\n    if (temp !== null) {\n      val = val.slice(0, -1);\n      if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n        return false;\n      }\n    }\n    _thousandRegEx = new RegExp(_thousandSep + '{2}');\n    if (!val.match(/[^\\d.,]/g)) {\n      _valArray = val.split(_decimalSep);\n      if (_valArray.length > 2) {\n        return false;\n      } else {\n        if (_valArray.length < 2) {\n          return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx);\n        } else {\n          if (_valArray[0].length === 1) {\n            return !!_valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n          } else {\n            return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  /************************************\n      Numeral Prototype\n  ************************************/\n\n  _numeral.fn = Numeral.prototype = {\n    clone: function clone() {\n      return _numeral(this);\n    },\n    format: function format(inputString, roundingFunction) {\n      var value = this._value,\n        format = inputString || options.defaultFormat,\n        kind,\n        output,\n        formatFunction;\n\n      // make sure we have a roundingFunction\n      roundingFunction = roundingFunction || Math.round;\n\n      // format based on value\n      if (value === 0 && options.zeroFormat !== null) {\n        output = options.zeroFormat;\n      } else if (value === null && options.nullFormat !== null) {\n        output = options.nullFormat;\n      } else {\n        for (kind in formats) {\n          if (format.match(formats[kind].regexps.format)) {\n            formatFunction = formats[kind].format;\n            break;\n          }\n        }\n        formatFunction = formatFunction || _numeral._.numberToFormat;\n        output = formatFunction(value, format, roundingFunction);\n      }\n      return output;\n    },\n    value: function value() {\n      return this._value;\n    },\n    input: function input() {\n      return this._input;\n    },\n    set: function set(value) {\n      this._value = Number(value);\n      return this;\n    },\n    add: function add(value) {\n      var corrFactor = _.correctionFactor.call(null, this._value, value);\n      function cback(accum, curr, currI, O) {\n        return accum + Math.round(corrFactor * curr);\n      }\n      this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n      return this;\n    },\n    subtract: function subtract(value) {\n      var corrFactor = _.correctionFactor.call(null, this._value, value);\n      function cback(accum, curr, currI, O) {\n        return accum - Math.round(corrFactor * curr);\n      }\n      this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n      return this;\n    },\n    multiply: function multiply(value) {\n      function cback(accum, curr, currI, O) {\n        var corrFactor = _.correctionFactor(accum, curr);\n        return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n      }\n      this._value = _.reduce([this._value, value], cback, 1);\n      return this;\n    },\n    divide: function divide(value) {\n      function cback(accum, curr, currI, O) {\n        var corrFactor = _.correctionFactor(accum, curr);\n        return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n      }\n      this._value = _.reduce([this._value, value], cback);\n      return this;\n    },\n    difference: function difference(value) {\n      return Math.abs(_numeral(this._value).subtract(value).value());\n    }\n  };\n\n  /************************************\n      Default Locale && Format\n  ************************************/\n\n  _numeral.register('locale', 'en', {\n    delimiters: {\n      thousands: ',',\n      decimal: '.'\n    },\n    abbreviations: {\n      thousand: 'k',\n      million: 'm',\n      billion: 'b',\n      trillion: 't'\n    },\n    ordinal: function ordinal(number) {\n      var b = number % 10;\n      return ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    },\n    currency: {\n      symbol: '$'\n    }\n  });\n  (function () {\n    _numeral.register('format', 'bps', {\n      regexps: {\n        format: /(BPS)/,\n        unformat: /(BPS)/\n      },\n      format: function format(value, _format, roundingFunction) {\n        var space = _numeral._.includes(_format, ' BPS') ? ' ' : '',\n          output;\n        value = value * 10000;\n\n        // check for space before BPS\n        _format = _format.replace(/\\s?BPS/, '');\n        output = _numeral._.numberToFormat(value, _format, roundingFunction);\n        if (_numeral._.includes(output, ')')) {\n          output = output.split('');\n          output.splice(-1, 0, space + 'BPS');\n          output = output.join('');\n        } else {\n          output = output + space + 'BPS';\n        }\n        return output;\n      },\n      unformat: function unformat(string) {\n        return +(_numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n      }\n    });\n  })();\n  (function () {\n    var decimal = {\n        base: 1000,\n        suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      },\n      binary = {\n        base: 1024,\n        suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n      };\n    var allSuffixes = decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n      return decimal.suffixes.indexOf(item) < 0;\n    }));\n    var unformatRegex = allSuffixes.join('|');\n    // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n    unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n    _numeral.register('format', 'bytes', {\n      regexps: {\n        format: /([0\\s]i?b)/,\n        unformat: new RegExp(unformatRegex)\n      },\n      format: function format(value, _format2, roundingFunction) {\n        var output,\n          bytes = _numeral._.includes(_format2, 'ib') ? binary : decimal,\n          suffix = _numeral._.includes(_format2, ' b') || _numeral._.includes(_format2, ' ib') ? ' ' : '',\n          power,\n          min,\n          max;\n\n        // check for space before\n        _format2 = _format2.replace(/\\s?i?b/, '');\n        for (power = 0; power <= bytes.suffixes.length; power++) {\n          min = Math.pow(bytes.base, power);\n          max = Math.pow(bytes.base, power + 1);\n          if (value === null || value === 0 || value >= min && value < max) {\n            suffix += bytes.suffixes[power];\n            if (min > 0) {\n              value = value / min;\n            }\n            break;\n          }\n        }\n        output = _numeral._.numberToFormat(value, _format2, roundingFunction);\n        return output + suffix;\n      },\n      unformat: function unformat(string) {\n        var value = _numeral._.stringToNumber(string),\n          power,\n          bytesMultiplier;\n        if (value) {\n          for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n            if (_numeral._.includes(string, decimal.suffixes[power])) {\n              bytesMultiplier = Math.pow(decimal.base, power);\n              break;\n            }\n            if (_numeral._.includes(string, binary.suffixes[power])) {\n              bytesMultiplier = Math.pow(binary.base, power);\n              break;\n            }\n          }\n          value *= bytesMultiplier || 1;\n        }\n        return value;\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'currency', {\n      regexps: {\n        format: /(\\$)/\n      },\n      format: function format(value, _format3, roundingFunction) {\n        var locale = _numeral.locales[_numeral.options.currentLocale],\n          symbols = {\n            before: _format3.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n            after: _format3.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n          },\n          output,\n          symbol,\n          i;\n\n        // strip format of spaces and $\n        _format3 = _format3.replace(/\\s?\\$\\s?/, '');\n\n        // format the number\n        output = _numeral._.numberToFormat(value, _format3, roundingFunction);\n\n        // update the before and after based on value\n        if (value >= 0) {\n          symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n          symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n        } else if (value < 0 && !_numeral._.includes(symbols.before, '-') && !_numeral._.includes(symbols.before, '(')) {\n          symbols.before = '-' + symbols.before;\n        }\n\n        // loop through each before symbol\n        for (i = 0; i < symbols.before.length; i++) {\n          symbol = symbols.before[i];\n          switch (symbol) {\n            case '$':\n              output = _numeral._.insert(output, locale.currency.symbol, i);\n              break;\n            case ' ':\n              output = _numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n              break;\n          }\n        }\n\n        // loop through each after symbol\n        for (i = symbols.after.length - 1; i >= 0; i--) {\n          symbol = symbols.after[i];\n          switch (symbol) {\n            case '$':\n              output = i === symbols.after.length - 1 ? output + locale.currency.symbol : _numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n              break;\n            case ' ':\n              output = i === symbols.after.length - 1 ? output + ' ' : _numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n              break;\n          }\n        }\n        return output;\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'exponential', {\n      regexps: {\n        format: /(e\\+|e-)/,\n        unformat: /(e\\+|e-)/\n      },\n      format: function format(value, _format4, roundingFunction) {\n        var output,\n          exponential = typeof value === 'number' && !_numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n          parts = exponential.split('e');\n        _format4 = _format4.replace(/e[\\+|\\-]{1}0/, '');\n        output = _numeral._.numberToFormat(Number(parts[0]), _format4, roundingFunction);\n        return output + 'e' + parts[1];\n      },\n      unformat: function unformat(string) {\n        var parts = _numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n          value = Number(parts[0]),\n          power = Number(parts[1]);\n        power = _numeral._.includes(string, 'e-') ? power *= -1 : power;\n        function cback(accum, curr, currI, O) {\n          var corrFactor = _numeral._.correctionFactor(accum, curr),\n            num = accum * corrFactor * (curr * corrFactor) / (corrFactor * corrFactor);\n          return num;\n        }\n        return _numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'ordinal', {\n      regexps: {\n        format: /(o)/\n      },\n      format: function format(value, _format5, roundingFunction) {\n        var locale = _numeral.locales[_numeral.options.currentLocale],\n          output,\n          ordinal = _numeral._.includes(_format5, ' o') ? ' ' : '';\n\n        // check for space before\n        _format5 = _format5.replace(/\\s?o/, '');\n        ordinal += locale.ordinal(value);\n        output = _numeral._.numberToFormat(value, _format5, roundingFunction);\n        return output + ordinal;\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'percentage', {\n      regexps: {\n        format: /(%)/,\n        unformat: /(%)/\n      },\n      format: function format(value, _format6, roundingFunction) {\n        var space = _numeral._.includes(_format6, ' %') ? ' ' : '',\n          output;\n        if (_numeral.options.scalePercentBy100) {\n          value = value * 100;\n        }\n\n        // check for space before %\n        _format6 = _format6.replace(/\\s?\\%/, '');\n        output = _numeral._.numberToFormat(value, _format6, roundingFunction);\n        if (_numeral._.includes(output, ')')) {\n          output = output.split('');\n          output.splice(-1, 0, space + '%');\n          output = output.join('');\n        } else {\n          output = output + space + '%';\n        }\n        return output;\n      },\n      unformat: function unformat(string) {\n        var number = _numeral._.stringToNumber(string);\n        if (_numeral.options.scalePercentBy100) {\n          return number * 0.01;\n        }\n        return number;\n      }\n    });\n  })();\n  (function () {\n    _numeral.register('format', 'time', {\n      regexps: {\n        format: /(:)/,\n        unformat: /(:)/\n      },\n      format: function format(value, _format7, roundingFunction) {\n        var hours = Math.floor(value / 60 / 60),\n          minutes = Math.floor((value - hours * 60 * 60) / 60),\n          seconds = Math.round(value - hours * 60 * 60 - minutes * 60);\n        return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n      },\n      unformat: function unformat(string) {\n        var timeArray = string.split(':'),\n          seconds = 0;\n\n        // turn hours and minutes into seconds and add them all up\n        if (timeArray.length === 3) {\n          // hours\n          seconds = seconds + Number(timeArray[0]) * 60 * 60;\n          // minutes\n          seconds = seconds + Number(timeArray[1]) * 60;\n          // seconds\n          seconds = seconds + Number(timeArray[2]);\n        } else if (timeArray.length === 2) {\n          // minutes\n          seconds = seconds + Number(timeArray[0]) * 60;\n          // seconds\n          seconds = seconds + Number(timeArray[1]);\n        }\n        return Number(seconds);\n      }\n    });\n  })();\n  return _numeral;\n});","import React from 'react';\nimport numeral from \"numeral\";\n\n\nconst PriceCard = (props) => {\n    const { value , style, text} = props\n    return (\n        text? ( <div style={{...style, textTransform: \"capitalize\"}} className=\"price-card-dd\">\n            \n        {value}\n    </div>): ( <div style={{...style}} className=\"price-card-dd\">\n            \n            {\"\\u20A6\"}\n            {numeral(\n                value\n            ).format(\"0,0\")}\n        </div>)\n       \n    );\n}\n\nexport default PriceCard;"],"sourceRoot":""}